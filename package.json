{
	"name": "xuxu-git",
	"displayName": "XUXU Git Tool",
	"description": "超级增强 VS Code 中的 Git 功能——通过 Git blame 注释和 CodeLens 一目了然地可视化代码作者信息，无缝导航和探索 Git 仓库，通过丰富的可视化和强大的比较命令获取有价值的见解，等等。",
	"version": "1.15.1",
	"engines": {
	  "vscode": "^1.82.0"
	},
	"license": "SEE LICENSE IN LICENSE",
	"publisher": "Xu Teng",
	"author": {
	  "name": "Xu Teng",
	  "email": "xuxuchan1988@gmail.com"
	},
	"homepage": "https://github.com/xuxuchan",
	"bugs": {
	  "url": "https://github.com/xuxuchan/vscode-xuxu-git/issues"
	},
	"repository": {
	  "type": "git",
	  "url": "https://github.com/xuxuchan/vscode-xuxu-git.git"
	},
	"main": "./dist/gitlens.js",
	"browser": "./dist/browser/gitlens.js",
	"icon": "images/xuxu-gitlens-icon.png",
	"preview": false,
	"badges": [
	  {
		"url": "https://github.com/xuxuchan/vscode-xuxu-git",
		"href": "https://github.com/xuxuchan/vscode-xuxu-git",
		"description": "在 #git 频道加入我们的聊天"
	  }
	],
	"categories": [
	  "Other",
	  "SCM Providers"
	],
	"galleryBanner": {
	  "color": "#8647ae",
	  "theme": "dark"
	},
	"keywords": [
	  "gitlens",
	  "git",
	  "blame",
	  "log",
	  "annotation",
	  "multi-root ready"
	],
	"activationEvents": [
	  "onAuthenticationRequest:gitlens-gitkraken",
	  "onFileSystem:gitlens",
	  "onWebviewPanel:gitlens.focus",
	  "onWebviewPanel:gitlens.graph",
	  "onWebviewPanel:gitlens.patchDetails",
	  "onWebviewPanel:gitlens.settings",
	  "onWebviewPanel:gitlens.timeline",
	  "onWebviewPanel:gitlens.welcome",
	  "onStartupFinished"
	],
	"capabilities": {
	  "virtualWorkspaces": true,
	  "untrustedWorkspaces": {
		"supported": "limited"
	  }
	},
	"contributes": {
	  "configuration": [
		{
		  "id": "current-line-blame",
		  "title": "Inline Blame",
		  "order": 10,
		  "properties": {
			"gitlens.currentLine.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "默认情况下，指定是否为当前行提供嵌入式责任注释。使用“切换行责任注释”命令 (`gitlens.toggleLineBlame`) 打开和关闭当前窗口的注释",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.currentLine.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在嵌入式责任注释中提供有关引入提交的拉取请求（如果有）的信息。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.currentLine.format": {
			  "type": "string",
			  "default": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",
			  "markdownDescription": "指定嵌入式责任注释的格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)” 。 日期格式由 `#gitlens.currentLine.dateFormat#` 设置控制",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.currentLine.uncommittedChangesFormat": {
			  "type": "string",
			  "default": null,
			  "markdownDescription": "指定嵌入式责任注释的暂存更改格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)” 。 日期格式由 `#gitlens.currentLine.dateFormat#` 设置控制\n\n**注意：**将其设置为空字符串将禁用针对未提交更改的嵌入式责任注释。",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.currentLine.fontFamily": {
			  "type": "string",
			  "default": "",
			  "markdownDescription": "指定嵌入式责任注释的字体系列",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.currentLine.fontSize": {
			  "type": "number",
			  "default": 0,
			  "markdownDescription": "指定嵌入式责任注释的字体大小",
			  "scope": "window",
			  "order": 34
			},
			"gitlens.currentLine.fontStyle": {
			  "type": "string",
			  "default": "normal",
			  "markdownDescription": "指定嵌入式责任注释的字体样式",
			  "scope": "window",
			  "order": 35
			},
			"gitlens.currentLine.fontWeight": {
			  "type": "string",
			  "default": "normal",
			  "markdownDescription": "指定嵌入式责任注释的字体粗细",
			  "scope": "window",
			  "order": 36
			},
			"gitlens.currentLine.scrollable": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否可以在嵌入式责任注释超出视口范围时将其滚动到可视位置。 **注意：**将其设置为 `false` 将阻止悬停显示在注释上；将 `#gitlens.hovers.currentLine.over#` 设置为 `line` 以启用悬停显示在任何行上。",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.currentLine.dateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定如何格式化嵌入式责任注释的绝对日期（例如，使用 `${date}` 令牌）。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)。",
			  "scope": "window",
			  "order": 50
			}
		  }
		},
		{
		  "id": "git-code-lens",
		  "title": "Git CodeLens",
		  "order": 11,
		  "properties": {
			"gitlens.codeLens.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "默认情况下，指定是否提供任何 Git 代码透镜。使用“切换 Git 代码透镜”命令 (`gitlens.toggleCodeLens`) 打开和关闭当前窗口的 Git 代码透镜",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.codeLens.authors.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否提供“_作者_”代码透镜，显示文件或代码块的作者数量以及最突出的作者（如果有多个作者）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.codeLens.authors.command": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"gitlens.toggleFileBlame",
				"gitlens.toggleFileHeatmap",
				"gitlens.toggleFileChanges",
				"gitlens.toggleFileChangesOnly",
				"gitlens.diffWithPrevious",
				"gitlens.revealCommitInView",
				"gitlens.showCommitsInView",
				"gitlens.showQuickCommitDetails",
				"gitlens.showQuickCommitFileDetails",
				"gitlens.showQuickFileHistory",
				"gitlens.showQuickRepoHistory",
				"gitlens.openCommitOnRemote",
				"gitlens.copyRemoteCommitUrl",
				"gitlens.openFileOnRemote",
				"gitlens.copyRemoteFileUrl"
			  ],
			  "enumDescriptions": [
				"禁用单击交互",
				"切换文件责任",
				"切换文件热图",
				"切换自提交之前文件更改",
				"切换提交后的文件更改",
				"比较当前提交的文件与上一个提交",
				"在侧边栏显示提交",
				"搜索范围内的提交",
				"显示检查快速选择菜单",
				"显示提交文件详细信息快速选择菜单",
				"显示文件历史记录快速选择菜单",
				"显示分支历史记录快速选择菜单",
				"在远程服务上打开提交（如果可用）",
				"将远程提交 URL 复制到剪贴板（如果可用）",
				"在远程服务上打开文件修订版（如果可用）",
				"将远程文件 URL 复制到剪贴板（如果可用）"
			  ],
			  "default": "gitlens.toggleFileBlame",
			  "markdownDescription": "指定单击“_作者_”代码透镜时要执行的命令",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.codeLens.recentChange.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否提供“_最近更改_”代码透镜，显示文件或代码块最近提交的作者和日期",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.codeLens.recentChange.command": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"gitlens.toggleFileBlame",
				"gitlens.toggleFileHeatmap",
				"gitlens.toggleFileChanges",
				"gitlens.toggleFileChangesOnly",
				"gitlens.diffWithPrevious",
				"gitlens.revealCommitInView",
				"gitlens.showCommitsInView",
				"gitlens.showQuickCommitDetails",
				"gitlens.showQuickCommitFileDetails",
				"gitlens.showQuickFileHistory",
				"gitlens.showQuickRepoHistory",
				"gitlens.openCommitOnRemote",
				"gitlens.copyRemoteCommitUrl",
				"gitlens.openFileOnRemote",
				"gitlens.copyRemoteFileUrl"
			  ],
			  "enumDescriptions": [
				"禁用点击交互",
				"切换文件责任",
				"切换文件热图",
				"切换提交前的文件更改",
				"切换提交中的文件更改",
				"将当前提交的文件与之前的提交进行比较",
				"在侧边栏中显示提交",
				"显示检查",
				"显示检查快速选择菜单",
				"显示提交文件详细信息快速选择菜单",
				"显示文件历史记录快速选择菜单",
				"显示分支历史记录快速选择菜单",
				"在远程服务上打开提交（如果可用）",
				"将远程提交URL复制到剪贴板（如果可用）",
				"在远程服务上打开文件修订版（如果可用）",
				"将远程文件URL复制到剪贴板（如果可用）"
			  ],
			  "default": "gitlens.showQuickCommitFileDetails",
			  "markdownDescription": "指定单击“_最近更改_”代码透镜时要执行的命令",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.codeLens.scopes": {
			  "type": "array",
			  "default": [
				"document",
				"containers"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "document",
				  "containers",
				  "blocks"
				],
				"enumDescriptions": [
				  "Adds CodeLens at the top of the document",
				  "Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)",
				  "Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"
				]
			  },
			  "minItems": 0,
			  "maxItems": 3,
			  "uniqueItems": true,
			  "markdownDescription": "指定在文档中何处显示 Git 代码透镜",
			  "scope": "language-overridable",
			  "order": 40
			},
			"gitlens.codeLens.symbolScopes": {
			  "type": "array",
			  "items": {
				"type": "string"
			  },
			  "uniqueItems": true,
			  "markdownDescription": "指定一组文档符号，Git 代码透镜将在其中显示或不显示在文档中。用 `!` 作为前缀表示不为该符号提供 Git 代码透镜。必须是 `SymbolKind` 的成员",
			  "scope": "language-overridable",
			  "order": 50
			},
			"gitlens.codeLens.includeSingleLineSymbols": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是否为仅占一行符号提供任何 Git 代码透镜",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
			  "type": "string",
			  "default": "$(ellipsis)",
			  "markdownDescription": "当存在未保存的更改时，指定要在“_最近更改_”和“_作者_”代码透镜两者位置显示的字符串",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
			  "type": "string",
			  "default": "$(ellipsis)",
			  "markdownDescription": "当存在未保存的更改时，指定要在“_最近更改_”代码透镜位置显示的字符串",
			  "scope": "window",
			  "order": 71
			},
			"gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
			  "type": "string",
			  "default": "$(ellipsis)",
			  "markdownDescription": "当存在未保存的更改时，指定要在“_作者_”代码透镜位置显示的字符串",
			  "scope": "window",
			  "order": 72
			},
			"gitlens.codeLens.dateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定如何在 Git 代码透镜中格式化绝对日期。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)。",
			  "scope": "window",
			  "order": 73
			},
			"gitlens.codeLens.scopesByLanguage": {
			  "deprecationMessage": "Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead",
			  "markdownDeprecationMessage": "Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead"
			}
		  }
		},
		{
		  "id": "status-bar-blame",
		  "title": "Status Bar Blame",
		  "order": 12,
		  "properties": {
			"gitlens.statusBar.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在状态栏中提供责任信息",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.statusBar.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在状态栏中提供有关引入提交的拉取请求（如果有）的信息。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.statusBar.format": {
			  "type": "string",
			  "default": "${author}, ${agoOrDate}${' via 'pullRequest}",
			  "markdownDescription": "指定状态栏中责任信息的格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)” 。 日期格式由 `#gitlens.statusBar.dateFormat#` 设置控制",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.statusBar.alignment": {
			  "type": "string",
			  "default": "right",
			  "enum": [
				"left",
				"right"
			  ],
			  "enumDescriptions": [
				"左对齐",
				"右对齐"
			  ],
			  "markdownDescription": "指定状态栏中责任的对齐方式",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.statusBar.command": {
			  "type": "string",
			  "default": "gitlens.showQuickCommitDetails",
			  "enum": [
				"gitlens.toggleFileBlame",
				"gitlens.toggleFileHeatmap",
				"gitlens.toggleFileChanges",
				"gitlens.toggleFileChangesOnly",
				"gitlens.toggleCodeLens",
				"gitlens.diffWithPrevious",
				"gitlens.diffWithWorking",
				"gitlens.revealCommitInView",
				"gitlens.showCommitsInView",
				"gitlens.showQuickCommitDetails",
				"gitlens.showQuickCommitFileDetails",
				"gitlens.showQuickFileHistory",
				"gitlens.showQuickRepoHistory",
				"gitlens.openCommitOnRemote",
				"gitlens.copyRemoteCommitUrl",
				"gitlens.openFileOnRemote",
				"gitlens.copyRemoteFileUrl"
			  ],
			  "enumDescriptions": [
				"切换文件责任",
				"切换文件热图",
				"切换提交前的文件更改",
				"切换提交中的文件更改",
				"切换 Git CodeLens",
				"将当前行提交与之前的提交进行比较",
				"将当前行提交与工作树进行比较",
				"在侧边栏中显示提交",
				"显示检查",
				"显示检查快速选择菜单",
				"显示提交文件详细信息快速选择菜单",
				"显示文件历史记录快速选择菜单",
				"显示分支历史记录快速选择菜单",
				"在远程服务上打开提交（如果可用）",
				"将远程提交 URL 复制到剪贴板（如果可用）",
				"在远程服务上打开文件修订版（如果可用）",
				"将远程文件 URL 复制到剪贴板（如果可用）"
			  ],
			  "markdownDescription": "指定单击责任状态栏项时要执行的命令",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.statusBar.tooltipFormat": {
			  "type": "string",
			  "default": "${avatar}  __${author}__, ${ago}${' via 'pullRequest}   _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
			  "editPresentation": "multilineText",
			  "markdownDescription": "指定悬停于状态栏中责任信息上时显示的格式（markdown 格式）。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.statusBar.reduceFlicker": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在更改行时避免清除以前的责任信息以减少状态栏“闪烁”",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.statusBar.dateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定如何在状态栏中责任信息中格式化绝对日期（例如，使用 `${date}` 令牌）。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)。",
			  "scope": "window",
			  "order": 80
			}
		  }
		},
		{
		  "id": "hovers",
		  "title": "Hovers",
		  "order": 13,
		  "properties": {
			"gitlens.hovers.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否提供任何悬停信息",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.hovers.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定悬停信息中是否显示头像图像",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.hovers.avatarSize": {
			  "type": "number",
			  "default": 32,
			  "markdownDescription": "指定悬停信息中头像图像的大小",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.hovers.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定悬停信息中是否提供有关引入提交的拉取请求（如果有）的信息。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.hovers.autolinks.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在提交消息中自动链接外部资源",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.hovers.autolinks.enhanced": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否查找有关在提交消息中自动链接的外部资源的更多详细信息。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.hovers.currentLine.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否为当前行提供任何悬停信息",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.hovers.currentLine.over": {
			  "type": "string",
			  "default": "annotation",
			  "enum": [
				"annotation",
				"line"
			  ],
			  "enumDescriptions": [
				"仅在悬停在行注释上时显示",
				"悬停在行上任何位置时显示"
			  ],
			  "markdownDescription": "指定何时触发当前行的悬停信息",
			  "scope": "window",
			  "order": 41
			},
			"gitlens.hovers.currentLine.details": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否为当前行提供“_提交详细信息_”悬停信息",
			  "scope": "window",
			  "order": 42
			},
			"gitlens.hovers.currentLine.changes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否为当前行提供“_更改 (diff)_”悬停信息",
			  "scope": "window",
			  "order": 43
			},
			"gitlens.hovers.annotations.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定显示责任注释时是否提供任何悬停信息",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.hovers.annotations.over": {
			  "type": "string",
			  "default": "line",
			  "enum": [
				"annotation",
				"line"
			  ],
			  "enumDescriptions": [
				"仅在悬停在行注释上时显示",
				"悬停在行上任何位置时显示"
			  ],
			  "markdownDescription": "指定显示责任注释时触发悬停信息的时间",
			  "scope": "window",
			  "order": 51
			},
			"gitlens.hovers.annotations.details": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定显示责任注释时是否为所有行提供“_提交详细信息_”悬停信息",
			  "scope": "window",
			  "order": 52
			},
			"gitlens.hovers.annotations.changes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定显示责任注释时是否为所有行提供“_更改 (diff)_”悬停信息",
			  "scope": "window",
			  "order": 53
			},
			"gitlens.hovers.detailsMarkdownFormat": {
			  "type": "string",
			  "default": "${avatar}  __${author}__, ${ago}${' via 'pullRequest}   _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
			  "editPresentation": "multilineText",
			  "markdownDescription": "指定“_提交详细信息_”悬停信息的格式（markdown 格式）。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.hovers.changesDiff": {
			  "type": "string",
			  "default": "line",
			  "enum": [
				"line",
				"hunk"
			  ],
			  "enumDescriptions": [
				"仅显示行的更改",
				"显示相关更改集"
			  ],
			  "markdownDescription": "指定在“_更改 (diff)_”悬停信息中仅显示对行的更改还是显示相关的更改集",
			  "scope": "window",
			  "order": 70
			}
		  }
		},
		{
		  "id": "views",
		  "title": "Views",
		  "order": 20,
		  "properties": {
			"gitlens.views.collapseWorktreesWhenPossible": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在视图中可能的情况下，是否尝试将打开的工作区折叠成单个（公共）存储库",
			  "scope": "window",
			  "order": 1
			},
			"gitlens.views.defaultItemLimit": {
			  "type": "number",
			  "default": 10,
			  "markdownDescription": "指定视图列表中显示的默认项目数量。 使用 0 指定没有限制",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.pageItemLimit": {
			  "type": "number",
			  "default": 40,
			  "markdownDescription": "指定分页查看列表时每页显示的项目数量。 使用 0 指定没有限制",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.showRelativeDateMarkers": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在视图的修订历史记录（提交历史）中显示相对日期标记（“不到一周前”、“超过一周前”、“超过一个月前”等）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.formats.commits.label": {
			  "type": "string",
			  "default": "${❰ tips|11? ❱➤  }${message}",
			  "markdownDescription": "指定视图中提交的格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.formats.commits.description": {
			  "type": "string",
			  "default": "${author, }${agoOrDate}",
			  "markdownDescription": "指定视图中提交的描述格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.formats.commits.tooltip": {
			  "type": "string",
			  "default": "${link}${'  •  'changesDetail}${'    'tips} \\\n${avatar}  __${author}__, ${ago}${' via 'pullRequest}   _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
			  "markdownDescription": "指定视图中提交的工具提示格式（markdown 格式）。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.formats.commits.tooltipWithStatus": {
			  "type": "string",
			  "default": "${link}${' via 'pullRequest}  •  {{slot-status}}${'  •  'changesDetail}${'    'tips}\n\n${avatar}  __${author}__, ${ago}   _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
			  "markdownDescription": "指定视图中“文件”提交的工具提示格式（markdown 格式）。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.formats.files.label": {
			  "type": "string",
			  "default": "${working  }${file}",
			  "markdownDescription": "指定视图中文件的格式。请参阅 GitLens 文档中的“[_文件令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#file-tokens)”",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.formats.files.description": {
			  "type": "string",
			  "default": "${directory}${  ←  originalPath}",
			  "markdownDescription": "指定视图中文件的描述格式。请参阅 GitLens 文档中的“[_文件令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#file-tokens)”",
			  "scope": "window",
			  "order": 41
			},
			"gitlens.views.formats.stashes.label": {
			  "type": "string",
			  "default": "${message}",
			  "markdownDescription": "指定视图中暂存区的格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.views.formats.stashes.description": {
			  "type": "string",
			  "default": "${stashOnRef, }${agoOrDate}",
			  "markdownDescription": "指定视图中暂存区的描述格式。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 51
			},
			"gitlens.views.formats.stashes.tooltip": {
			  "type": "string",
			  "default": "${link}${' on `'stashOnRef`}${'  •  'changesDetail} \\\n  ${ago}   _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
			  "markdownDescription": "指定视图中暂存区的工具提示格式（markdown 格式）。请参阅 GitLens 文档中的“[_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)”",
			  "scope": "window",
			  "order": 52
			},
			"gitlens.views.openChangesInMultiDiffEditor": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在多文件差异编辑器（单个标签页）还是在单个差异编辑器（多个标签页）中打开多个更改",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.views.commitFileFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead"
			},
			"gitlens.views.commitFileDescriptionFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead"
			},
			"gitlens.views.commitFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.label` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.commits.files.label#` instead"
			},
			"gitlens.views.commitDescriptionFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.description` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.commits.description#` instead"
			},
			"gitlens.views.stashFileFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead"
			},
			"gitlens.views.stashFileDescriptionFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead"
			},
			"gitlens.views.stashFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.label` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.stashes.files.label#` instead"
			},
			"gitlens.views.stashDescriptionFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.description` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.stashes.description#` instead"
			},
			"gitlens.views.statusFileFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead"
			},
			"gitlens.views.statusFileDescriptionFormat": {
			  "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
			  "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead"
			}
		  }
		},
		{
		  "id": "commits-view",
		  "title": "Commits View",
		  "order": 21,
		  "properties": {
			"gitlens.views.commits.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch",
				"working"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将当前分支与用户选择的参考进行比较",
				"将工作树与用户选择的参考进行比较"
			  ],
			  "default": "working",
			  "markdownDescription": "指定在“_提交_”视图中是否显示当前分支或工作树与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.commits.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_提交_”视图中查询与当前分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.commits.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交_”视图中是否显示与当前分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.commits.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 23
			},
			"gitlens.views.commits.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.commits.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_提交_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.commits.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_提交_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.commits.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.commits.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.commits.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.commits.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_提交_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.commits.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交_”视图中是否显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.commits.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交_”视图中是否揭示提交，否则会在“_仓库_”视图中揭示",
			  "scope": "window",
			  "order": 50
			}
		  }
		},
		{
		  "id": "commit-details-view",
		  "title": "Inspect View",
		  "order": 22,
		  "properties": {
			"gitlens.views.commitDetails.autolinks.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在提交消息中自动链接外部资源",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.commitDetails.autolinks.enhanced": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否查找有关在提交消息中自动链接的外部资源的更多详细信息。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.commitDetails.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否查询关联的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.commitDetails.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.commitDetails.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_提交详细信息_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.commitDetails.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_提交详细信息_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.commitDetails.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.commitDetails.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交详细信息_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.commitDetails.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.commitDetails.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_提交详细信息_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.commitDetails.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_提交详细信息_”视图中是否显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "repositories-view",
		  "title": "Repositories View",
		  "order": 23,
		  "properties": {
			"gitlens.views.repositories.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch",
				"working"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将当前分支与用户选择的参考进行比较",
				"将工作树与用户选择的参考进行比较"
			  ],
			  "default": "working",
			  "markdownDescription": "指定在“_仓库_”视图中是否显示当前分支或工作树与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.repositories.showUpstreamStatus": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的当前分支的上游状态",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.repositories.includeWorkingTree": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“_仓库_”视图中是否包含每个仓库的工作树文件状态",
			  "scope": "window",
			  "order": 12
			},
			"gitlens.views.repositories.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_仓库_”视图中查询与分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.repositories.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示与分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.repositories.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.repositories.showCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库当前分支上的提交",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.repositories.showBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的分支",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.repositories.showRemotes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的远程仓库",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.repositories.showStashes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的暂存区",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.repositories.showTags": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的标签",
			  "scope": "window",
			  "order": 34
			},
			"gitlens.views.repositories.showContributors": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的贡献者",
			  "scope": "window",
			  "order": 35
			},
			"gitlens.views.repositories.showWorktrees": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的工作区",
			  "scope": "window",
			  "order": 36
			},
			"gitlens.views.repositories.showIncomingActivity": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示每个仓库的实验性传入活动",
			  "scope": "window",
			  "order": 37
			},
			"gitlens.views.repositories.autoRefresh": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在存储库或文件系统更改时是否自动刷新“_仓库_”视图",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.repositories.autoReveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在打开文件时是否在“_仓库_”视图中自动显示仓库",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.views.repositories.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.views.repositories.branches.layout": {
			  "type": "string",
			  "default": "tree",
			  "enum": [
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"以列表形式显示分支",
				"当分支名称包含斜杠 `/` 时以树形结构显示分支"
			  ],
			  "markdownDescription": "指定“_仓库_”视图将如何显示分支",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.views.repositories.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.repositories.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_仓库_”视图将如何显示文件",
			  "scope": "window",
			  "order": 80
			},
			"gitlens.views.repositories.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_仓库_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.repositories.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 81
			},
			"gitlens.views.repositories.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_仓库_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.repositories.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 82
			},
			"gitlens.views.repositories.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_仓库_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 83
			},
			"gitlens.views.repositories.compact": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“_仓库_”视图中是否显示紧凑的显示密度",
			  "scope": "window",
			  "order": 90
			},
			"gitlens.views.repositories.branches.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将分支与用户选择的参考进行比较"
			  ],
			  "default": "branch",
			  "markdownDescription": "指定在“_仓库_”视图中的每个分支下是否显示分支与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.views.repositories.enabled": {
			  "deprecationMessage": "Deprecated. This setting is no longer used",
			  "markdownDeprecationMessage": "Deprecated. This setting is no longer used"
			}
		  }
		},
		{
		  "id": "pull-request-view",
		  "title": "Pull Request View",
		  "order": 21,
		  "properties": {
			"gitlens.views.pullRequest.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.pullRequest.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_拉取请求_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.pullRequest.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_拉取请求_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.pullRequest.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.pullRequest.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_拉取请求_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.pullRequest.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.pullRequest.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_拉取请求_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.pullRequest.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_拉取请求_”视图中是否显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "file-history-view",
		  "title": "File History View",
		  "order": 24,
		  "properties": {
			"gitlens.views.fileHistory.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_文件历史_”视图中是否查询与提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.fileHistory.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_文件历史_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.fileHistory.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.fileHistory.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_文件历史_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.fileHistory.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_文件历史_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.fileHistory.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.fileHistory.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_文件历史_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.fileHistory.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.fileHistory.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_文件历史_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.fileHistory.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_文件历史_”视图中显示头像图像而不是状态图标",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.advanced.fileHistoryFollowsRenames": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定文件历史记录是否会跟踪重命名",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.advanced.fileHistoryShowAllBranches": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定文件历史记录是否会显示所有分支的提交",
			  "scope": "window",
			  "order": 101
			},
			"gitlens.advanced.fileHistoryShowMergeCommits": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定文件历史记录是否会显示合并提交",
			  "scope": "window",
			  "order": 102
			}
		  }
		},
		{
		  "id": "line-history-view",
		  "title": "Line History View",
		  "order": 25,
		  "properties": {
			"gitlens.views.lineHistory.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_行历史_”视图中显示头像图像而不是状态图标",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.lineHistory.enabled": {
			  "deprecationMessage": "Deprecated. This setting is no longer used",
			  "markdownDeprecationMessage": "Deprecated. This setting is no longer used"
			}
		  }
		},
		{
		  "id": "branches-view",
		  "title": "Branches View",
		  "order": 26,
		  "properties": {
			"gitlens.views.branches.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将分支与用户选择的参考进行比较"
			  ],
			  "default": "branch",
			  "markdownDescription": "指定在“_分支_”视图中是否显示分支与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.branches.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_分支_”视图中查询与每个分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.branches.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_分支_”视图中是否显示与每个分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.branches.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_分支_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.branches.branches.layout": {
			  "type": "string",
			  "default": "tree",
			  "enum": [
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"以列表形式显示分支",
				"当分支名称包含斜杠 `/` 时以树形结构显示分支"
			  ],
			  "markdownDescription": "指定“_分支_”视图将如何显示分支",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.branches.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.branches.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_分支_”视图将如何显示文件",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.views.branches.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_分支_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.branches.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 51
			},
			"gitlens.views.branches.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_分支_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.branches.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 52
			},
			"gitlens.views.branches.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_分支_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 53
			},
			"gitlens.views.branches.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_分支_”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.views.branches.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_分支_”视图中显示分支，还是在“_仓库_”视图中显示分支",
			  "scope": "window",
			  "order": 70
			}
		  }
		},
		{
		  "id": "remotes-view",
		  "title": "Remotes View",
		  "order": 27,
		  "properties": {
			"gitlens.views.remotes.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_远程_”视图中查询与每个分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.remotes.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_远程_”视图中是否显示与每个分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.remotes.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_远程_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 12
			},
			"gitlens.views.remotes.branches.layout": {
			  "type": "string",
			  "default": "tree",
			  "enum": [
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"以列表形式显示分支",
				"当分支名称包含斜杠 `/` 时以树形结构显示分支"
			  ],
			  "markdownDescription": "指定“_远程_”视图将如何显示分支",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.remotes.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.remotes.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_远程_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.remotes.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_远程_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.remotes.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.remotes.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_远程_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.remotes.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.remotes.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_远程_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.remotes.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_远程_”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.remotes.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_远程_”视图中显示远程仓库，还是在“_仓库_”视图中显示远程仓库",
			  "scope": "window",
			  "order": 50
			}
		  }
		},
		{
		  "id": "stashes-view",
		  "title": "Stashes View",
		  "order": 28,
		  "properties": {
			"gitlens.views.stashes.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.stashes.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_暂存区_”视图将如何显示文件",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.stashes.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_暂存区_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.stashes.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.stashes.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_暂存区_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.stashes.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 12
			},
			"gitlens.views.stashes.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_暂存区_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 13
			},
			"gitlens.views.stashes.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_暂存区_”视图中显示暂存区，还是在“_仓库_”视图中显示暂存区",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "tags-view",
		  "title": "Tags View",
		  "order": 29,
		  "properties": {
			"gitlens.views.tags.branches.layout": {
			  "type": "string",
			  "default": "tree",
			  "enum": [
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"以列表形式显示标签",
				"当标签名称包含斜杠 `/` 时以树形结构显示标签"
			  ],
			  "markdownDescription": "指定“_标签_”视图将如何显示标签",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.tags.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.tags.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_标签_”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.tags.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_标签_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.tags.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.tags.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_标签_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.tags.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.tags.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_标签_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.tags.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_标签_”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.tags.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_标签_”视图中显示标签，还是在“_仓库_”视图中显示标签",
			  "scope": "window",
			  "order": 50
			}
		  }
		},
		{
		  "id": "worktrees-view",
		  "title": "Worktrees View",
		  "order": 30,
		  "properties": {
			"gitlens.worktrees.promptForLocation": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "在创建新的工作区时是否提示路径",
			  "scope": "resource",
			  "order": 10
			},
			"gitlens.worktrees.defaultLocation": {
			  "type": "string",
			  "default": null,
			  "markdownDescription": "创建新工作区时的默认路径",
			  "scope": "resource",
			  "order": 11
			},
			"gitlens.worktrees.openAfterCreate": {
			  "type": "string",
			  "default": "prompt",
			  "enum": [
				"always",
				"alwaysNewWindow",
				"onlyWhenEmpty",
				"never",
				"prompt"
			  ],
			  "enumDescriptions": [
				"总是在当前窗口中打开新工作树",
				"总是在新窗口中打开新工作树",
				"只有在没有打开文件夹时才在当前窗口中打开新工作树",
				"从不打开新工作树",
				"始终提示打开新工作树"
			  ],
			  "markdownDescription": "创建工作区后如何以及何时打开它",
			  "scope": "resource",
			  "order": 12
			},
			"gitlens.views.worktrees.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将工作树分支与用户选择的参考进行比较"
			  ],
			  "default": "working",
			  "markdownDescription": "指定在“_工作区_”视图中是否显示工作区分支与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.worktrees.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_工作区_”视图中查询与工作区分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.worktrees.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_工作区_”视图中是否显示与工作区分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.worktrees.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_工作区_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.worktrees.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.worktrees.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_工作区_”视图将如何显示文件",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.views.worktrees.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_工作区_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.worktrees.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 41
			},
			"gitlens.views.worktrees.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_工作区_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.worktrees.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 42
			},
			"gitlens.views.worktrees.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_工作区_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 43
			},
			"gitlens.views.worktrees.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_工作区_”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.views.worktrees.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_工作区_”视图中显示工作区，还是在“_仓库_”视图中显示工作区",
			  "scope": "window",
			  "order": 60
			}
		  }
		},
		{
		  "id": "contributors-view",
		  "title": "Contributors View",
		  "order": 31,
		  "properties": {
			"gitlens.views.contributors.showAllBranches": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“_贡献者_”视图中是否显示所有分支的提交",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.contributors.showStatistics": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“_贡献者_”视图中是否显示贡献者统计信息。这可能需要一些时间来计算，具体取决于仓库的大小",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.contributors.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“_贡献者_”视图中查询与分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.contributors.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_贡献者_”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.contributors.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.contributors.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“_贡献者_”视图将如何显示文件",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.views.contributors.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "指定在“_贡献者_”视图中根据嵌套级别中的文件数量在以“树”或“列表”形式显示文件之间切换的时间。仅适用于将 `#gitlens.views.contributors.files.layout#` 设置为“自动”时",
			  "scope": "window",
			  "order": 51
			},
			"gitlens.views.contributors.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_贡献者_”视图中是否压缩（扁平化）不必要的嵌套文件。仅适用于将 `#gitlens.views.contributors.files.layout#` 设置为“树”或“自动”时",
			  "scope": "window",
			  "order": 52
			},
			"gitlens.views.contributors.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“_贡献者_”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 53
			},
			"gitlens.views.contributors.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_贡献者_”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.views.contributors.reveal": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“_贡献者_”视图中显示贡献者，还是在“_仓库_”视图中显示贡献者",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "search-compare-view",
		  "title": "Search & Compare View",
		  "order": 32,
		  "properties": {
			"gitlens.views.searchAndCompare.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“搜索 & 比较”视图中查询与提交关联的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.searchAndCompare.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“搜索 & 比较”视图中显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.searchAndCompare.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.searchAndCompare.files.threshold#` 值和每个嵌套级别的文件数量在树或列表之间自动切换",
				"以列表形式显示文件",
				"以树形结构显示文件"
			  ],
			  "markdownDescription": "指定“搜索 & 比较”视图将如何显示文件",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.searchAndCompare.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "仅在将 `#gitlens.views.searchAndCompare.files.layout#` 设置为“自动”时适用。此设置决定了嵌套级别中触发在“树”和“列表”视图之间切换的文件数量。",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.searchAndCompare.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "仅在将 `#gitlens.views.searchAndCompare.files.layout#` 设置为“树”或“自动”时适用。此设置确定是否压缩视图中不需要的嵌套文件。",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.searchAndCompare.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态为图标",
				"显示文件类型（主题图标）为图标"
			  ],
			  "markdownDescription": "指定“搜索 & 比较”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.searchAndCompare.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“搜索 & 比较”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 30
			}
		  }
		},
		{
		  "id": "cloud-patches-view",
		  "title": "Cloud Patches View",
		  "order": 33,
		  "properties": {
			"gitlens.views.drafts.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.drafts.files.threshold#` 值和每个嵌套级别的文件数量自动在 `树形视图` 和 `列表视图` 之间切换",
				"以列表方式显示文件",
				"以树形方式显示文件"
			  ],
			  "markdownDescription": "指定“云补丁”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.drafts.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "仅在将 `#gitlens.views.drafts.files.layout#` 设置为“自动”时适用。此设置决定了嵌套级别中触发在“树”和“列表”视图之间切换的文件数量。",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.drafts.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "仅在将 `#gitlens.views.drafts.files.layout#` 设置为“树”或“自动”时适用。此设置确定是否压缩视图中不需要的嵌套文件。",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.drafts.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态作为图标",
				"显示文件类型（主题图标）作为图标"
			  ],
			  "markdownDescription": "指定“云补丁”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.drafts.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“云补丁”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "workspaces-view",
		  "title": "GitKraken Workspaces View",
		  "order": 34,
		  "properties": {
			"gitlens.views.workspaces.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch",
				"working"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将当前分支与用户选择的参考进行比较",
				"将工作树与用户选择的参考进行比较"
			  ],
			  "default": "working",
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示当前分支或工作树与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.views.workspaces.showUpstreamStatus": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库当前分支的上游状态",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.views.workspaces.includeWorkingTree": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否包含每个仓库的工作树文件状态",
			  "scope": "window",
			  "order": 12
			},
			"gitlens.views.workspaces.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“GitKraken 工作区”视图中查询与分支和提交相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.views.workspaces.pullRequests.showForBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示与分支（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.views.workspaces.pullRequests.showForCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示与提交（如果有）相关的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.views.workspaces.showCommits": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库当前分支上的提交",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.workspaces.showBranches": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的分支",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.workspaces.showRemotes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的远程仓库",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.workspaces.showStashes": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的暂存区",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.workspaces.showTags": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的标签",
			  "scope": "window",
			  "order": 34
			},
			"gitlens.views.workspaces.showContributors": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的贡献者",
			  "scope": "window",
			  "order": 35
			},
			"gitlens.views.workspaces.showWorktrees": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的工作区",
			  "scope": "window",
			  "order": 36
			},
			"gitlens.views.workspaces.showIncomingActivity": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示每个仓库的实验性传入活动",
			  "scope": "window",
			  "order": 37
			},
			"gitlens.views.workspaces.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.views.workspaces.branches.layout": {
			  "type": "string",
			  "default": "tree",
			  "enum": [
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"以列表方式显示分支",
				"当分支名称包含斜杠 `/` 时以树形方式显示分支"
			  ],
			  "markdownDescription": "指定“GitKraken 工作区”视图将如何显示分支",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.views.workspaces.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.workspaces.files.threshold#` 值和每个嵌套级别的文件数量自动在 `树形视图` 和 `列表视图` 之间切换",
				"以列表方式显示文件",
				"以树形方式显示文件"
			  ],
			  "markdownDescription": "指定“GitKraken 工作区”视图将如何显示文件",
			  "scope": "window",
			  "order": 80
			},
			"gitlens.views.workspaces.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "仅在将 `#gitlens.views.workspaces.files.layout#` 设置为“自动”时适用。此设置决定了嵌套级别中触发在“树”和“列表”视图之间切换的文件数量。",
			  "scope": "window",
			  "order": 81
			},
			"gitlens.views.workspaces.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "仅在将 `#gitlens.views.workspaces.files.layout#` 设置为“树”或“自动”时适用。此设置确定是否压缩视图中不需要的嵌套文件。",
			  "scope": "window",
			  "order": 82
			},
			"gitlens.views.workspaces.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态作为图标",
				"显示文件类型（主题图标）作为图标"
			  ],
			  "markdownDescription": "指定“GitKraken 工作区”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 83
			},
			"gitlens.views.workspaces.compact": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“GitKraken 工作区”视图中是否显示紧凑的显示密度",
			  "scope": "window",
			  "order": 90
			},
			"gitlens.views.workspaces.branches.showBranchComparison": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"branch"
			  ],
			  "enumDescriptions": [
				"隐藏分支比较",
				"将分支与用户选择的参考进行比较"
			  ],
			  "default": "branch",
			  "markdownDescription": "指定在“GitKraken 工作区”视图中每个分支下是否显示分支与用户选择的引用（分支、标签等）的比较",
			  "scope": "window",
			  "order": 100
			}
		  }
		},
		{
		  "id": "patch-details-view",
		  "title": "Patch Details View",
		  "order": 35,
		  "properties": {
			"gitlens.views.patchDetails.files.layout": {
			  "type": "string",
			  "default": "auto",
			  "enum": [
				"auto",
				"list",
				"tree"
			  ],
			  "enumDescriptions": [
				"根据 `#gitlens.views.patchDetails.files.threshold#` 值和每个嵌套级别的文件数量自动在 `树形视图` 和 `列表视图` 之间切换",
				"以列表方式显示文件",
				"以树形方式显示文件"
			  ],
			  "markdownDescription": "指定“补丁详情”视图将如何显示文件",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.views.patchDetails.files.threshold": {
			  "type": "number",
			  "default": 5,
			  "markdownDescription": "仅在将 `#gitlens.views.patchDetails.files.layout#` 设置为“自动”时适用。此设置决定了嵌套级别中触发在“树”和“列表”视图之间切换的文件数量。",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.views.patchDetails.files.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "仅在将 `#gitlens.views.patchDetails.files.layout#` 设置为“树”或“自动”时适用。此设置确定是否压缩视图中不需要的嵌套文件。",
			  "scope": "window",
			  "order": 32
			},
			"gitlens.views.patchDetails.files.icon": {
			  "type": "string",
			  "default": "type",
			  "enum": [
				"status",
				"type"
			  ],
			  "enumDescriptions": [
				"显示文件状态作为图标",
				"显示文件类型（主题图标）作为图标"
			  ],
			  "markdownDescription": "指定“补丁详情”视图将如何显示文件图标",
			  "scope": "window",
			  "order": 33
			},
			"gitlens.views.patchDetails.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“补丁详情”视图中显示头像图像而不是提交（或状态）图标",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "file-annotations",
		  "title": "File Annotations",
		  "order": 14,
		  "properties": {
			"gitlens.fileAnnotations.dismissOnEscape": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定按 `ESC` 键是否关闭活动的文件注释",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.fileAnnotations.command": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "enum": [
				null,
				"blame",
				"heatmap",
				"changes"
			  ],
			  "enumDescriptions": [
				"显示菜单以选择要切换的文件注释",
				"切换文件责任注释",
				"切换文件热图注释",
				"切换文件更改注释"
			  ],
			  "markdownDescription": "指定编辑器标题栏中的文件注释按钮是显示菜单还是立即切换指定的文件注释",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.fileAnnotations.preserveWhileEditing": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定编辑时是否保留文件注释。使用 `#gitlens.advanced.blame.delayAfterEdit#` 控制在文件仍处于未保存状态时等待多久更新注释",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.advanced.blame.delayAfterEdit": {
			  "type": "number",
			  "default": 5000,
			  "markdownDescription": "指定在编辑未保存的文档后但未保存之前重新责任之前等待的时间（毫秒）。使用 0 指定无限等待。仅适用于文件小于 `#gitlens.advanced.sizeThresholdAfterEdit#`",
			  "scope": "window",
			  "order": 90
			},
			"gitlens.advanced.blame.sizeThresholdAfterEdit": {
			  "type": "number",
			  "default": 5000,
			  "markdownDescription": "指定编辑后仍未保存时允许重新责任的最大文档大小（行数）。使用 0 指定没有最大值",
			  "scope": "window",
			  "order": 91
			}
		  }
		},
		{
		  "id": "file-blame",
		  "title": "File Blame",
		  "order": 15,
		  "properties": {
			"gitlens.blame.toggleMode": {
			  "type": "string",
			  "default": "file",
			  "enum": [
				"file",
				"window"
			  ],
			  "enumDescriptions": [
				"逐个切换每个文件",
				"切换窗口，即一次切换所有文件"
			  ],
			  "markdownDescription": "指定如何切换文件责任注释",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.blame.format": {
			  "type": "string",
			  "default": "${message|50?} ${agoOrDate|14-}",
			  "markdownDescription": "指定文件责任注释的格式。请参阅 GitLens 文档中的 [_提交令牌_](https://github.com/xuxuchan/vscode-xuxu-git/wiki/Custom-Formatting#commit-tokens)。日期格式由 `#gitlens.blame.dateFormat#` 设置控制",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.blame.fontFamily": {
			  "type": "string",
			  "default": "",
			  "markdownDescription": "指定文件责任注释的字体系列",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.blame.fontSize": {
			  "type": "number",
			  "default": 0,
			  "markdownDescription": "指定文件责任注释的字体大小",
			  "scope": "window",
			  "order": 23
			},
			"gitlens.blame.fontStyle": {
			  "type": "string",
			  "default": "normal",
			  "markdownDescription": "指定文件责任注释的字体样式",
			  "scope": "window",
			  "order": 24
			},
			"gitlens.blame.fontWeight": {
			  "type": "string",
			  "default": "normal",
			  "markdownDescription": "指定文件责任注释的字体粗细",
			  "scope": "window",
			  "order": 25
			},
			"gitlens.blame.heatmap.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在文件责任注释中提供热图指示器",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.blame.heatmap.location": {
			  "type": "string",
			  "default": "right",
			  "enum": [
				"left",
				"right"
			  ],
			  "enumDescriptions": [
				"在文件责任注释的左边缘添加热图指示器",
				"在文件责任注释的右边缘添加热图指示器"
			  ],
			  "markdownDescription": "指定在文件责任注释中显示热图指示器的位置",
			  "scope": "window",
			  "order": 31
			},
			"gitlens.blame.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在文件责任注释中显示头像图像",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.blame.compact": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否压缩（消除重复）匹配的相邻文件责任注释",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.blame.highlight.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否突出显示与当前行相关的行",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.blame.highlight.locations": {
			  "type": "array",
			  "default": [
				"gutter",
				"line",
				"overview"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "gutter",
				  "line",
				  "overview"
				],
				"enumDescriptions": [
				  "在边缘添加一个指示器",
				  "添加一个全行高亮背景颜色",
				  "在滚动条上添加一个指示器"
				]
			  },
			  "minItems": 1,
			  "maxItems": 3,
			  "uniqueItems": true,
			  "markdownDescription": "指定显示关联行高亮的的位置",
			  "scope": "window",
			  "order": 61
			},
			"gitlens.blame.separateLines": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否用小间隙分隔文件责任注释",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.blame.dateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定如何在文件责任注释中格式化绝对日期（例如，使用 `${date}` 令牌）。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)。",
			  "scope": "window",
			  "order": 80
			}
		  }
		},
		{
		  "id": "file-changes",
		  "title": "File Changes",
		  "order": 16,
		  "properties": {
			"gitlens.changes.toggleMode": {
			  "type": "string",
			  "default": "file",
			  "enum": [
				"file",
				"window"
			  ],
			  "enumDescriptions": [
				"逐个切换每个文件",
				"切换窗口，即一次切换所有文件"
			  ],
			  "markdownDescription": "指定如何切换文件改动注释",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.changes.locations": {
			  "type": "array",
			  "default": [
				"gutter",
				"line",
				"overview"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "gutter",
				  "line",
				  "overview"
				],
				"enumDescriptions": [
				  "在边缘添加一个指示器",
				  "添加一个全行高亮背景颜色",
				  "在滚动条上添加一个指示器"
				]
			  },
			  "minItems": 1,
			  "maxItems": 3,
			  "uniqueItems": true,
			  "markdownDescription": "指定显示文件改动注释指示器的位置",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "file-heatmap",
		  "title": "File Heatmap",
		  "order": 17,
		  "properties": {
			"gitlens.heatmap.toggleMode": {
			  "type": "string",
			  "default": "file",
			  "enum": [
				"file",
				"window"
			  ],
			  "enumDescriptions": [
				"逐个切换每个文件",
				"切换窗口，即一次切换所有文件"
			  ],
			  "markdownDescription": "指定如何切换文件热图注释",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.heatmap.locations": {
			  "type": "array",
			  "default": [
				"gutter",
				"overview"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "gutter",
				  "line",
				  "overview"
				],
				"enumDescriptions": [
				  "在边缘添加一个指示器",
				  "添加一个全行高亮背景颜色",
				  "在滚动条上添加一个指示器"
				]
			  },
			  "minItems": 1,
			  "maxItems": 3,
			  "uniqueItems": true,
			  "markdownDescription": "指定显示文件热图注释指示器的位置",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.heatmap.fadeLines": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否淡化较旧的行",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.heatmap.ageThreshold": {
			  "type": "number",
			  "default": 90,
			  "markdownDescription": "指定最近更改的天数阈值，在此阈值之后，文件热图注释将变为冷色调（即使用 `#gitlens.heatmap.coldColor#` 而不是 `#gitlens.heatmap.hotColor#`）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.heatmap.coldColor": {
			  "type": "string",
			  "default": "#0a60f6",
			  "markdownDescription": "当最近的更改比 `#gitlens.heatmap.ageThreshold#` 值更旧（冷色调）时，指定文件热图注释的基础颜色",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.heatmap.hotColor": {
			  "type": "string",
			  "default": "#f66a0a",
			  "markdownDescription": "当最近的更改比 `#gitlens.heatmap.ageThreshold#` 值更新（暖色调）时，指定文件热图注释的基础颜色",
			  "scope": "window",
			  "order": 50
			}
		  }
		},
		{
		  "id": "graph",
		  "title": "Commit Graph",
		  "order": 200,
		  "properties": {
			"gitlens.graph.allowMultiple": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否允许在编辑器区域打开多个“提交图”实例",
			  "scope": "window",
			  "order": 5
			},
			"gitlens.graph.defaultItemLimit": {
			  "type": "number",
			  "default": 500,
			  "markdownDescription": "指定“提交图”中显示的默认项目数量。使用 0 表示没有限制",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.graph.pageItemLimit": {
			  "type": "number",
			  "default": 200,
			  "markdownDescription": "指定在“提交图”中分页时要获取的附加项目数量。使用 0 表示没有限制",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.graph.searchItemLimit": {
			  "type": "number",
			  "default": 100,
			  "markdownDescription": "指定在“提交图”中搜索时要收集的结果数量。使用 0 表示没有限制",
			  "scope": "window",
			  "order": 12
			},
			"gitlens.graph.scrollMarkers.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“提交图”的滚动条上显示标记",
			  "scope": "window",
			  "order": 13
			},
			"gitlens.graph.scrollMarkers.additionalTypes": {
			  "type": "array",
			  "default": [
				"localBranches",
				"stashes"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "localBranches",
				  "remoteBranches",
				  "stashes",
				  "tags"
				],
				"enumDescriptions": [
				  "标记本地分支的位置",
				  "标记远程分支的位置",
				  "标记存储的位置",
				  "标记标签的位置"
				]
			  },
			  "minItems": 0,
			  "maxItems": 4,
			  "uniqueItems": true,
			  "markdownDescription": "指定在“提交图”的滚动条上显示的附加标记",
			  "scope": "window",
			  "order": 14
			},
			"gitlens.graph.scrollRowPadding": {
			  "type": "number",
			  "default": 0,
			  "markdownDescription": "指定使用键盘或搜索更改所选行时，图形将从边缘滚动多少行",
			  "scope": "window",
			  "order": 14
			},
			"gitlens.graph.showDetailsView": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "default": "selection",
			  "enum": [
				false,
				"open",
				"selection"
			  ],
			  "enumDescriptions": [
				"从不自动显示“提交详情”视图",
				"仅在打开“提交图”时自动显示“提交详情”视图",
				"在“提交图”中选择更改时自动显示“提交详情”视图"
			  ],
			  "markdownDescription": "指定何时在“提交图”中为选定行显示“提交详细信息”视图",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.graph.showGhostRefsOnRowHover": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“提交图”中悬停或选择行时是否显示幽灵分支/标签",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.graph.highlightRowsOnRefHover": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在“提交图”中悬停在其上方时是否突出显示与分支/标签关联的行",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.graph.dimMergeCommits": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是否在“提交图”中调暗（降低强调）合并提交行",
			  "scope": "window",
			  "order": 23
			},
			"gitlens.graph.showRemoteNames": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是否在“提交图”中的远程分支上显示远程名称",
			  "scope": "window",
			  "order": 24
			},
			"gitlens.graph.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“提交图”中显示头像图像，而不是作者缩写和远程图标",
			  "scope": "window",
			  "order": 25
			},
			"gitlens.graph.showUpstreamStatus": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“提交图”中显示本地分支的上游状态",
			  "scope": "window",
			  "order": 26
			},
			"gitlens.graph.pullRequests.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“提交图”中的远程分支上显示关联的拉取请求。需要连接到受支持的远程服务（例如 GitHub）",
			  "scope": "window",
			  "order": 27
			},
			"gitlens.graph.commitOrdering": {
			  "type": "string",
			  "default": "date",
			  "enum": [
				"date",
				"author-date",
				"topo"
			  ],
			  "enumDescriptions": [
				"按提交时间戳的反向时间顺序显示提交",
				"按作者时间戳的反向时间顺序显示提交",
				"按提交时间戳的反向时间顺序显示提交，但避免混合多条历史线"
			  ],
			  "markdownDescription": "指定在“提交图”上显示提交的排序方式",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.graph.onlyFollowFirstParent": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在“提交图”上显示提交时是否仅遵循第一个父级",
			  "order": 31
			},
			"gitlens.graph.dateStyle": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "enum": [
				"relative",
				"absolute"
			  ],
			  "enumDescriptions": [
				"例如 1 天前",
				"例如 2018年7月25日 下午7:18"
			  ],
			  "markdownDescription": "指定如何在“提交图”中显示日期",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.graph.dateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定如何在“提交图”中格式化绝对日期。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)。",
			  "scope": "window",
			  "order": 41
			},
			"gitlens.graph.statusBar.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在状态栏中显示“提交图”",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.graph.layout": {
			  "type": "string",
			  "default": "panel",
			  "enum": [
				"editor",
				"panel"
			  ],
			  "enumDescriptions": [
				"优先在编辑区域显示提交图",
				"优先在底部面板显示提交图"
			  ],
			  "markdownDescription": "指定“提交图”的首选布局",
			  "scope": "window",
			  "order": 99
			},
			"gitlens.graph.minimap.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在“提交图”上方显示提交活动的小地图",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.graph.minimap.dataType": {
			  "type": "string",
			  "default": "commits",
			  "enum": [
				"commits",
				"lines"
			  ],
			  "enumDescriptions": [
				"在迷你地图中显示每天的提交数量",
				"在迷你地图中显示每天的行改动数量"
			  ],
			  "markdownDescription": "指定在“提交图”的小地图上显示的数据",
			  "scope": "window",
			  "order": 101
			},
			"gitlens.graph.minimap.additionalTypes": {
			  "type": "array",
			  "default": [
				"localBranches",
				"stashes"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "localBranches",
				  "remoteBranches",
				  "stashes",
				  "tags"
				],
				"enumDescriptions": [
				  "标记本地分支的位置",
				  "标记远程分支的位置",
				  "标记存储的位置",
				  "标记标签的位置"
				]
			  },
			  "minItems": 0,
			  "maxItems": 4,
			  "uniqueItems": true,
			  "markdownDescription": "指定在“提交图”的小地图上显示的附加标记",
			  "scope": "window",
			  "order": 102
			}
		  }
		},
		{
		  "id": "cloud-patches",
		  "title": "Cloud Patches (Preview)",
		  "order": 300,
		  "properties": {
			"gitlens.cloudPatches.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用“云补丁”预览，它允许您轻松安全地与队友或其他开发人员共享代码",
			  "scope": "window",
			  "order": 10
			}
		  }
		},
		{
		  "id": "focus",
		  "title": "Launchpad (Preview)",
		  "order": 400,
		  "properties": {
			"gitlens.launchpad.ignoredRepositories": {
			  "type": "array",
			  "default": [],
			  "items": {
				"type": "string"
			  },
			  "markdownDescription": "指定要在“启动板”中忽略的仓库",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.launchpad.ignoredOrganizations": {
			  "type": "array",
			  "default": [],
			  "items": {
				"type": "string"
			  },
			  "markdownDescription": "指定要在“启动板”中忽略的组织",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.launchpad.staleThreshold": {
			  "type": [
				"number",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定在“启动板”中将拉取请求视为过时并移动到“其他”的天数",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.launchpad.indicator.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用“启动板”状态栏指示器",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.launchpad.indicator.icon": {
			  "type": "string",
			  "enum": [
				"default",
				"group"
			  ],
			  "enumDescriptions": [
				"显示启动台图标",
				"显示优先级最高的组的图标"
			  ],
			  "default": "default",
			  "markdownDescription": "指定“启动板”状态栏指示器图标的样式",
			  "scope": "window",
			  "order": 110
			},
			"gitlens.launchpad.indicator.label": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "enum": [
				false,
				"item",
				"counts"
			  ],
			  "enumDescriptions": [
				"隐藏标签",
				"显示需要您关注的最高优先级项目",
				"显示需要您关注的项目的状态计数"
			  ],
			  "default": "item",
			  "markdownDescription": "指定“启动板”状态栏指示器标签的显示方式",
			  "scope": "window",
			  "order": 120
			},
			"gitlens.launchpad.indicator.groups": {
			  "type": "array",
			  "default": [
				"mergeable",
				"blocked",
				"needs-review",
				"follow-up"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "mergeable",
				  "blocked",
				  "needs-review",
				  "follow-up"
				],
				"enumDescriptions": [
				  "显示可合并的拉取请求",
				  "显示被阻止的拉取请求",
				  "显示需要您审核的拉取请求",
				  "显示需要跟进的拉取请求"
				]
			  },
			  "minItems": 1,
			  "uniqueItems": true,
			  "markdownDescription": "指定要在“启动板”状态栏指示器上显示的拉取请求组",
			  "scope": "window",
			  "order": 130
			},
			"gitlens.launchpad.indicator.useColors": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是否在“启动板”状态栏指示器上使用颜色",
			  "scope": "window",
			  "order": 140
			},
			"gitlens.launchpad.indicator.polling.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定状态栏指示器是否会为“启动板”获取并显示拉取请求数据",
			  "scope": "window",
			  "order": 150
			},
			"gitlens.launchpad.indicator.polling.interval": {
			  "type": "number",
			  "default": 30,
			  "markdownDescription": "指定状态栏指示器获取“启动板”拉取请求数据的速率（分钟）。使用 0 禁用自动轮询",
			  "scope": "window",
			  "order": 160
			},
			"gitlens.launchpad.indicator.openInEditor": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定单击状态栏指示器时是否将“启动板”作为编辑器选项卡打开",
			  "scope": "window",
			  "order": 170
			},
			"gitlens.launchpad.allowMultiple": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否允许将多个“启动板”实例作为编辑器选项卡打开",
			  "scope": "window",
			  "order": 1000
			},
			"gitlens.launchpad.experimental.queryLimit": {
			  "type": "number",
			  "default": 100,
			  "markdownDescription": "指定“启动板”中要查询的拉取请求数量的实验性限制",
			  "scope": "window",
			  "order": 1100
			},
			"gitlens.launchpad.experimental.queryUseInvolvesFilter": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定一个实验性标志，用于指定是否在“启动板”的 GraphQL 查询中使用 `involves` 过滤器",
			  "scope": "window",
			  "order": 1110
			}
		  }
		},
		{
		  "id": "visual-history",
		  "title": "Visual File History",
		  "order": 500,
		  "properties": {
			"gitlens.visualHistory.allowMultiple": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否允许在编辑器区域打开多个“可视文件历史记录”实例",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.visualHistory.queryLimit": {
			  "type": "number",
			  "default": 20,
			  "markdownDescription": "由于速率限制，指定可在“可视文件历史记录”中查询统计信息的提交数量限制。仅适用于虚拟工作区。",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "rebase-editor",
		  "title": "Interactive Rebase Editor",
		  "order": 600,
		  "properties": {
			"gitlens.rebaseEditor.ordering": {
			  "type": "string",
			  "default": "desc",
			  "enum": [
				"asc",
				"desc"
			  ],
			  "enumDescriptions": [
				"首先显示最早的提交",
				"首先显示最新的提交"
			  ],
			  "markdownDescription": "指定如何在“交互式变基编辑器”中显示 Git 提交",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.rebaseEditor.showDetailsView": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "default": "selection",
			  "enum": [
				false,
				"open",
				"selection"
			  ],
			  "enumDescriptions": [
				"从不自动显示“提交详情”视图",
				"仅在打开“交互式变基编辑器”时自动显示“提交详情”视图",
				"在“交互式变基编辑器”中选择更改时自动显示“提交详情”视图"
			  ],
			  "markdownDescription": "指定何时在“交互式变基编辑器”中为选定行显示“提交详细信息”视图",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "git-command-palette",
		  "title": "Git Command Palette",
		  "order": 700,
		  "properties": {
			"gitlens.gitCommands.avatars": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定适用时在快速选择菜单中显示头像图像",
			  "scope": "window",
			  "order": 5
			},
			"gitlens.gitCommands.sortBy": {
			  "type": "string",
			  "default": "usage",
			  "enum": [
				"name",
				"usage"
			  ],
			  "enumDescriptions": [
				"按名称排序命令",
				"按最后使用日期排序命令"
			  ],
			  "markdownDescription": "指定如何在“Git 命令面板”中排序 Git 命令",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.gitCommands.skipConfirmations": {
			  "type": "array",
			  "default": [
				"fetch:command",
				"stash-push:command"
			  ],
			  "items": {
				"type": "string",
				"enum": [
				  "branch-create:command",
				  "branch-create:menu",
				  "co-authors:command",
				  "co-authors:menu",
				  "fetch:command",
				  "fetch:menu",
				  "pull:command",
				  "pull:menu",
				  "push:command",
				  "push:menu",
				  "stash-apply:command",
				  "stash-apply:menu",
				  "stash-pop:command",
				  "stash-pop:menu",
				  "stash-push:command",
				  "stash-push:menu",
				  "switch:command",
				  "switch:menu",
				  "tag-create:command",
				  "tag-create:menu"
				],
				"enumDescriptions": [
				  "从命令运行时跳过分支创建确认，例如视图操作",
				  "从Git命令面板运行时跳过分支创建确认",
				  "从命令运行时跳过共同作者确认，例如视图操作",
				  "从Git命令面板运行时跳过共同作者确认",
				  "从命令运行时跳过提取确认，例如视图操作",
				  "从Git命令面板运行时跳过提取确认",
				  "从命令运行时跳过拉取确认，例如视图操作",
				  "从Git命令面板运行时跳过拉取确认",
				  "从命令运行时跳过推送确认，例如视图操作",
				  "从Git命令面板运行时跳过推送确认",
				  "从命令运行时跳过应用存储确认，例如视图操作",
				  "从Git命令面板运行时跳过应用存储确认",
				  "从命令运行时跳过弹出存储确认，例如视图操作",
				  "从Git命令面板运行时跳过弹出存储确认",
				  "从命令运行时跳过推送存储确认，例如视图操作",
				  "从Git命令面板运行时跳过推送存储确认",
				  "从命令运行时跳过切换确认，例如视图操作",
				  "从Git命令面板运行时跳过切换确认",
				  "从命令运行时跳过标签创建确认，例如视图操作",
				  "从Git命令面板运行时跳过标签创建确认"
				]
			  },
			  "minItems": 0,
			  "maxItems": 14,
			  "uniqueItems": true,
			  "markdownDescription": "指定哪种 (何时) Git 命令将跳过确认步骤，使用格式: `git-command-name:(menu|command)`",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.gitCommands.closeOnFocusOut": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定焦点移出时是否关闭“Git 命令面板”（如果没有，请按 `ESC` 键关闭）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.gitCommands.search.showResultsInSideBar": {
			  "type": [
				"boolean",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定是直接在快速选择菜单中、侧边栏中显示提交搜索结果，还是根据上下文而定",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.gitCommands.search.matchAll": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定匹配所有还是任何提交消息搜索模式",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.gitCommands.search.matchCase": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是否区分大小写地匹配提交搜索模式",
			  "scope": "window",
			  "order": 51
			},
			"gitlens.gitCommands.search.matchRegex": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否使用正则表达式匹配提交搜索模式",
			  "scope": "window",
			  "order": 52
			},
			"gitlens.gitCommands.search.showResultsInView": {
			  "deprecationMessage": "Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar",
			  "markdownDeprecationMessage": "Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`"
			}
		  }
		},
		{
		  "id": "integrations",
		  "title": "Integrations",
		  "order": 800,
		  "properties": {
			"gitlens.autolinks": {
			  "type": [
				"array",
				"null"
			  ],
			  "default": null,
			  "items": {
				"type": "object",
				"required": [
				  "prefix",
				  "url"
				],
				"properties": {
					"prefix": {
						"type": "string",
						"description": "指定用于生成外部资源自动链接的短前缀"
					},
					"title": {
						"type": [
						"string",
						"null"
						],
						"default": null,
						"description": "指定生成的自动链接的可选标题。使用``作为参考编号的变量"
					},
					"url": {
						"type": "string",
						"description": "指定您要链接到的外部资源的URL。使用``作为参考编号的变量"
					},
					"alphanumeric": {
						"type": "boolean",
						"description": "指定是否应允许在``中使用字母数字字符",
						"default": false
					},
					"ignoreCase": {
						"type": "boolean",
						"description": "指定在匹配前缀时是否应忽略大小写",
						"default": false
					}
				},
				"additionalProperties": false
			  },
			  "uniqueItems": true,
			  "markdownDescription": "指定提交消息中的外部链接自动链接。使用 `` 作为引用编号的变量",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.integrations.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用与任何受支持的远程服务的富集成",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.remotes": {
			  "type": [
				"array",
				"null"
			  ],
			  "default": null,
			  "items": {
				"type": "object",
				"required": [
				  "type"
				],
				"oneOf": [
				  {
					"required": [
					  "domain"
					]
				  },
				  {
					"required": [
					  "regex"
					]
				  }
				],
				"properties": {
					"type": {
						"type": "string",
						"enum": [
						  "Custom",
						  "AzureDevOps",
						  "Bitbucket",
						  "BitbucketServer",
						  "Gerrit",
						  "GoogleSource",
						  "Gitea",
						  "GitHub",
						  "GitLab"
						],
						"description": "指定自定义远程服务的类型"
					  },
					  "domain": {
						"type": "string",
						"description": "指定用于将此自定义配置匹配到Git远程的域名"
					  },
					  "regex": {
						"type": "string",
						"description": "指定用于将此自定义配置匹配到Git远程并捕获“域名”和“路径”的正则表达式"
					  },
					  "name": {
						"type": "string",
						"description": "指定自定义远程服务的可选友好名称"
					  },
					  "protocol": {
						"type": "string",
						"default": "https",
						"description": "指定自定义远程服务的可选URL协议"
					  },
					  "ignoreSSLErrors": {
						"type": "boolean",
						"default": false,
						"description": "指定连接到远程服务时是否忽略无效的SSL证书错误"
					  },
				  "urls": {
					"type": "object",
					"required": [
					  "repository",
					  "branches",
					  "branch",
					  "commit",
					  "file",
					  "fileInCommit",
					  "fileInBranch",
					  "fileLine",
					  "fileRange"
					],
					"properties": {
						"repository": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的仓库URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径"
						},
						"branches": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的分支URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${branch}` — 分支"
						},
						"branch": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的单个分支URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${branch}` — 分支"
						},
						"commit": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的提交URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${id}` — 提交 SHA"
						},
						"file": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的文件URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${file}` — 文件名\\\n`${line}` — 格式化的行信息"
						},
						"fileInBranch": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的分支文件URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${file}` — 文件名\\\n`${branch}` — 分支\\\n`${line}` — 格式化的行信息"
						},
						"fileInCommit": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的提交文件URL格式\n\n可用的令牌\\\n`${repo}` — 仓库路径\\\n`${file}` — 文件名\\\n`${id}` — 提交 SHA\\\n`${line}` — 格式化的行信息"
						},
						"fileLine": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的文件行URL格式\n\n可用的令牌\\\n`${line}` — 行"
						},
						"fileRange": {
						  "type": "string",
						  "markdownDescription": "指定自定义远程服务的文件范围URL格式\n\n可用的令牌\\\n`${start}` — 起始行\\\n`${end}` — 结束行"
						}
					  },
					"additionalProperties": false
				  }
				}
			  },
			  "uniqueItems": true,
			  "markdownDescription": "指定要与 Git 远程仓库匹配的自定义远程服务，以检测内置远程服务的自定义域或提供对自定义远程服务的支持",
			  "scope": "resource",
			  "order": 30
			},
			"gitlens.partners": {
				"type": [
				  "object",
				  "null"
				],
				"additionalProperties": {
				  "type": "object",
				  "properties": {
					"enabled": {
					  "type": "boolean",
					  "default": true,
					  "description": "指定是否应显示合作伙伴集成"
					}
				  },
				  "additionalProperties": true,
				  "description": "指定合作伙伴集成的配置"
				},
				"default": null,
				"description": "指定合作伙伴集成的配置",
				"scope": "window",
				"order": 40
			  },
			  "gitlens.liveshare.enabled": {
				"type": "boolean",
				"default": true,
				"description": "指定是否启用与Visual Studio Live Share的集成",
				"scope": "window",
				"order": 50
			  },
			  "gitlens.liveshare.allowGuestAccess": {
				"type": "boolean",
				"default": true,
				"description": "指定在使用Visual Studio Live Share时是否允许访客访问GitLens功能",
				"scope": "window",
				"order": 51
			  }
		  }
		},
		{
		  "id": "terminal",
		  "title": "Terminal",
		  "order": 900,
		  "properties": {
			"gitlens.terminalLinks.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用终端链接 - 集成终端中的自动链接，可快速跳转到提交、分支、标签等详细信息",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.terminalLinks.showDetailsView": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定单击集成终端中的提交链接时是否显示“提交详细信息”视图",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.terminal.overrideGitEditor": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定在 Gitlens 终端命令中是否将 VS Code 用作 Git 的 `core.editor`",
			  "scope": "window",
			  "order": 100
			}
		  }
		},
		{
		  "id": "ai",
		  "title": "AI (Experimental)",
		  "order": 1000,
		  "properties": {
			"gitlens.ai.experimental.generateCommitMessage.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用 GitLens 的实验性、人工智能驱动的按需提交消息生成",
			  "scope": "window",
			  "order": 1
			},
			"gitlens.experimental.generateCommitMessagePrompt": {
			  "type": "string",
			  "default": "Now, please generate a commit message. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes in under 50 characters. If necessary, follow with an explanatory body providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Conclude with any relevant issue references at the end of the message.",
			  "markdownDescription": "指定用于告知人工智能提供程序如何构建或格式化生成提交消息的提示",
			  "scope": "window",
			  "order": 2
			},
			"gitlens.experimental.generateCloudPatchMessagePrompt": {
			  "type": "string",
			  "default": "Now, please generate a title and optional description. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes in under 50 characters. If necessary, follow with an explanatory body providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Conclude with any relevant issue references at the end of the message.",
			  "markdownDescription": "指定用于告知人工智能提供程序如何构建或格式化生成的标题和描述的提示 (针对“云补丁”功能)",
			  "scope": "window",
			  "order": 3
			},
			"gitlens.experimental.generateCodeSuggestMessagePrompt": {
			  "type": "string",
			  "default": "Now, please generate a title and optional description. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes in under 50 characters. If necessary, follow with an explanatory body providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Conclude with any relevant issue references at the end of the message.",
			  "markdownDescription": "指定用于告知人工智能提供程序如何构建或格式化生成的标题和描述的提示 (针对“代码建议”功能)",
			  "scope": "window",
			  "order": 3
			},
			"gitlens.ai.experimental.model": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "enum": [
				"openai:gpt-4o",
				"openai:gpt-4-turbo",
				"openai:gpt-4-turbo-preview",
				"openai:gpt-4",
				"openai:gpt-4-32k",
				"openai:gpt-3.5-turbo",
				"openai:gpt-3.5-turbo-16k",
				"anthropic:claude-3-opus-20240229",
				"anthropic:claude-3-sonnet-20240229",
				"anthropic:claude-3-haiku-20240307",
				"anthropic:claude-2.1",
				"anthropic:claude-2",
				"anthropic:claude-instant-1",
				"google:gemini-1.5-pro-latest",
				"google:gemini-1.5-flash-latest",
				"google:gemini-1.0-pro",
				"vscode"
			  ],
			  "enumDescriptions": [
				"OpenAI GPT-4 Omni",
				"OpenAI GPT-4 Turbo with Vision",
				"OpenAI GPT-4 Turbo Preview",
				"OpenAI GPT-4",
				"OpenAI GPT-4 32k",
				"OpenAI GPT-3.5 Turbo",
				"OpenAI GPT-3.5 Turbo 16k",
				"Anthropic Claude 3 Opus",
				"Anthropic Claude 3 Sonnet",
				"Anthropic Claude 3 Haiku",
				"Anthropic Claude 2.1",
				"Anthropic Claude 2",
				"Anthropic Claude Instant 1.2",
				"Google Gemini 1.5 Pro (最新版)",
				"Google Gemini 1.5 Flash",
				"Google Gemini 1.0 Pro",
				"VS Code 扩展"
			  ],
			  "markdownDescription": "指定用于 GitLens 实验性人工智能功能的人工智能模型",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.ai.experimental.openai.url": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定用于通过 Azure 访问 OpenAI 模型的自定义 URL。Azure URL 应采用以下格式：https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}",
			  "scope": "window",
			  "order": 102
			},
			"gitlens.ai.experimental.vscode.model": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "pattern": "^(.*):(.*)$",
			  "markdownDescription": "指定用于 GitLens 实验性人工智能功能的 VS Code 提供的模型，格式为“vendor:family”",
			  "scope": "window",
			  "order": 105
			}
		  }
		},
		{
		  "id": "date-times",
		  "title": "Date & Times",
		  "order": 1100,
		  "properties": {
			"gitlens.defaultDateStyle": {
			  "type": "string",
			  "default": "relative",
			  "enum": [
				"relative",
				"absolute"
			  ],
			  "enumDescriptions": [
				"例如 1 天前",
				"例如 2018年7月25日 下午7:18"
			  ],
			  "markdownDescription": "指定默认情况下日期的显示方式",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.defaultDateFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定默认情况下绝对日期的格式。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.defaultDateLocale": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定用于日期格式化的区域设置，[BCP 47 语言标签](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags)，默认为 VS Code 区域设置。使用 `system` 遵循当前系统区域设置，或选择特定区域设置，例如 `en-US` - 美国英语，`en-GB` - 英国英语，`de-DE` - 德语，`ja-JP` - 日语等。",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.defaultDateShortFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定默认情况下短绝对日期的格式。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)",
			  "scope": "window",
			  "order": 22
			},
			"gitlens.defaultTimeFormat": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定默认情况下时间的格式。有关支持的格式，请参阅 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/)",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.defaultDateSource": {
			  "type": "string",
			  "default": "authored",
			  "enum": [
				"authored",
				"committed"
			  ],
			  "enumDescriptions": [
				"使用更改作者编写时的日期（即最初编写的日期）",
				"使用更改提交时的日期"
			  ],
			  "markdownDescription": "指定提交日期应使用创作日期还是提交日期",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "sorting",
		  "title": "Sorting",
		  "order": 1200,
		  "properties": {
			"gitlens.sortRepositoriesBy": {
			  "type": "string",
			  "default": "discovered",
			  "enum": [
				"discovered",
				"lastFetched:desc",
				"lastFetched:asc",
				"name:asc",
				"name:desc"
			  ],
			  "enumDescriptions": [
				"按发现或工作区顺序排序存储库",
				"按最后获取日期降序排序存储库",
				"按最后获取日期升序排序存储库",
				"按名称升序排序存储库",
				"按名称降序排序存储库"
			  ],
			  "markdownDescription": "指定在快速选择菜单和视图中排序仓库的方式",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.sortBranchesBy": {
			  "type": "string",
			  "default": "date:desc",
			  "enum": [
				"date:desc",
				"date:asc",
				"name:asc",
				"name:desc"
			  ],
			  "enumDescriptions": [
				"按最近提交日期降序排序分支",
				"按最近提交日期升序排序分支",
				"按名称升序排序分支",
				"按名称降序排序分支"
			  ],
			  "markdownDescription": "指定在快速选择菜单和视图中排序分支的方式",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.sortTagsBy": {
			  "type": "string",
			  "default": "date:desc",
			  "enum": [
				"date:desc",
				"date:asc",
				"name:asc",
				"name:desc"
			  ],
			  "enumDescriptions": [
				"按日期降序排序标签",
				"按日期升序排序标签",
				"按名称升序排序标签",
				"按名称降序排序标签"
			  ],
			  "markdownDescription": "指定在快速选择菜单和视图中排序标签的方式",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.sortContributorsBy": {
			  "type": "string",
			  "default": "count:desc",
			  "enum": [
				"count:desc",
				"count:asc",
				"date:desc",
				"date:asc",
				"name:asc",
				"name:desc"
			  ],
			  "enumDescriptions": [
				"按提交计数降序排序贡献者",
				"按提交计数升序排序贡献者",
				"按最近提交日期降序排序贡献者",
				"按最近提交日期升序排序贡献者",
				"按名称升序排序贡献者",
				"按名称降序排序贡献者"
			  ],
			  "markdownDescription": "指定在快速选择菜单和视图中排序贡献者的方式",
			  "scope": "window",
			  "order": 40
			}
		  }
		},
		{
		  "id": "menus-toolbars",
		  "title": "Menus & Toolbars",
		  "order": 1300,
		  "properties": {
			"gitlens.menus": {
			  "anyOf": [
				{
				  "enum": [
					false
				  ]
				},
				{
				  "type": "object",
				  "properties": {
					"editor": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"blame": {
							  "type": "boolean"
							},
							"clipboard": {
							  "type": "boolean"
							},
							"compare": {
							  "type": "boolean"
							},
							"history": {
							  "type": "boolean"
							},
							"remote": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"editorGroup": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"blame": {
							  "type": "boolean"
							},
							"compare": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"editorGutter": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"compare": {
							  "type": "boolean"
							},
							"remote": {
							  "type": "boolean"
							},
							"share": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"editorTab": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"clipboard": {
							  "type": "boolean"
							},
							"compare": {
							  "type": "boolean"
							},
							"history": {
							  "type": "boolean"
							},
							"remote": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"explorer": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"clipboard": {
							  "type": "boolean"
							},
							"compare": {
							  "type": "boolean"
							},
							"history": {
							  "type": "boolean"
							},
							"remote": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"ghpr": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"worktree": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scm": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"graph": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmRepositoryInline": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"graph": {
							  "type": "boolean"
							},
							"stash": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmRepository": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"authors": {
							  "type": "boolean"
							},
							"generateCommitMessage": {
							  "type": "boolean"
							},
							"graph": {
							  "type": "boolean"
							},
							"patch": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmGroupInline": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"stash": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmGroup": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"compare": {
							  "type": "boolean"
							},
							"openClose": {
							  "type": "boolean"
							},
							"patch": {
							  "type": "boolean"
							},
							"stash": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmItemInline": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"stash": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					},
					"scmItem": {
					  "anyOf": [
						{
						  "enum": [
							false
						  ]
						},
						{
						  "type": "object",
						  "properties": {
							"clipboard": {
							  "type": "boolean"
							},
							"compare": {
							  "type": "boolean"
							},
							"history": {
							  "type": "boolean"
							},
							"remote": {
							  "type": "boolean"
							},
							"share": {
							  "type": "boolean"
							},
							"stash": {
							  "type": "boolean"
							}
						  }
						}
					  ]
					}
				  },
				  "additionalProperties": false
				}
			  ],
			  "default": {
				"editor": {
				  "blame": true,
				  "clipboard": true,
				  "compare": true,
				  "history": true,
				  "remote": true
				},
				"editorGroup": {
				  "blame": true,
				  "compare": true
				},
				"editorGutter": {
				  "compare": true,
				  "remote": true,
				  "share": true
				},
				"editorTab": {
				  "clipboard": true,
				  "compare": true,
				  "history": true,
				  "remote": true
				},
				"explorer": {
				  "clipboard": true,
				  "compare": true,
				  "history": true,
				  "remote": true
				},
				"ghpr": {
				  "worktree": true
				},
				"scm": {
				  "graph": true
				},
				"scmRepositoryInline": {
				  "graph": true,
				  "stash": false
				},
				"scmRepository": {
				  "authors": true,
				  "generateCommitMessage": true,
				  "patch": true,
				  "graph": false
				},
				"scmGroupInline": {
				  "stash": true
				},
				"scmGroup": {
				  "compare": true,
				  "openClose": true,
				  "patch": true,
				  "stash": true
				},
				"scmItemInline": {
				  "stash": false
				},
				"scmItem": {
				  "clipboard": true,
				  "compare": true,
				  "history": true,
				  "remote": true,
				  "share": true,
				  "stash": true
				}
			  },
			  "markdownDescription": "指定将哪些命令添加到哪些菜单",
			  "scope": "window",
			  "order": 10
			}
		  }
		},
		{
		  "id": "keyboard",
		  "title": "Keyboard Shortcuts",
		  "order": 1400,
		  "properties": {
			"gitlens.keymap": {
			  "type": "string",
			  "default": "chorded",
			  "enum": [
				"alternate",
				"chorded",
				"none"
			  ],
			  "enumDescriptions": [
				"添加以 `Alt` 开头的备用快捷键集合 (`⌥` 在 macOS 上)",
				"添加以 `Ctrl+Shift+G` 开头的组合快捷键集合 (`⌥⌘G` 在 macOS 上)",
				"不添加任何快捷键"
			  ],
			  "markdownDescription": "指定用于 GitLens 快捷键的键映射",
			  "scope": "window",
			  "order": 10
			}
		  }
		},
		{
		  "id": "modes",
		  "title": "Modes",
		  "order": 1500,
		  "properties": {
			"gitlens.mode.statusBar.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否在状态栏中提供活动的 GitLens 模式",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.mode.statusBar.alignment": {
			  "type": "string",
			  "default": "right",
			  "enum": [
				"left",
				"right"
			  ],
			  "enumDescriptions": [
				"左对齐",
				"右对齐"
			  ],
			  "markdownDescription": "指定活动 GitLens 模式在状态栏中的对齐方式",
			  "scope": "window",
			  "order": 11
			},
			"gitlens.mode.active": {
			  "type": "string",
			  "markdownDescription": "指定活动的 GitLens 模式（如果有）",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.modes": {
			  "type": "object",
			  "properties": {
				"zen": {
				  "type": "object",
				  "properties": {
					"name": {
					  "type": "string",
					  "description": "指定此用户定义模式的友好名称"
					},
					"statusBarItemName": {
					  "type": "string",
					  "description": "指定此用户定义模式在活动时在状态栏中显示的名称"
					},
					"description": {
					  "type": "string",
					  "description": "指定此用户定义模式的描述"
					},
					"codeLens": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否显示任何 Git CodeLens"
					},
					"currentLine": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否为当前行显示内联责任注释"
					},
					"hovers": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否显示任何悬停"
					},
					"statusBar": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否在状态栏中显示责任信息"
					}
				  }
				},
				"review": {
				  "type": "object",
				  "properties": {
					"name": {
					  "type": "string",
					  "description": "指定此用户定义模式的友好名称"
					},
					"statusBarItemName": {
					  "type": "string",
					  "description": "指定此用户定义模式在活动时在状态栏中显示的名称"
					},
					"description": {
					  "type": "string",
					  "description": "指定此用户定义模式的描述"
					},
					"codeLens": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否显示任何 Git CodeLens"
					},
					"currentLine": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否为当前行显示内联责任注释"
					},
					"hovers": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否显示任何悬停"
					},
					"statusBar": {
					  "type": "boolean",
					  "description": "指定当此用户定义模式活动时是否在状态栏中显示责任信息"
					}
				  }
				}
			  },
			  "additionalProperties": {
				"type": "object",
				"required": [
				  "name"
				],
				"properties": {
				  "name": {
					"type": "string",
					"description": "指定此用户定义模式的友好名称"
				  },
				  "statusBarItemName": {
					"type": "string",
					"description": "指定此用户定义模式在活动时在状态栏中显示的名称"
				  },
				  "description": {
					"type": "string",
					"description": "指定此用户定义模式的描述"
				  },
				  "annotations": {
					"type": "string",
					"enum": [
					  "blame",
					  "changes",
					  "heatmap"
					],
					"enumDescriptions": [
					  "显示文件责任分配注释",
					  "显示文件更改注释",
					  "显示文件热力图注释"
					],
					"description": "指定此用户定义模式活动时将显示哪些（如果有）文件注释"
				  },
				  "codeLens": {
					"type": "boolean",
					"description": "指定当此用户定义模式活动时是否显示任何 Git CodeLens"
				  },
				  "currentLine": {
					"type": "boolean",
					"description": "指定当此用户定义模式活动时是否为当前行显示内联责任注释"
				  },
				  "hovers": {
					"type": "boolean",
					"description": "指定当此用户定义模式活动时是否显示任何悬停"
				  },
				  "statusBar": {
					"type": "boolean",
					"description": "指定当此用户定义模式活动时是否在状态栏中显示责任信息"
				  }
				}
			  },
			  "default": {
				"zen": {
				  "name": "Zen",
				  "statusBarItemName": "Zen",
				  "description": "提供宁静的体验，禁用许多视觉功能",
				  "codeLens": false,
				  "currentLine": false,
				  "hovers": false,
				  "statusBar": false
				},
				"review": {
				  "name": "Review",
				  "statusBarItemName": "Reviewing",
				  "description": "用于代码审查，启用许多视觉功能",
				  "codeLens": true,
				  "currentLine": true,
				  "hovers": true
				}
			  },
			  "markdownDescription": "指定用户定义的 GitLens 模式",
			  "scope": "window",
			  "order": 30
			}
		  }
		},
		{
		  "id": "gitkraken",
		  "title": "GitKraken",
		  "order": 9000,
		  "properties": {
			"gitlens.gitKraken.activeOrganizationId": {
			  "type": "string",
			  "markdownDescription": "指定用户在 GitLens 中的活动 GitKraken 组织的 ID",
			  "scope": "window",
			  "order": 1
			}
		  }
		},
		{
		  "id": "experimental",
		  "title": "Experimental",
		  "order": 9500,
		  "properties": {
			"gitlens.cloudPatches.experimental.layout": {
			  "type": "string",
			  "default": "view",
			  "enum": [
				"editor",
				"view"
			  ],
			  "enumDescriptions": [
				"优先在编辑区域显示云补丁",
				"优先在视图中显示云补丁"
			  ],
			  "markdownDescription": "（实验性）指定“云补丁”的首选布局",
			  "scope": "window",
			  "order": 20
			}
		  }
		},
		{
		  "id": "advanced",
		  "title": "Advanced",
		  "order": 10000,
		  "properties": {
			"gitlens.detectNestedRepositories": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在打开文件时是否尝试检测嵌套仓库",
			  "scope": "resource",
			  "order": 0
			},
			"gitlens.telemetry.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否允许 GitLens 发送产品使用情况遥测数据.\n\n_注意：GitLens 要发送任何遥测数据，**此设置和 VS Code 遥测都必须启用**。如果其中任何一个被禁用，将不会发送任何遥测数据。",
			  "scope": "window",
			  "order": 1
			},
			"gitlens.advanced.messages": {
			  "type": "object",
			  "default": {
				"suppressCommitHasNoPreviousCommitWarning": false,
				"suppressCommitNotFoundWarning": false,
				"suppressCreatePullRequestPrompt": false,
				"suppressDebugLoggingWarning": false,
				"suppressFileNotUnderSourceControlWarning": false,
				"suppressGitDisabledWarning": false,
				"suppressGitMissingWarning": false,
				"suppressGitVersionWarning": false,
				"suppressLineUncommittedWarning": false,
				"suppressNoRepositoryWarning": false,
				"suppressRebaseSwitchToTextWarning": false,
				"suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
				"suppressIntegrationRequestFailed500Warning": false,
				"suppressIntegrationRequestTimedOutWarning": false,
				"suppressBlameInvalidIgnoreRevsFileWarning": false,
				"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning": false
			  },
				"properties": {
				  "suppressCommitHasNoPreviousCommitWarning": {
					"type": "boolean",
					"default": false,
					"description": "提交没有前一个提交警告"
				  },
				  "suppressCommitNotFoundWarning": {
					"type": "boolean",
					"default": false,
					"description": "提交未找到警告"
				  },
				  "suppressCreatePullRequestPrompt": {
					"type": "boolean",
					"default": false,
					"description": "创建拉取请求提示"
				  },
				  "suppressDebugLoggingWarning": {
					"type": "boolean",
					"default": false,
					"description": "调试日志警告"
				  },
				  "suppressFileNotUnderSourceControlWarning": {
					"type": "boolean",
					"default": false,
					"description": "文件不在版本控制下警告"
				  },
				  "suppressGitDisabledWarning": {
					"type": "boolean",
					"default": false,
					"description": "Git 已禁用警告"
				  },
				  "suppressGitMissingWarning": {
					"type": "boolean",
					"default": false,
					"description": "Git 缺失警告"
				  },
				  "suppressGitVersionWarning": {
					"type": "boolean",
					"default": false,
					"description": "Git 版本警告"
				  },
				  "suppressLineUncommittedWarning": {
					"type": "boolean",
					"default": false,
					"description": "行未提交警告"
				  },
				  "suppressNoRepositoryWarning": {
					"type": "boolean",
					"default": false,
					"description": "没有仓库警告"
				  },
				  "suppressRebaseSwitchToTextWarning": {
					"type": "boolean",
					"default": false,
					"description": "变基切换到文本警告"
				  },
				  "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": {
					"type": "boolean",
					"default": false,
					"description": "集成断开连接；失败请求过多警告"
				  },
				  "suppressIntegrationRequestFailed500Warning": {
					"type": "boolean",
					"default": false,
					"description": "集成请求失败（500状态码）警告"
				  },
				  "suppressIntegrationRequestTimedOutWarning": {
					"type": "boolean",
					"default": false,
					"description": "集成请求超时警告"
				  },
				  "suppressBlameInvalidIgnoreRevsFileWarning": {
					"type": "boolean",
					"default": false,
					"description": "无效的 Blame IgnoreRevs 文件警告"
				  },
				  "suppressBlameInvalidIgnoreRevsFileBadRevisionWarning": {
					"type": "boolean",
					"default": false,
					"description": "Blame IgnoreRevs 文件中的无效修订警告"
				  }
			  },
			  "additionalProperties": false,
			  "markdownDescription": "指定应抑制哪些消息",
			  "scope": "window",
			  "order": 5
			},
			"gitlens.advanced.repositorySearchDepth": {
			  "type": [
				"number",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定搜索仓库的最大文件夹深度。默认为 `#git.repositoryScanMaxDepth#`",
			  "scope": "resource",
			  "order": 10
			},
			"gitlens.advanced.abbreviatedShaLength": {
			  "type": "number",
			  "default": 7,
			  "markdownDescription": "指定缩写提交 SHA 的长度",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.advanced.abbreviateShaOnCopy": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定是将完整还是缩写的提交 SHA 复制到剪贴板。缩写到 `#gitlens.advanced.abbreviatedShaLength#` 的长度。",
			  "scope": "window",
			  "order": 21
			},
			"gitlens.advanced.commitOrdering": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "enum": [
				null,
				"date",
				"author-date",
				"topo"
			  ],
			  "enumDescriptions": [
				"按反向时间顺序显示提交",
				"按提交时间戳的反向时间顺序显示提交",
				"按作者时间戳的反向时间顺序显示提交",
				"按提交时间戳的反向时间顺序显示提交，但避免混合多条历史线"
			  ],
			  "markdownDescription": "指定显示提交的顺序。如果不指定，则提交将按逆时间顺序显示",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.blame.ignoreWhitespace": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定在责任操作期间比较修订版本时是否忽略空白字符",
			  "scope": "resource",
			  "order": 40
			},
			"gitlens.advanced.blame.customArguments": {
			  "type": [
				"array",
				"null"
			  ],
			  "default": null,
			  "items": {
				"type": "string"
			  },
			  "markdownDescription": "指定传递给 `git blame` 命令的其他参数",
			  "scope": "resource",
			  "order": 41
			},
			"gitlens.advanced.similarityThreshold": {
			  "type": [
				"number",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定删除和添加的文件对必须具有多少相似度 (百分比) 才能被视为重命名",
			  "scope": "window",
			  "order": 50
			},
			"gitlens.advanced.externalDiffTool": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定比较文件时使用的可选外部差异工具。必须是配置的 [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool)。",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.advanced.externalDirectoryDiffTool": {
			  "type": [
				"string",
				"null"
			  ],
			  "default": null,
			  "markdownDescription": "指定比较目录时使用的可选外部差异工具。必须是配置的 [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool)。",
			  "scope": "window",
			  "order": 61
			},
			"gitlens.advanced.quickPick.closeOnFocusOut": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定焦点移出时是否关闭快速选择菜单（如果没有，请按 `ESC` 键关闭）",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.advanced.maxListItems": {
			  "type": "number",
			  "default": 200,
			  "markdownDescription": "指定列表中显示的最大项目数。使用 0 表示没有最大值",
			  "scope": "window",
			  "order": 80
			},
			"gitlens.advanced.maxSearchItems": {
			  "type": "number",
			  "default": 200,
			  "markdownDescription": "指定搜索中显示的最大项目数。使用 0 表示没有最大值",
			  "scope": "window",
			  "order": 81
			},
			"gitlens.advanced.caching.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否缓存 git 输出 - 不建议更改默认值",
			  "scope": "window",
			  "order": 90
			},
			"gitlens.debug": {
			  "type": "boolean",
			  "default": false,
			  "markdownDescription": "指定调试模式",
			  "scope": "window",
			  "order": 100
			},
			"gitlens.deepLinks.schemeOverride": {
			  "type": [
				"boolean",
				"string"
			  ],
			  "default": false,
			  "markdownDescription": "指定是否使用环境变量值或指定值覆盖默认深度链接方案 (vscode://)",
			  "scope": "window",
			  "order": 110
			},
			"gitlens.advanced.useSymmetricDifferenceNotation": {
			  "deprecationMessage": "Deprecated. This setting is no longer used",
			  "markdownDescription": "已弃用。此设置不再使用"
			}
		  }
		},
		{
		  "id": "general",
		  "title": "General",
		  "order": 0,
		  "properties": {
			"gitlens.showWelcomeOnInstall": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "首次安装时是否显示欢迎体验",
			  "scope": "window",
			  "order": 10
			},
			"gitlens.showWhatsNewAfterUpgrades": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "升级到新功能版本后是否显示“新功能”通知",
			  "scope": "window",
			  "order": 20
			},
			"gitlens.outputLevel": {
			  "type": "string",
			  "default": "warn",
			  "enum": [
				"off",
				"error",
				"warn",
				"info",
				"debug"
			  ],
			  "enumDescriptions": [
				"不记录任何内容",
				"仅记录错误",
				"记录错误和警告",
				"记录错误、警告和消息",
				"记录详细的错误、警告和消息。适合问题报告。"
			  ],
			  "markdownDescription": "指定发送到 GitLens 输出频道的输出量（如果有）",
			  "scope": "window",
			  "order": 30
			},
			"gitlens.defaultGravatarsStyle": {
			  "type": "string",
			  "default": "robohash",
			  "enum": [
				"identicon",
				"mp",
				"monsterid",
				"retro",
				"robohash",
				"wavatar"
			  ],
			  "enumDescriptions": [
				"几何图案",
				"简单的卡通风格剪影轮廓（不随电子邮件哈希变化）",
				"不同颜色、表情等的怪物",
				"8位街机风格的像素化面孔",
				"不同颜色、表情等的机器人",
				"具有不同特征和背景的面孔"
			  ],
			  "markdownDescription": "指定 Gravatar 默认（备用）图像的样式",
			  "scope": "window",
			  "order": 40
			},
			"gitlens.proxy": {
			  "type": [
				"object",
				"null"
			  ],
			  "default": null,
			  "items": {
				"type": "object",
				"required": [
				  "url",
				  "strictSSL"
				],
				"properties": {
				  "url": {
					"type": [
					  "string",
					  "null"
					],
					"default": null,
					"description": "指定要使用的代理服务器的URL"
				  },
				  "strictSSL": {
					"type": "boolean",
					"description": "指定是否应根据提供的CA列表验证代理服务器证书",
					"default": true
				  }
				},
				"additionalProperties": false
			  },
			  "uniqueItems": true,
			  "description": "指定要使用的代理配置。如果未指定，将根据VS Code或操作系统设置确定代理配置",
			  "scope": "window",
			  "order": 55
			},
			"gitlens.plusFeatures.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否隐藏或显示需要试用或付费计划且根据打开的存储库和当前试用或计划无法访问的功能",
			  "scope": "window",
			  "order": 60
			},
			"gitlens.virtualRepositories.enabled": {
			  "type": "boolean",
			  "default": true,
			  "markdownDescription": "指定是否启用虚拟存储库支持",
			  "scope": "window",
			  "order": 70
			},
			"gitlens.insiders": {
			  "deprecationMessage": "Deprecated. Use the pre-release edition of GitLens instead",
			  "markdownDeprecationMessage": "Deprecated. Use the pre-release of GitLens instead"
			}
		  }
		}
	  ],
	  "configurationDefaults": {
		"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]": {
		  "gitlens.codeLens.scopes": [
			"document"
		  ]
		},
		"[python]": {
		  "gitlens.codeLens.symbolScopes": [
			"!Module"
		  ]
		}
	  },
	  "colors": [
		{
		  "id": "gitlens.gutterBackgroundColor",
		  "description": "指定文件责任注释的背景颜色",
		  "defaults": {
			"dark": "#FFFFFF13",
			"light": "#0000000C",
			"highContrast": "#FFFFFF13"
		  }
		},
		{
		  "id": "gitlens.gutterForegroundColor",
		  "description": "指定文件责任注释的前景颜色",
		  "defaults": {
			"dark": "#BEBEBE",
			"light": "#747474",
			"highContrast": "#BEBEBE"
		  }
		},
		{
		  "id": "gitlens.gutterUncommittedForegroundColor",
		  "description": "指定文件责任注释中未提交行的前景颜色",
		  "defaults": {
			"dark": "#00BCF299",
			"light": "#00BCF299",
			"highContrast": "#00BCF2FF"
		  }
		},
		{
		  "id": "gitlens.trailingLineBackgroundColor",
		  "description": "指定当前行的内联责任注释的背景颜色",
		  "defaults": {
			"dark": "#00000000",
			"light": "#00000000",
			"highContrast": "#00000000"
		  }
		},
		{
		  "id": "gitlens.trailingLineForegroundColor",
		  "description": "指定当前行的内联责任注释的前景颜色",
		  "defaults": {
			"dark": "#99999959",
			"light": "#99999959",
			"highContrast": "#99999999"
		  }
		},
		{
		  "id": "gitlens.lineHighlightBackgroundColor",
		  "description": "指定责任注释中相关行高亮显示的背景颜色",
		  "defaults": {
			"dark": "#00BCF233",
			"light": "#00BCF233",
			"highContrast": "#00BCF233"
		  }
		},
		{
		  "id": "gitlens.lineHighlightOverviewRulerColor",
		  "description": "指定责任注释中相关行高亮显示的滚动条颜色",
		  "defaults": {
			"dark": "#00BCF299",
			"light": "#00BCF299",
			"highContrast": "#00BCF299"
		  }
		},
		{
		  "id": "gitlens.openAutolinkedIssueIconColor",
		  "defaults": {
			"dark": "#3fb950",
			"light": "#1a7f37",
			"highContrast": "#68ff79"
		  },
		  "description": "指定 GitLens 视图中打开问题的图标颜色"
		},
		{
		  "id": "gitlens.closedAutolinkedIssueIconColor",
		  "defaults": {
			"dark": "#a371f7",
			"light": "#8250df",
			"highContrast": "#8945ff"
		  },
		  "description": "指定 GitLens 视图中关闭问题的图标颜色"
		},
		{
		  "id": "gitlens.closedPullRequestIconColor",
		  "description": "指定 GitLens 视图中关闭拉取请求的图标颜色",
		  "defaults": {
			"dark": "#f85149",
			"light": "#cf222e",
			"highContrast": "#ff544b"
		  }
		},
		{
		  "id": "gitlens.openPullRequestIconColor",
		  "description": "指定 GitLens 视图中打开拉取请求的图标颜色",
		  "defaults": {
			"dark": "#3fb950",
			"light": "#1a7f37",
			"highContrast": "#68ff79"
		  }
		},
		{
		  "id": "gitlens.mergedPullRequestIconColor",
		  "description": "指定 GitLens 视图中合并拉取请求的图标颜色",
		  "defaults": {
			"dark": "#a371f7",
			"light": "#8250df",
			"highContrast": "#8945ff"
		  }
		},
		{
		  "id": "gitlens.unpublishedChangesIconColor",
		  "description": "指定 GitLens 视图中未发布更改的图标颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.unpublishedCommitIconColor",
		  "description": "指定 GitLens 视图中未发布提交的图标颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.unpulledChangesIconColor",
		  "description": "指定 GitLens 视图中未拉取更改的图标颜色",
		  "defaults": {
			"dark": "#b15e35",
			"light": "#b15e35",
			"highContrast": "#ff874c"
		  }
		},
		{
		  "id": "gitlens.decorations.addedForegroundColor",
		  "description": "指定添加文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.addedResourceForeground",
			"dark": "gitDecoration.addedResourceForeground",
			"highContrast": "gitDecoration.addedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.copiedForegroundColor",
		  "description": "指定复制文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.renamedResourceForeground",
			"dark": "gitDecoration.renamedResourceForeground",
			"highContrast": "gitDecoration.renamedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.deletedForegroundColor",
		  "description": "指定删除文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.deletedResourceForeground",
			"dark": "gitDecoration.deletedResourceForeground",
			"highContrast": "gitDecoration.deletedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.ignoredForegroundColor",
		  "description": "指定忽略文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.ignoredResourceForeground",
			"dark": "gitDecoration.ignoredResourceForeground",
			"highContrast": "gitDecoration.ignoredResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.modifiedForegroundColor",
		  "description": "指定修改文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.modifiedResourceForeground",
			"dark": "gitDecoration.modifiedResourceForeground",
			"highContrast": "gitDecoration.modifiedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.untrackedForegroundColor",
		  "description": "指定未跟踪文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.untrackedResourceForeground",
			"dark": "gitDecoration.untrackedResourceForeground",
			"highContrast": "gitDecoration.untrackedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.renamedForegroundColor",
		  "description": "指定重命名文件的装饰前景颜色",
		  "defaults": {
			"light": "gitDecoration.renamedResourceForeground",
			"dark": "gitDecoration.renamedResourceForeground",
			"highContrast": "gitDecoration.renamedResourceForeground"
		  }
		},
		{
		  "id": "gitlens.decorations.branchAheadForegroundColor",
		  "description": "指定超前其上游分支的分支的装饰前景颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.decorations.branchBehindForegroundColor",
		  "description": "指定落后其上游分支的分支的装饰前景颜色",
		  "defaults": {
			"dark": "#b15e35",
			"light": "#b15e35",
			"highContrast": "#ff874c"
		  }
		},
		{
		  "id": "gitlens.decorations.branchDivergedForegroundColor",
		  "description": "指定同时超前和落后其上游分支的分支的装饰前景颜色",
		  "defaults": {
			"dark": "#D8AF1B",
			"light": "#D8AF1B",
			"highContrast": "#D8AF1B"
		  }
		},
		{
		  "id": "gitlens.decorations.branchUpToDateForegroundColor",
		  "description": "指定与其上游分支同步的分支的装饰前景颜色",
		  "defaults": {
			"dark": "sideBar.foreground",
			"light": "sideBar.foreground",
			"highContrast": "sideBar.foreground"
		  }
		},
		{
		  "id": "gitlens.decorations.branchUnpublishedForegroundColor",
		  "description": "指定尚未发布到上游的分支的装饰前景颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.decorations.branchMissingUpstreamForegroundColor",
		  "description": "指定缺少上游的分支的装饰前景颜色",
		  "defaults": {
			"light": "#ad0707",
			"dark": "#c74e39",
			"highContrast": "#c74e39"
		  }
		},
		{
		  "id": "gitlens.decorations.statusMergingOrRebasingConflictForegroundColor",
		  "description": "指定存在冲突的变基操作期间的状态的装饰前景颜色",
		  "defaults": {
			"light": "#ad0707",
			"dark": "#c74e39",
			"highContrast": "#c74e39"
		  }
		},
		{
		  "id": "gitlens.decorations.statusMergingOrRebasingForegroundColor",
		  "description": "指定变基操作期间的状态的装饰前景颜色",
		  "defaults": {
			"dark": "#D8AF1B",
			"light": "#D8AF1B",
			"highContrast": "#D8AF1B"
		  }
		},
		{
		  "id": "gitlens.decorations.workspaceRepoMissingForegroundColor",
		  "description": "指定缺少本地路径的工作区存储库的装饰前景颜色",
		  "defaults": {
			"dark": "#909090",
			"light": "#949494",
			"highContrast": "#d3d3d3"
		  }
		},
		{
		  "id": "gitlens.decorations.workspaceCurrentForegroundColor",
		  "description": "指定当前以代码工作区文件形式打开的工作区的装饰前景颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.decorations.workspaceRepoOpenForegroundColor",
		  "description": "指定在当前工作区中打开的工作区存储库的装饰前景颜色",
		  "defaults": {
			"dark": "#35b15e",
			"light": "#35b15e",
			"highContrast": "#4dff88"
		  }
		},
		{
		  "id": "gitlens.decorations.worktreeHasUncommittedChangesForegroundColor",
		  "description": "指定有未提交更改的工作树的装饰前景颜色",
		  "defaults": {
			"light": "#895503",
			"dark": "#E2C08D",
			"highContrast": "#E2C08D"
		  }
		},
		{
		  "id": "gitlens.decorations.worktreeMissingForegroundColor",
		  "description": "指定在磁盘上找不到的工作树的装饰前景颜色",
		  "defaults": {
			"light": "#ad0707",
			"dark": "#c74e39",
			"highContrast": "#c74e39"
		  }
		},
		{
		  "id": "gitlens.graphLane1Color",
		  "description": "指定 _提交图_ 可视化的第一条提交通道的颜色",
		  "defaults": {
			"light": "#15a0bf",
			"dark": "#15a0bf",
			"highContrast": "#15a0bf"
		  }
		},
		{
		  "id": "gitlens.graphLane2Color",
		  "description": "指定 _提交图_ 可视化的第二条提交通道的颜色",
		  "defaults": {
			"light": "#0669f7",
			"dark": "#0669f7",
			"highContrast": "#0669f7"
		  }
		},
		{
		  "id": "gitlens.graphLane3Color",
		  "description": "指定 _提交图_ 可视化的第三条提交通道的颜色",
		  "defaults": {
			"light": "#8e00c2",
			"dark": "#8e00c2",
			"highContrast": "#8e00c2"
		  }
		},
		{
		  "id": "gitlens.graphLane4Color",
		  "description": "指定 _提交图_ 可视化的第四条提交通道的颜色",
		  "defaults": {
			"light": "#c517b6",
			"dark": "#c517b6",
			"highContrast": "#c517b6"
		  }
		},
		{
		  "id": "gitlens.graphLane5Color",
		  "description": "指定 _提交图_ 可视化的第五条提交通道的颜色",
		  "defaults": {
			"light": "#d90171",
			"dark": "#d90171",
			"highContrast": "#d90171"
		  }
		},
		{
		  "id": "gitlens.graphLane6Color",
		  "description": "指定 _提交图_ 可视化的第六条提交通道的颜色",
		  "defaults": {
			"light": "#cd0101",
			"dark": "#cd0101",
			"highContrast": "#cd0101"
		  }
		},
		{
		  "id": "gitlens.graphLane7Color",
		  "description": "指定 _提交图_ 可视化的第七条提交通道的颜色",
		  "defaults": {
			"light": "#f25d2e",
			"dark": "#f25d2e",
			"highContrast": "#f25d2e"
		  }
		},
		{
		  "id": "gitlens.graphLane8Color",
		  "description": "指定 _提交图_ 可视化的第八条提交通道的颜色",
		  "defaults": {
			"light": "#f2ca33",
			"dark": "#f2ca33",
			"highContrast": "#f2ca33"
		  }
		},
		{
		  "id": "gitlens.graphLane9Color",
		  "description": "指定 _提交图_ 可视化的第九条提交通道的颜色",
		  "defaults": {
			"light": "#7bd938",
			"dark": "#7bd938",
			"highContrast": "#7bd938"
		  }
		},
		{
		  "id": "gitlens.graphLane10Color",
		  "description": "指定 _提交图_ 可视化的第十条提交通道的颜色",
		  "defaults": {
			"light": "#2ece9d",
			"dark": "#2ece9d",
			"highContrast": "#2ece9d"
		  }
		},
		{
		  "id": "gitlens.graphChangesColumnAddedColor",
		  "description": "指定 _提交图_ 中 _更改_ 列中表示添加行的颜色",
		  "defaults": {
			"light": "#2da44e",
			"highContrastLight": "#2da44e",
			"dark": "#347d39",
			"highContrast": "#347d39"
		  }
		},
		{
		  "id": "gitlens.graphChangesColumnDeletedColor",
		  "description": "指定 _提交图_ 中 _更改_ 列中表示删除行的颜色",
		  "defaults": {
			"light": "#cf222e",
			"highContrastLight": "#cf222e",
			"dark": "#c93c37",
			"highContrast": "#c93c37"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerHeadColor",
		  "description": "指定 _提交图_ 小地图上标记 HEAD 的颜色",
		  "defaults": {
			"light": "#04c814",
			"highContrastLight": "#04c814",
			"dark": "#05e617",
			"highContrast": "#05e617"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerHeadColor",
		  "description": "指定 _提交图_ 滚动条上标记 HEAD 的颜色",
		  "defaults": {
			"light": "#04c814",
			"highContrastLight": "#04c814",
			"dark": "#05e617",
			"highContrast": "#05e617"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerUpstreamColor",
		  "description": "指定 _提交图_ 小地图上标记 HEAD 的上游的颜色",
		  "defaults": {
			"light": "#8cd993",
			"highContrastLight": "#8cd993",
			"dark": "#09ae17",
			"highContrast": "#09ae17"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerUpstreamColor",
		  "description": "指定 _提交图_ 滚动条上标记 HEAD 的上游的颜色",
		  "defaults": {
			"light": "#8cd993",
			"highContrastLight": "#8cd993",
			"dark": "#09ae17",
			"highContrast": "#09ae17"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerHighlightsColor",
		  "description": "指定 _提交图_ 小地图上标记高亮（匹配项）的颜色",
		  "defaults": {
			"light": "#f5cc00",
			"highContrastLight": "#f5cc00",
			"dark": "#fbff0a",
			"highContrast": "#fbff0a"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerHighlightsColor",
		  "description": "指定 _提交图_ 滚动条上标记高亮（匹配项）的颜色",
		  "defaults": {
			"light": "#f5cc00",
			"highContrastLight": "#f5cc00",
			"dark": "#fbff0a",
			"highContrast": "#fbff0a"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerLocalBranchesColor",
		  "description": "指定 _提交图_ 小地图上标记本地分支的颜色",
		  "defaults": {
			"light": "#3095e8",
			"highContrastLight": "#3095e8",
			"dark": "#3087cf",
			"highContrast": "#3087cf"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerLocalBranchesColor",
		  "description": "指定 _提交图_ 滚动条上标记本地分支的颜色",
		  "defaults": {
			"light": "#3095e8",
			"highContrastLight": "#3095e8",
			"dark": "#3087cf",
			"highContrast": "#3087cf"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerRemoteBranchesColor",
		  "description": "指定 _提交图_ 小地图上标记远程分支的颜色",
		  "defaults": {
			"light": "#67ace4",
			"highContrastLight": "#67ace4",
			"dark": "#2b5e88",
			"highContrast": "#2b5e88"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerRemoteBranchesColor",
		  "description": "指定 _提交图_ 滚动条上标记远程分支的颜色",
		  "defaults": {
			"light": "#67ace4",
			"highContrastLight": "#67ace4",
			"dark": "#2b5e88",
			"highContrast": "#2b5e88"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerStashesColor",
		  "description": "指定 _提交图_ 小地图上标记贮藏区的颜色",
		  "defaults": {
			"light": "#e467e4",
			"highContrastLight": "#e467e4",
			"dark": "#b34db3",
			"highContrast": "#b34db3"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerStashesColor",
		  "description": "指定 _提交图_ 滚动条上标记贮藏区的颜色",
		  "defaults": {
			"light": "#e467e4",
			"highContrastLight": "#e467e4",
			"dark": "#b34db3",
			"highContrast": "#b34db3"
		  }
		},
		{
		  "id": "gitlens.graphMinimapMarkerTagsColor",
		  "description": "指定 _提交图_ 小地图上标记标签的颜色",
		  "defaults": {
			"light": "#d2a379",
			"highContrastLight": "#d2a379",
			"dark": "#6b562e",
			"highContrast": "#6b562e"
		  }
		},
		{
		  "id": "gitlens.graphScrollMarkerTagsColor",
		  "description": "指定 _提交图_ 滚动条上标记标签的颜色",
		  "defaults": {
			"light": "#d2a379",
			"highContrastLight": "#d2a379",
			"dark": "#6b562e",
			"highContrast": "#6b562e"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorMergeableColor",
		  "description": "指定 _启动板_ 指示图标在优先级为可合并时的颜色",
		  "defaults": {
			"light": "#42c954",
			"dark": "#3fb950",
			"highContrast": "#68ff79"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorMergeableHoverColor",
		  "description": "指定 _启动板_ 指示图标在悬停时优先级为可合并时的颜色",
		  "defaults": {
			"light": "#42c954",
			"dark": "#3fb950",
			"highContrast": "#68ff79"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorBlockedColor",
		  "description": "指定 _启动板_ 指示图标在优先级为被阻止时的颜色",
		  "defaults": {
			"light": "#ad0707",
			"dark": "#c74e39",
			"highContrast": "#ff003c"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorBlockedHoverColor",
		  "description": "指定 _启动板_ 指示图标在悬停时优先级为被阻止时的颜色",
		  "defaults": {
			"light": "#ad0707",
			"dark": "#c74e39",
			"highContrast": "#ff003c"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorAttentionColor",
		  "description": "指定 _启动板_ 指示图标在优先级为后续或需要审查时的颜色",
		  "defaults": {
			"dark": "#D8AF1B",
			"light": "#cc9b15",
			"highContrast": "#D8AF1B"
		  }
		},
		{
		  "id": "gitlens.launchpadIndicatorAttentionHoverColor",
		  "description": "指定 _启动板_ 指示图标在悬停时优先级为后续或需要审查时的颜色",
		  "defaults": {
			"dark": "#D8AF1B",
			"light": "#cc9b15",
			"highContrast": "#D8AF1B"
		  }
		}
	  ],
	  "commands": [
		{
		  "command": "gitlens.generateCommitMessage",
		  "title": "生成提交信息（GitLens）...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.reset",
		  "title": "重置存储的数据...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.resetAIKey",
		  "title": "重置存储的AI密钥...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.login",
		  "title": "登录到GitKraken...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.logout",
		  "title": "退出GitKraken",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.signUp",
		  "title": "注册GitKraken...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.startPreviewTrial",
		  "title": "预览专业版",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.reactivateProTrial",
		  "title": "重新激活专业版试用",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.manage",
		  "title": "管理您的账户...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.cloudIntegrations.manage",
		  "title": "管理云集成...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.upgrade",
		  "title": "升级到专业版...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.hide",
		  "title": "隐藏专业版功能",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.restore",
		  "title": "恢复专业版功能",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.plus.refreshRepositoryAccess",
		  "title": "刷新仓库访问",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gk.switchOrganization",
		  "title": "切换组织...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.getStarted",
		  "title": "开始",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showPatchDetailsPage",
		  "title": "显示补丁详情",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.applyPatchFromClipboard",
		  "title": "应用复制的补丁",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.copyPatchToClipboard",
		  "title": "复制为补丁",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.copyWorkingChangesToWorktree",
		  "title": "复制工作变更到工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.copyWorkingChangesToWorktree",
		  "title": "复制工作变更到工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.createPatch",
		  "title": "创建补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.createCloudPatch",
		  "title": "创建补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.shareAsCloudPatch",
		  "title": "分享为云补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openCloudPatch",
		  "title": "打开云补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openPatch",
		  "title": "打开补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showBranchesView",
		  "title": "显示分支视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showCommitDetailsView",
		  "title": "显示检查视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showCommitsView",
		  "title": "显示提交视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showContributorsView",
		  "title": "显示贡献者视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showDraftsView",
		  "title": "显示云补丁视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showFileHistoryView",
		  "title": "显示文件历史视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showLaunchpad",
		  "title": "打开启动板",
		  "category": "GitLens",
		  "icon": "$(rocket)"
		},
		{
		  "command": "gitlens.showFocusPage",
		  "title": "在编辑器中打开启动板",
		  "category": "GitLens",
		  "icon": "$(rocket)"
		},
		{
		  "command": "gitlens.launchpad.split",
		  "title": "在编辑器中分割启动板",
		  "category": "GitLens",
		  "icon": "$(split-horizontal)"
		},
		{
		  "command": "gitlens.launchpad.indicator.toggle",
		  "title": "切换启动板指示器",
		  "category": "GitLens",
		  "icon": "$(rocket)"
		},
		{
		  "command": "gitlens.showGraph",
		  "title": "显示提交图",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.showGraphPage",
		  "title": "在编辑器中显示提交图",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.graph.split",
		  "title": "分割提交图",
		  "category": "GitLens",
		  "icon": "$(split-horizontal)"
		},
		{
		  "command": "gitlens.showGraphView",
		  "title": "显示提交图视图",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.toggleGraph",
		  "title": "切换提交图",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.toggleMaximizedGraph",
		  "title": "切换最大化提交图",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.showHomeView",
		  "title": "显示主页视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showAccountView",
		  "title": "显示账户视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showInCommitGraph",
		  "title": "在提交图中打开",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.showInCommitGraphView",
		  "title": "在提交图中打开",
		  "category": "GitLens",
		  "icon": "$(gitlens-graph)"
		},
		{
		  "command": "gitlens.showLineHistoryView",
		  "title": "显示行历史视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showRemotesView",
		  "title": "显示远程视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showRepositoriesView",
		  "title": "显示仓库视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showSearchAndCompareView",
		  "title": "显示搜索和比较提交视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showSettingsPage",
		  "title": "打开设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!views",
		  "title": "打开设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!autolinks",
		  "title": "配置自动链接",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!file-annotations",
		  "title": "打开文件注释设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!branches-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!commits-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!contributors-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!file-history-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!line-history-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!remotes-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!repositories-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!search-compare-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!stashes-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!tags-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!worktrees-view",
		  "title": "打开视图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showSettingsPage!commit-graph",
		  "title": "打开提交图设置",
		  "category": "GitLens",
		  "icon": "$(gear)"
		},
		{
		  "command": "gitlens.showTimelinePage",
		  "title": "显示可视化文件历史",
		  "category": "GitLens",
		  "icon": "$(graph-scatter)"
		},
		{
		  "command": "gitlens.showInTimeline",
		  "title": "打开可视化文件历史",
		  "category": "GitLens",
		  "icon": "$(graph-scatter)"
		},
		{
		  "command": "gitlens.timeline.split",
		  "title": "分割可视化文件历史",
		  "category": "GitLens",
		  "icon": "$(split-horizontal)"
		},
		{
		  "command": "gitlens.showStashesView",
		  "title": "显示暂存视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showTagsView",
		  "title": "显示标签视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showTimelineView",
		  "title": "显示可视化文件历史视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showWelcomePage",
		  "title": "欢迎",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showWorktreesView",
		  "title": "显示工作树视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showWorkspacesView",
		  "title": "显示GitKraken工作区视图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.compareWith",
		  "title": "比较引用...",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.compareHeadWith",
		  "title": "比较HEAD与...",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.compareWorkingWith",
		  "title": "比较工作树与...",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.diffDirectory",
		  "title": "打开目录比较（difftool）与...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffDirectoryWithHead",
		  "title": "打开目录比较（difftool）",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffWithNext",
		  "title": "打开与下一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-next-commit)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		},
		{
		  "command": "gitlens.diffWithNextInDiffLeft",
		  "title": "打开与下一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-next-commit)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		},
		{
		  "command": "gitlens.diffWithNextInDiffRight",
		  "title": "打开与下一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-next-commit)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		},
		{
		  "command": "gitlens.diffWithPrevious",
		  "title": "打开与上一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-prev-commit)"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffLeft",
		  "title": "打开与上一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-prev-commit)"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffRight",
		  "title": "打开与上一个修订版本的变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-prev-commit)"
		},
		{
		  "command": "gitlens.diffLineWithPrevious",
		  "title": "打开与上一个修订版本的行变更",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffFolderWithRevision",
		  "title": "打开文件夹变更与修订版本...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffFolderWithRevisionFrom",
		  "title": "打开文件夹变更与分支或标签...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffWithRevision",
		  "title": "打开变更与修订版本...",
		  "category": "GitLens",
		  "icon": "$(gitlens-prev-commit-menu)"
		},
		{
		  "command": "gitlens.diffWithRevisionFrom",
		  "title": "打开变更与分支或标签...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.diffWithWorking",
		  "title": "打开变更与工作文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.diffWithWorkingInDiffLeft",
		  "title": "打开变更与工作文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.diffWithWorkingInDiffRight",
		  "title": "打开变更与工作文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.diffLineWithWorking",
		  "title": "打开行变更与工作文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.disableRebaseEditor",
		  "title": "禁用交互式变基编辑器",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.enableRebaseEditor",
		  "title": "启用交互式变基编辑器",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.toggleFileBlame",
		  "title": "切换文件责任",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileBlameInDiffLeft",
		  "title": "切换文件责任",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileBlameInDiffRight",
		  "title": "切换文件责任",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.annotations.nextChange",
		  "title": "下一个变更",
		  "icon": "$(arrow-down)"
		},
		{
		  "command": "gitlens.annotations.previousChange",
		  "title": "上一个变更",
		  "icon": "$(arrow-up)"
		},
		{
		  "command": "gitlens.clearFileAnnotations",
		  "title": "清除文件注释",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens-filled)"
		},
		{
		  "command": "gitlens.computingFileAnnotations",
		  "title": "计算文件注释中...",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens-filled)"
		},
		{
		  "command": "gitlens.toggleFileHeatmap",
		  "title": "切换文件热图",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileHeatmapInDiffLeft",
		  "title": "切换文件热图",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileHeatmapInDiffRight",
		  "title": "切换文件热图",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileChanges",
		  "title": "切换文件变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleFileChangesOnly",
		  "title": "切换文件变更",
		  "category": "GitLens",
		  "icon": "$(gitlens-gitlens)"
		},
		{
		  "command": "gitlens.toggleLineBlame",
		  "title": "切换行责任",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.toggleCodeLens",
		  "title": "切换Git CodeLens",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands",
		  "title": "Git命令面板",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.branch",
		  "title": "Git分支...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.branch.create",
		  "title": "Git创建分支...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.branch.delete",
		  "title": "Git删除分支...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.branch.prune",
		  "title": "Git修剪分支...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.branch.rename",
		  "title": "Git重命名分支...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.checkout",
		  "title": "Git检出...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.cherryPick",
		  "title": "Git挑拣...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.history",
		  "title": "Git历史记录（日志）...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.merge",
		  "title": "Git合并...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.rebase",
		  "title": "Git变基...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.remote",
		  "title": "Git远程...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.remote.add",
		  "title": "Git添加远程...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.remote.prune",
		  "title": "Git修剪远程...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.remote.remove",
		  "title": "Git移除远程...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.reset",
		  "title": "Git重置...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.revert",
		  "title": "Git还原...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.show",
		  "title": "Git显示...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash",
		  "title": "Git储藏...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash.drop",
		  "title": "Git丢弃储藏...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash.list",
		  "title": "Git储藏列表...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash.pop",
		  "title": "Git弹出储藏...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash.push",
		  "title": "Git推送储藏...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.stash.rename",
		  "title": "Git重命名储藏...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.status",
		  "title": "Git状态...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.switch",
		  "title": "Git切换到...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.tag",
		  "title": "Git标签...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.tag.create",
		  "title": "Git创建标签...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.tag.delete",
		  "title": "Git删除标签...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.worktree",
		  "title": "Git工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.worktree.create",
		  "title": "Git创建工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.worktree.delete",
		  "title": "Git删除工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.gitCommands.worktree.open",
		  "title": "Git打开工作树...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.switchAIModel",
		  "title": "切换AI模型",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.switchMode",
		  "title": "切换模式",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.toggleReviewMode",
		  "title": "切换审查模式",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.toggleZenMode",
		  "title": "切换禅模式",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.resetViewsLayout",
		  "title": "重置视图布局",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showCommitSearch",
		  "title": "搜索提交",
		  "category": "GitLens",
		  "icon": "$(search)"
		},
		{
		  "command": "gitlens.showLastQuickPick",
		  "title": "显示上次打开的快速选择",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.revealCommitInView",
		  "title": "在侧边栏中显示提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showCommitInView",
		  "title": "检查提交详情",
		  "category": "GitLens",
		  "icon": "$(eye)"
		},
		{
		  "command": "gitlens.showLineCommitInView",
		  "title": "检查行提交详情",
		  "category": "GitLens",
		  "icon": "$(eye)"
		},
		{
		  "command": "gitlens.showInDetailsView",
		  "title": "检查详情",
		  "category": "GitLens",
		  "icon": "$(eye)"
		},
		{
		  "command": "gitlens.showCommitsInView",
		  "title": "在选择中搜索提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showFileHistoryInView",
		  "title": "打开文件历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openFileHistory",
		  "title": "打开文件历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openFolderHistory",
		  "title": "打开文件夹历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickCommitDetails",
		  "title": "快速显示提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickCommitFileDetails",
		  "title": "快速显示行提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickRevisionDetails",
		  "title": "显示修订提交",
		  "category": "GitLens",
		  "icon": "$(gitlens-commit-horizontal)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.showQuickRevisionDetailsInDiffLeft",
		  "title": "显示修订提交",
		  "category": "GitLens",
		  "icon": "$(gitlens-commit-horizontal)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.showQuickRevisionDetailsInDiffRight",
		  "title": "显示修订提交",
		  "category": "GitLens",
		  "icon": "$(gitlens-commit-horizontal)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.showQuickFileHistory",
		  "title": "显示文件历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.quickOpenFileHistory",
		  "title": "快速打开文件历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickBranchHistory",
		  "title": "显示分支历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickRepoHistory",
		  "title": "显示当前分支历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickRepoStatus",
		  "title": "显示仓库状态",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.showQuickStashList",
		  "title": "显示储藏",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.addAuthors",
		  "title": "添加共同作者...",
		  "category": "GitLens",
		  "icon": "$(person-add)"
		},
		{
		  "command": "gitlens.connectRemoteProvider",
		  "title": "连接远程集成",
		  "category": "GitLens",
		  "icon": "$(plug)"
		},
		{
		  "command": "gitlens.disconnectRemoteProvider",
		  "title": "断开远程集成",
		  "category": "GitLens",
		  "icon": "$(gitlens-unplug)"
		},
		{
		  "command": "gitlens.copyCurrentBranch",
		  "title": "复制当前分支名称",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyMessageToClipboard",
		  "title": "复制信息",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyShaToClipboard",
		  "title": "复制SHA",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyRelativePathToClipboard",
		  "title": "复制相对路径",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.closeUnchangedFiles",
		  "title": "关闭未更改的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openChangedFiles",
		  "title": "打开已更改的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openOnlyChangedFiles",
		  "title": "打开已更改并关闭未更改的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openBranchesOnRemote",
		  "title": "在远程打开分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyDeepLinkToBranch",
		  "title": "复制分支链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToCommit",
		  "title": "复制提交链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToComparison",
		  "title": "复制比较链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToFile",
		  "title": "复制文件链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToFileAtRevision",
		  "title": "复制修订时的文件链接...",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToLines",
		  "title": "复制代码链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToRepo",
		  "title": "复制仓库链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToWorkspace",
		  "title": "复制工作区链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyDeepLinkToTag",
		  "title": "复制标签链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyRemoteBranchesUrl",
		  "title": "复制远程分支URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openBranchOnRemote",
		  "title": "在远程打开分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.openBranchOnRemote",
		  "title": "在远程打开分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.openBranchOnRemote.multi",
		  "title": "在远程打开分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.openCurrentBranchOnRemote",
		  "title": "在远程打开当前分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteBranchUrl",
		  "title": "复制远程分支URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openCommitOnRemote",
		  "title": "在远程打开提交",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.openCommitOnRemote",
		  "title": "在远程打开提交",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.openCommitOnRemote.multi",
		  "title": "在远程打开提交",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteCommitUrl",
		  "title": "复制远程提交URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.copyRemoteCommitUrl",
		  "title": "复制远程提交URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.copyRemoteCommitUrl.multi",
		  "title": "复制远程提交URLs",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openComparisonOnRemote",
		  "title": "在远程打开比较",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteComparisonUrl",
		  "title": "复制远程比较URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openFileFromRemote",
		  "title": "从远程打开文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openFileOnRemote",
		  "title": "在远程打开文件",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteFileUrlToClipboard",
		  "title": "复制远程文件URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.copyRemoteFileUrlWithoutRange",
		  "title": "复制远程文件URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openFileOnRemoteFrom",
		  "title": "从...在远程打开文件",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteFileUrlFrom",
		  "title": "从...复制远程文件URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openBlamePriorToChange",
		  "title": "在变更前打开责任",
		  "icon": "$(versions)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openFileRevision",
		  "title": "在修订时打开文件...",
		  "icon": "$(gitlens-open-revision)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openFileRevisionFrom",
		  "title": "从...在修订时打开文件",
		  "icon": "$(gitlens-open-revision)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.openPullRequestOnRemote",
		  "title": "在远程打开拉取请求",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemotePullRequestUrl",
		  "title": "复制拉取请求URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openAssociatedPullRequestOnRemote",
		  "title": "打开相关的拉取请求",
		  "category": "GitLens",
		  "icon": "$(git-pull-request)"
		},
		{
		  "command": "gitlens.openRepoOnRemote",
		  "title": "在远程打开仓库",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.copyRemoteRepositoryUrl",
		  "title": "复制远程仓库URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.openRevisionFile",
		  "title": "在修订时打开文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-open-revision)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.openRevisionFileInDiffLeft",
		  "title": "在修订时打开文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-open-revision)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.openRevisionFileInDiffRight",
		  "title": "在修订时打开文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-open-revision)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ "
		},
		{
		  "command": "gitlens.openWorkingFile",
		  "title": "打开文件",
		  "category": "GitLens",
		  "icon": "$(go-to-file)"
		},
		{
		  "command": "gitlens.openWorkingFileInDiffLeft",
		  "title": "打开文件",
		  "category": "GitLens",
		  "icon": "$(go-to-file)"
		},
		{
		  "command": "gitlens.openWorkingFileInDiffRight",
		  "title": "打开文件",
		  "category": "GitLens",
		  "icon": "$(go-to-file)"
		},
		{
		  "command": "gitlens.stashApply",
		  "title": "应用储藏...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-pop)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.stash.apply",
		  "title": "应用储藏...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-pop)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.stash.delete",
		  "title": "丢弃储藏...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.stash.delete.multi",
		  "title": "丢弃储藏...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.stash.rename",
		  "title": "重命名储藏...",
		  "category": "GitLens",
		  "icon": "$(edit)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.stashSave",
		  "title": "储藏所有更改...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-save)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.stashSaveFiles",
		  "title": "储藏更改...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-save)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.externalDiff",
		  "title": "打开变更（difftool）",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.externalDiffAll",
		  "title": "打开所有变更（difftool）",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.inviteToLiveShare",
		  "title": "邀请进行实时共享",
		  "category": "GitLens",
		  "icon": "$(live-share)"
		},
		{
		  "command": "gitlens.browseRepoAtRevision",
		  "title": "从修订浏览仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.browseRepoAtRevisionInNewWindow",
		  "title": "在新窗口中从修订浏览仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.browseRepoBeforeRevision",
		  "title": "从修订前浏览仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.browseRepoBeforeRevisionInNewWindow",
		  "title": "在新窗口中从修订前浏览仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)",
		  "enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
		},
		{
		  "command": "gitlens.views.browseRepoAtRevision",
		  "title": "从这里的仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)"
		},
		{
		  "command": "gitlens.views.browseRepoAtRevisionInNewWindow",
		  "title": "在新窗口中从这里的仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)"
		},
		{
		  "command": "gitlens.views.browseRepoBeforeRevision",
		  "title": "从这里之前的仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)"
		},
		{
		  "command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
		  "title": "在新窗口中从这里之前的仓库",
		  "category": "GitLens",
		  "icon": "$(folder-opened)"
		},
		{
		  "command": "gitlens.fetchRepositories",
		  "title": "获取",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-fetch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.pullRepositories",
		  "title": "拉取",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-pull)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.pushRepositories",
		  "title": "推送",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-push)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.addRemote",
		  "title": "添加远程",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.highlightChanges",
		  "title": "突出显示自此提交之前的所有更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.highlightRevisionChanges",
		  "title": "突出显示此提交的更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.restore",
		  "title": "恢复（检出）",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)"
		},
		{
		  "command": "gitlens.views.switchToAnotherBranch",
		  "title": "切换到另一个分支...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.switchToBranch",
		  "title": "切换到分支...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.switchToCommit",
		  "title": "切换到提交...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.switchToTag",
		  "title": "切换到标签...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.copy",
		  "title": "复制",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.copyAsMarkdown",
		  "title": "复制为Markdown",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.copyUrl",
		  "title": "复制URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.copyUrl.multi",
		  "title": "复制多个URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.views.openUrl",
		  "title": "打开URL",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.openUrl.multi",
		  "title": "打开多个URL",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.pruneRemote",
		  "title": "修剪",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.fetch",
		  "title": "获取",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-fetch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.publishBranch",
		  "title": "发布分支",
		  "category": "GitLens",
		  "icon": "$(cloud-upload)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.publishRepository",
		  "title": "发布仓库",
		  "category": "GitLens",
		  "icon": "$(cloud-upload)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.pull",
		  "title": "拉取",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-pull)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.push",
		  "title": "推送",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-push)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.pushWithForce",
		  "title": "强制推送",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-force-push)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.openInTerminal",
		  "title": "在终端中打开",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openInIntegratedTerminal",
		  "title": "在集成终端中打开",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.setAsDefault",
		  "title": "设为默认",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.unsetAsDefault",
		  "title": "取消设为默认",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.stageDirectory",
		  "title": "暂存所有更改",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.stageFile",
		  "title": "暂存更改",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.unstageDirectory",
		  "title": "取消暂存所有更改",
		  "category": "GitLens",
		  "icon": "$(remove)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.unstageFile",
		  "title": "取消暂存更改",
		  "category": "GitLens",
		  "icon": "$(remove)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.star",
		  "title": "添加到收藏",
		  "category": "GitLens",
		  "icon": "$(star-empty)"
		},
		{
		  "command": "gitlens.views.star.multi",
		  "title": "添加到收藏",
		  "category": "GitLens",
		  "icon": "$(star-empty)"
		},
		{
		  "command": "gitlens.views.unstar",
		  "title": "从收藏中移除",
		  "category": "GitLens",
		  "icon": "$(star-full)"
		},
		{
		  "command": "gitlens.views.unstar.multi",
		  "title": "从收藏中移除",
		  "category": "GitLens",
		  "icon": "$(star-full)"
		},
		{
		  "command": "gitlens.views.openDirectoryDiff",
		  "title": "打开目录比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openDirectoryDiffWithWorking",
		  "title": "与工作树比较打开目录",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChanges",
		  "title": "打开更改",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.openChangesWithWorking",
		  "title": "与工作文件比较打开更改",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.views.openPreviousChangesWithWorking",
		  "title": "与工作文件比较打开以前的更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openFile",
		  "title": "打开文件",
		  "category": "GitLens",
		  "icon": "$(go-to-file)"
		},
		{
		  "command": "gitlens.views.openFileRevision",
		  "title": "在修订时打开文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-open-revision)"
		},
		{
		  "command": "gitlens.views.openChangedFiles",
		  "title": "打开多个文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileDiffs",
		  "title": "打开所有更改",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileDiffsWithWorking",
		  "title": "与工作树比较打开所有更改",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileDiffsIndividually",
		  "title": "逐个打开所有更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
		  "title": "与工作树逐个比较打开所有更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileRevisions",
		  "title": "在修订时打开多个文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openOnlyChangedFiles",
		  "title": "打开已更改并关闭未更改的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.applyChanges",
		  "title": "应用更改",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.closeRepository",
		  "title": "关闭仓库",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareAncestryWithWorking",
		  "title": "与公共基准比较打开",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareWithMergeBase",
		  "title": "与公共基准比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.openChangedFileDiffsWithMergeBase",
		  "title": "与公共基准比较打开所有更改",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareWithHead",
		  "title": "与HEAD比较",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.compareWithUpstream",
		  "title": "与上游比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareWithSelected",
		  "title": "与选定项比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.selectForCompare",
		  "title": "选择进行比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareFileWithSelected",
		  "title": "与选定项比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.selectFileForCompare",
		  "title": "选择进行比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.compareWithWorking",
		  "title": "与工作树比较",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.views.addAuthors",
		  "title": "添加共同作者...",
		  "category": "GitLens",
		  "icon": "$(person-add)"
		},
		{
		  "command": "gitlens.views.addAuthor",
		  "title": "作为共同作者添加",
		  "category": "GitLens",
		  "icon": "$(person-add)"
		},
		{
		  "command": "gitlens.views.addAuthor.multi",
		  "title": "作为共同作者添加",
		  "category": "GitLens",
		  "icon": "$(person-add)"
		},
		{
		  "command": "gitlens.views.createWorktree",
		  "title": "创建工作树...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.ghpr.views.openOrCreateWorktree",
		  "title": "在工作树中检出拉取请求（GitLens）...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.title.createWorktree",
		  "title": "创建工作树...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteWorktree",
		  "title": "删除工作树...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteWorktree.multi",
		  "title": "删除多个工作树...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.openWorktree",
		  "title": "打开工作树",
		  "category": "GitLens",
		  "icon": "$(window)"
		},
		{
		  "command": "gitlens.views.openWorktreeInNewWindow",
		  "title": "在新窗口中打开工作树",
		  "category": "GitLens",
		  "icon": "$(empty-window)"
		},
		{
		  "command": "gitlens.views.openWorktreeInNewWindow.multi",
		  "title": "在新窗口中打开多个工作树",
		  "category": "GitLens",
		  "icon": "$(empty-window)"
		},
		{
		  "command": "gitlens.views.revealRepositoryInExplorer",
		  "title": "在文件资源管理器中显示",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.revealWorktreeInExplorer",
		  "title": "在文件资源管理器中显示",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.cherryPick",
		  "title": "挑拣提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.cherryPick.multi",
		  "title": "挑拣多个提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.createBranch",
		  "title": "创建分支...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.title.createBranch",
		  "title": "创建分支...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteBranch",
		  "title": "删除分支...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteBranch.multi",
		  "title": "删除多个分支...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.renameBranch",
		  "title": "重命名分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.createTag",
		  "title": "创建标签...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.title.createTag",
		  "title": "创建标签...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteTag",
		  "title": "删除标签...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.deleteTag.multi",
		  "title": "删除多个标签...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.mergeBranchInto",
		  "title": "将分支合并到当前分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.pushToCommit",
		  "title": "推送到提交...",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-push)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.rebaseOntoBranch",
		  "title": "将当前分支变基到分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.rebaseOntoCommit",
		  "title": "将当前分支变基到提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.rebaseOntoUpstream",
		  "title": "将当前分支变基到上游...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.removeRemote",
		  "title": "移除远程...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.resetCommit",
		  "title": "将当前分支重置到上一个提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.resetToCommit",
		  "title": "将当前分支重置到提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.resetToTip",
		  "title": "将当前分支重置到最新提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.revert",
		  "title": "还原提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.undoCommit",
		  "title": "撤销提交",
		  "category": "GitLens",
		  "icon": "$(discard)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.views.setBranchComparisonToWorking",
		  "title": "与工作树比较",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.setBranchComparisonToBranch",
		  "title": "与分支（HEAD）比较",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.createPullRequest",
		  "title": "创建拉取请求...",
		  "category": "GitLens",
		  "icon": "$(git-pull-request-create)"
		},
		{
		  "command": "gitlens.views.openPullRequest",
		  "title": "打开拉取请求",
		  "category": "GitLens",
		  "icon": "$(git-pull-request)"
		},
		{
		  "command": "gitlens.views.openPullRequestChanges",
		  "title": "打开拉取请求的更改",
		  "category": "GitLens",
		  "icon": "$(diff-multiple)"
		},
		{
		  "command": "gitlens.views.openPullRequestComparison",
		  "title": "比较拉取请求",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.clearComparison",
		  "title": "清除比较",
		  "category": "GitLens",
		  "icon": "$(close)"
		},
		{
		  "command": "gitlens.views.clearReviewed",
		  "title": "清除已审查的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.collapseNode",
		  "title": "折叠",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.dismissNode",
		  "title": "取消",
		  "category": "GitLens",
		  "icon": "$(close)"
		},
		{
		  "command": "gitlens.views.editNode",
		  "title": "编辑...",
		  "category": "GitLens",
		  "icon": "$(edit)"
		},
		{
		  "command": "gitlens.views.expandNode",
		  "title": "展开",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.refreshNode",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.loadMoreChildren",
		  "title": "加载更多",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.loadAllChildren",
		  "title": "加载全部",
		  "category": "GitLens",
		  "icon": "$(gitlens-expand)"
		},
		{
		  "command": "gitlens.views.setShowRelativeDateMarkersOn",
		  "title": "显示日期标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.setShowRelativeDateMarkersOff",
		  "title": "隐藏日期标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.copy",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.branches.setLayoutToList",
		  "title": "以列表视图显示",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.branches.setLayoutToTree",
		  "title": "以树状视图显示",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.branches.setFilesLayoutToAuto",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.branches.setFilesLayoutToList",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.branches.setFilesLayoutToTree",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.branches.setShowAvatarsOn",
		  "title": "显示头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.setShowAvatarsOff",
		  "title": "隐藏头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.setShowBranchComparisonOn",
		  "title": "显示分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.setShowBranchComparisonOff",
		  "title": "隐藏分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.setShowBranchPullRequestOn",
		  "title": "显示分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.branches.setShowBranchPullRequestOff",
		  "title": "隐藏分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commitDetails.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.patchDetails.close",
		  "title": "关闭补丁",
		  "category": "GitLens",
		  "icon": "$(close)"
		},
		{
		  "command": "gitlens.views.patchDetails.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.commits.copy",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.commits.setFilesLayoutToAuto",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.commits.setFilesLayoutToList",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.commits.setFilesLayoutToTree",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.commits.setCommitsFilterAuthors",
		  "title": "按作者过滤提交...",
		  "category": "GitLens",
		  "icon": "$(filter)"
		},
		{
		  "command": "gitlens.views.commits.setCommitsFilterOff",
		  "title": "清除过滤器",
		  "category": "GitLens",
		  "icon": "$(filter-filled)"
		},
		{
		  "command": "gitlens.views.commits.setShowMergeCommitsOff",
		  "title": "隐藏合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowMergeCommitsOn",
		  "title": "显示合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowAvatarsOn",
		  "title": "显示头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowAvatarsOff",
		  "title": "隐藏头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowBranchComparisonOn",
		  "title": "显示分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowBranchComparisonOff",
		  "title": "隐藏分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowBranchPullRequestOn",
		  "title": "显示当前分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.commits.setShowBranchPullRequestOff",
		  "title": "隐藏当前分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.copy",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.contributors.setFilesLayoutToAuto",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.contributors.setFilesLayoutToList",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.contributors.setFilesLayoutToTree",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.contributors.setShowAllBranchesOn",
		  "title": "显示头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowAllBranchesOff",
		  "title": "隐藏头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowAvatarsOn",
		  "title": "隐藏合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowAvatarsOff",
		  "title": "显示合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowMergeCommitsOff",
		  "title": "显示统计",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowMergeCommitsOn",
		  "title": "隐藏统计",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowStatisticsOn",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.contributors.setShowStatisticsOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.drafts.copy",
		  "title": "了解云补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.drafts.refresh",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.drafts.info",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(info)"
		},
		{
		  "command": "gitlens.views.drafts.setShowAvatarsOn",
		  "title": "创建云补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.drafts.setShowAvatarsOff",
		  "title": "删除云补丁...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.drafts.create",
		  "title": "打开",
		  "category": "GitLens",
		  "icon": "$(add)"
		},
		{
		  "command": "gitlens.views.drafts.delete",
		  "title": "在gitkraken.dev上打开",
		  "category": "GitLens",
		  "icon": "$(trash)"
		},
		{
		  "command": "gitlens.views.draft.open",
		  "title": "更改基准...",
		  "category": "GitLens",
		  "icon": "$(eye)"
		},
		{
		  "command": "gitlens.views.draft.openOnWeb",
		  "title": "复制",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.views.fileHistory.changeBase",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(history)"
		},
		{
		  "command": "gitlens.views.fileHistory.copy",
		  "title": "查看行历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.refresh",
		  "title": "查看文件历史",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.fileHistory.setCursorFollowingOn",
		  "title": "取消固定当前历史",
		  "category": "GitLens",
		  "icon": "$(file)",
		  "enablement": "gitlens:views:fileHistory:editorFollowing"
		},
		{
		  "command": "gitlens.views.fileHistory.setCursorFollowingOff",
		  "title": "固定当前历史",
		  "category": "GitLens",
		  "icon": "$(list-selection)",
		  "enablement": "gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"
		},
		{
		  "command": "gitlens.views.fileHistory.setEditorFollowingOn",
		  "title": "跟踪重命名",
		  "category": "GitLens",
		  "icon": "$(pinned)"
		},
		{
		  "command": "gitlens.views.fileHistory.setEditorFollowingOff",
		  "title": "不跟踪重命名",
		  "category": "GitLens",
		  "icon": "$(pin)"
		},
		{
		  "command": "gitlens.views.fileHistory.setRenameFollowingOn",
		  "title": "查看所有分支的历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setRenameFollowingOff",
		  "title": "仅查看当前分支的历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowAllBranchesOn",
		  "title": "显示合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowAllBranchesOff",
		  "title": "隐藏合并提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
		  "title": "显示头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
		  "title": "隐藏头像",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowAvatarsOn",
		  "title": "在编辑器中打开",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.fileHistory.setShowAvatarsOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.graph.openInTab",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(link-external)"
		},
		{
		  "command": "gitlens.views.graph.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.graphDetails.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.home.refresh",
		  "title": "更改基准...",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.account.refresh",
		  "title": "复制",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.lineHistory.changeBase",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(history)"
		},
		{
		  "command": "gitlens.views.lineHistory.copy",
		  "title": "取消固定当前历史",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.lineHistory.refresh",
		  "title": "固定当前历史",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.lineHistory.setEditorFollowingOn",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(pinned)"
		},
		{
		  "command": "gitlens.views.lineHistory.setEditorFollowingOff",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(pin)"
		},
		{
		  "command": "gitlens.views.lineHistory.setShowAvatarsOn",
		  "title": "关闭",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.lineHistory.setShowAvatarsOff",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.pullRequest.close",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(close)"
		},
		{
		  "command": "gitlens.views.pullRequest.copy",
		  "title": "以自动模式显示文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.pullRequest.refresh",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.pullRequest.setFilesLayoutToList",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.pullRequest.setFilesLayoutToTree",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.pullRequest.setShowAvatarsOn",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.pullRequest.setShowAvatarsOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.remotes.copy",
		  "title": "以列表视图显示",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.remotes.refresh",
		  "title": "以树状视图显示",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.remotes.setLayoutToList",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.remotes.setLayoutToTree",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.remotes.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.remotes.setFilesLayoutToList",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.remotes.setFilesLayoutToTree",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.remotes.setShowAvatarsOn",
		  "title": "显示分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.remotes.setShowAvatarsOff",
		  "title": "隐藏分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.remotes.setShowBranchPullRequestOn",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.remotes.setShowBranchPullRequestOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.copy",
		  "title": "启用自动刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.refresh",
		  "title": "禁用自动刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.repositories.setAutoRefreshToOn",
		  "title": "以列表视图显示分支",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setAutoRefreshToOff",
		  "title": "以树状视图显示分支",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setBranchesLayoutToList",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.repositories.setBranchesLayoutToTree",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.repositories.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.repositories.setFilesLayoutToList",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.repositories.setFilesLayoutToTree",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.repositories.setShowAvatarsOn",
		  "title": "显示分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowAvatarsOff",
		  "title": "隐藏分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowBranchComparisonOn",
		  "title": "显示分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowBranchComparisonOff",
		  "title": "隐藏分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
		  "title": "显示分支",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
		  "title": "隐藏分支",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowBranchesOn",
		  "title": "显示提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowBranchesOff",
		  "title": "隐藏提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowCommitsOn",
		  "title": "显示贡献者",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowCommitsOff",
		  "title": "隐藏贡献者",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowContributorsOn",
		  "title": "显示远程",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowContributorsOff",
		  "title": "隐藏远程",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowRemotesOn",
		  "title": "显示储藏",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowRemotesOff",
		  "title": "隐藏储藏",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowStashesOn",
		  "title": "显示标签",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowStashesOff",
		  "title": "隐藏标签",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowTagsOn",
		  "title": "显示工作树",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowTagsOff",
		  "title": "隐藏工作树",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowWorktreesOn",
		  "title": "显示当前分支状态",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowWorktreesOff",
		  "title": "隐藏当前分支状态",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowUpstreamStatusOn",
		  "title": "隐藏",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowUpstreamStatusOff",
		  "title": "清除结果",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.repositories.setShowSectionOff",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.searchAndCompare.clear",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(clear-all)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.copy",
		  "title": "搜索提交...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.searchAndCompare.refresh",
		  "title": "比较引用...",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.searchCommits",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(search)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.selectForCompare",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
		  "title": "按作者过滤提交...",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
		  "title": "清除过滤器",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.setResultsCommitsFilterAuthors",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(filter)"
		},
		{
		  "command": "gitlens.views.setResultsCommitsFilterOff",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(filter-filled)"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
		  "title": "交换比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
		  "title": "仅显示左侧文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.searchAndCompare.swapComparison",
		  "title": "仅显示右侧文件",
		  "category": "GitLens",
		  "icon": "$(arrow-swap)",
		  "enablement": "viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
		  "title": "清除过滤器",
		  "category": "GitLens",
		  "enablement": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
		  "title": "复制",
		  "category": "GitLens",
		  "enablement": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"
		},
		{
		  "command": "gitlens.views.searchAndCompare.setFilesFilterOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.stashes.copy",
		  "title": "以自动模式显示文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.stashes.refresh",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.stashes.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.stashes.setFilesLayoutToList",
		  "title": "复制",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.stashes.setFilesLayoutToTree",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.tags.copy",
		  "title": "以列表视图显示",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.tags.refresh",
		  "title": "以树状视图显示",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.tags.setLayoutToList",
		  "title": "以自动模式显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.tags.setLayoutToTree",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.tags.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.tags.setFilesLayoutToList",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.tags.setFilesLayoutToTree",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.tags.setShowAvatarsOn",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.tags.setShowAvatarsOff",
		  "title": "添加仓库...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.timeline.refresh",
		  "title": "从链接的工作区添加仓库...",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.workspaces.addRepos",
		  "title": "了解GitKraken工作区...",
		  "category": "GitLens",
		  "icon": "$(add)"
		},
		{
		  "command": "gitlens.views.workspaces.addReposFromLinked",
		  "title": "转换为云工作区...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.workspaces.info",
		  "title": "创建云工作区...",
		  "category": "GitLens",
		  "icon": "$(info)"
		},
		{
		  "command": "gitlens.views.workspaces.convert",
		  "title": "删除工作区...",
		  "category": "GitLens",
		  "icon": "$(cloud-upload)"
		},
		{
		  "command": "gitlens.views.workspaces.create",
		  "title": "定位仓库...",
		  "category": "GitLens",
		  "icon": "$(add)"
		},
		{
		  "command": "gitlens.views.workspaces.delete",
		  "title": "创建VS Code工作区...",
		  "category": "GitLens",
		  "icon": "$(trash)"
		},
		{
		  "command": "gitlens.views.workspaces.locateAllRepos",
		  "title": "在当前窗口中打开VS Code工作区...",
		  "category": "GitLens",
		  "icon": "$(location)"
		},
		{
		  "command": "gitlens.views.workspaces.createLocal",
		  "title": "在新窗口中打开VS Code工作区...",
		  "category": "GitLens",
		  "icon": "$(empty-window)"
		},
		{
		  "command": "gitlens.views.workspaces.openLocal",
		  "title": "更改链接的工作区自动添加行为...",
		  "category": "GitLens",
		  "icon": "$(window)"
		},
		{
		  "command": "gitlens.views.workspaces.openLocalNewWindow",
		  "title": "定位仓库...",
		  "category": "GitLens",
		  "icon": "$(window)"
		},
		{
		  "command": "gitlens.views.workspaces.changeAutoAddSetting",
		  "title": "打开仓库",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.workspaces.repo.locate",
		  "title": "在新窗口中打开仓库",
		  "category": "GitLens",
		  "icon": "$(location)"
		},
		{
		  "command": "gitlens.views.workspaces.repo.open",
		  "title": "将仓库添加到VS Code工作区",
		  "category": "GitLens",
		  "icon": "$(window)"
		},
		{
		  "command": "gitlens.views.workspaces.repo.openInNewWindow",
		  "title": "从工作区中移除...",
		  "category": "GitLens",
		  "icon": "$(empty-window)"
		},
		{
		  "command": "gitlens.views.workspaces.repo.addToWindow",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.workspaces.repo.remove",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(trash)"
		},
		{
		  "command": "gitlens.views.workspaces.copy",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.workspaces.refresh",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.worktrees.copy",
		  "title": "以自动模式显示文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.refresh",
		  "title": "以列表视图显示文件",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.views.worktrees.setFilesLayoutToAuto",
		  "title": "以树状视图显示文件",
		  "category": "GitLens",
		  "icon": "$(list-tree)"
		},
		{
		  "command": "gitlens.views.worktrees.setFilesLayoutToList",
		  "title": "显示头像",
		  "category": "GitLens",
		  "icon": "$(gitlens-list-auto)"
		},
		{
		  "command": "gitlens.views.worktrees.setFilesLayoutToTree",
		  "title": "隐藏头像",
		  "category": "GitLens",
		  "icon": "$(list-flat)"
		},
		{
		  "command": "gitlens.views.worktrees.setShowAvatarsOn",
		  "title": "显示分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.setShowAvatarsOff",
		  "title": "隐藏分支比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.setShowBranchComparisonOn",
		  "title": "显示分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.setShowBranchComparisonOff",
		  "title": "隐藏分支拉取请求",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
		  "title": "启用调试日志",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
		  "title": "禁用调试日志",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.enableDebugLogging",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.disableDebugLogging",
		  "title": "在编辑器中更偏向提交图",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.launchpad.refresh",
		  "title": "在面板中更偏向提交图",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.graph.switchToEditorLayout",
		  "title": "推送",
		  "category": "GitLens",
		  "enablement": "config.gitlens.graph.layout != editor"
		},
		{
		  "command": "gitlens.graph.switchToPanelLayout",
		  "title": "拉取",
		  "category": "GitLens",
		  "enablement": "config.gitlens.graph.layout != panel"
		},
		{
		  "command": "gitlens.graph.push",
		  "title": "获取",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-push)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.pull",
		  "title": "切换到另一个分支...",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-pull)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.fetch",
		  "title": "刷新",
		  "category": "GitLens",
		  "icon": "$(gitlens-repo-fetch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.switchToAnotherBranch",
		  "title": "复制分支链接",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.refresh",
		  "title": "复制提交链接",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		},
		{
		  "command": "gitlens.graph.copyDeepLinkToBranch",
		  "title": "复制仓库链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyDeepLinkToCommit",
		  "title": "复制标签链接",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyDeepLinkToRepo",
		  "title": "复制远程分支URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyDeepLinkToTag",
		  "title": "创建分支...",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyRemoteBranchUrl",
		  "title": "删除分支...",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.createBranch",
		  "title": "在远程上打开分支",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.deleteBranch",
		  "title": "将分支合并到当前分支...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.openBranchOnRemote",
		  "title": "发布分支",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.graph.mergeBranchInto",
		  "title": "将当前分支变基到分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.publishBranch",
		  "title": "将当前分支变基到上游...",
		  "category": "GitLens",
		  "icon": "$(cloud-upload)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.rebaseOntoBranch",
		  "title": "重命名分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.rebaseOntoUpstream",
		  "title": "切换到分支...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.renameBranch",
		  "title": "隐藏本地分支",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.switchToBranch",
		  "title": "隐藏远程分支",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.hideLocalBranch",
		  "title": "隐藏远程",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.hideRemoteBranch",
		  "title": "隐藏标签",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.hideRemote",
		  "title": "隐藏",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.hideTag",
		  "title": "挑拣提交...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.hideRefGroup",
		  "title": "复制消息",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.cherryPick",
		  "title": "复制SHA",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.copyMessage",
		  "title": "复制远程提交URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copySha",
		  "title": "复制多个远程提交URL",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyRemoteCommitUrl",
		  "title": "检查详情",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.copyRemoteCommitUrl.multi",
		  "title": "打开源代码管理",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.showInDetailsView",
		  "title": "在远程上打开提交",
		  "category": "GitLens",
		  "icon": "$(eye)"
		},
		{
		  "command": "gitlens.graph.openSCM",
		  "title": "在远程上打开多个提交",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openCommitOnRemote",
		  "title": "将当前分支变基到提交...",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.graph.openCommitOnRemote.multi",
		  "title": "将当前分支重置到上一个提交...",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.graph.rebaseOntoCommit",
		  "title": "将当前分支重置到提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.resetCommit",
		  "title": "将当前分支重置到最新提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.resetToCommit",
		  "title": "还原提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.resetToTip",
		  "title": "切换到提交...",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.revert",
		  "title": "撤销提交",
		  "category": "GitLens",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.switchToCommit",
		  "title": "储藏所有更改...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.undoCommit",
		  "title": "应用储藏...",
		  "category": "GitLens",
		  "icon": "$(discard)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.stash.save",
		  "title": "丢弃储藏...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-save)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.stash.apply",
		  "title": "重命名储藏...",
		  "category": "GitLens",
		  "icon": "$(gitlens-stash-pop)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.stash.delete",
		  "title": "创建标签...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.stash.rename",
		  "title": "删除标签...",
		  "category": "GitLens",
		  "icon": "$(edit)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.createTag",
		  "title": "切换到标签...",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.deleteTag",
		  "title": "创建工作树...",
		  "category": "GitLens",
		  "icon": "$(trash)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.switchToTag",
		  "title": "创建拉取请求...",
		  "category": "GitLens",
		  "icon": "$(gitlens-switch)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.createWorktree",
		  "title": "打开拉取请求",
		  "category": "GitLens",
		  "icon": "$(add)",
		  "enablement": "!operationInProgress"
		},
		{
		  "command": "gitlens.graph.createPullRequest",
		  "title": "打开拉取请求的更改",
		  "category": "GitLens",
		  "icon": "$(git-pull-request-create)"
		},
		{
		  "command": "gitlens.graph.openPullRequest",
		  "title": "比较拉取请求",
		  "category": "GitLens",
		  "icon": "$(git-pull-request)"
		},
		{
		  "command": "gitlens.graph.openPullRequestChanges",
		  "title": "在远程上打开拉取请求",
		  "category": "GitLens",
		  "icon": "$(diff-multiple)"
		},
		{
		  "command": "gitlens.graph.openPullRequestComparison",
		  "title": "与公共基准比较工作树",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.graph.openPullRequestOnRemote",
		  "title": "与公共基准比较",
		  "category": "GitLens",
		  "icon": "$(globe)"
		},
		{
		  "command": "gitlens.graph.compareAncestryWithWorking",
		  "title": "与公共基准比较打开所有更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.compareWithMergeBase",
		  "title": "与HEAD比较",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
		  "title": "与上游比较",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.compareWithHead",
		  "title": "与工作树比较",
		  "category": "GitLens",
		  "icon": "$(compare-changes)"
		},
		{
		  "command": "gitlens.graph.compareWithUpstream",
		  "title": "打开文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.compareWithWorking",
		  "title": "打开所有更改",
		  "category": "GitLens",
		  "icon": "$(gitlens-compare-ref-working)"
		},
		{
		  "command": "gitlens.graph.openChangedFiles",
		  "title": "与工作树比较打开所有更改",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileDiffs",
		  "title": "逐个打开所有更改",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileDiffsWithWorking",
		  "title": "与工作树逐个比较打开所有更改",
		  "icon": "$(diff-multiple)",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileDiffsIndividually",
		  "title": "在修订时打开多个文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
		  "title": "打开已更改并关闭未更改的文件",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openChangedFileRevisions",
		  "title": "作为共同作者添加",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.openOnlyChangedFiles",
		  "title": "复制",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.addAuthor",
		  "title": "显示作者列",
		  "category": "GitLens",
		  "icon": "$(person-add)"
		},
		{
		  "command": "gitlens.graph.copy",
		  "title": "隐藏作者列",
		  "category": "GitLens",
		  "icon": "$(copy)"
		},
		{
		  "command": "gitlens.graph.columnAuthorOn",
		  "title": "显示日期列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnAuthorOff",
		  "title": "隐藏日期列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnDateTimeOn",
		  "title": "显示SHA列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnDateTimeOff",
		  "title": "隐藏SHA列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnShaOn",
		  "title": "显示更改列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnShaOff",
		  "title": "隐藏更改列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnChangesOn",
		  "title": "显示图形列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnChangesOff",
		  "title": "隐藏图形列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnGraphOn",
		  "title": "显示提交消息列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnGraphOff",
		  "title": "隐藏提交消息列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnMessageOn",
		  "title": "显示分支/标签列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnMessageOff",
		  "title": "隐藏分支/标签列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnRefOn",
		  "title": "使用紧凑图形列",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnRefOff",
		  "title": "使用扩展图形列",
		  "category": "GitLens",
		  "enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
		},
		{
		  "command": "gitlens.graph.columnGraphCompact",
		  "title": "重置列为默认布局",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.columnGraphDefault",
		  "title": "重置列为紧凑布局",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.resetColumnsDefault",
		  "title": "显示本地分支标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.resetColumnsCompact",
		  "title": "隐藏本地分支标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerLocalBranchOn",
		  "title": "显示远程分支标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerLocalBranchOff",
		  "title": "隐藏远程分支标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerRemoteBranchOn",
		  "title": "显示储藏标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerRemoteBranchOff",
		  "title": "隐藏储藏标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerStashOn",
		  "title": "显示标签标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerStashOff",
		  "title": "隐藏标签标记",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerTagOn",
		  "title": "作为云补丁共享...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.scrollMarkerTagOff",
		  "title": "刷新",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.graph.shareAsCloudPatch",
		  "title": "Share as Cloud Patch...",
		  "category": "GitLens"
		},
		{
		  "command": "gitlens.timeline.refresh",
		  "title": "Refresh",
		  "category": "GitLens",
		  "icon": "$(refresh)"
		}
	  ],
	  "icons": {
		"gitlens-commit-horizontal": {
		  "description": "commit-horizontal icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f101"
		  }
		},
		"gitlens-graph": {
		  "description": "graph icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f102"
		  }
		},
		"gitlens-next-commit": {
		  "description": "next-commit icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f103"
		  }
		},
		"gitlens-prev-commit-menu": {
		  "description": "prev-commit-menu icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f104"
		  }
		},
		"gitlens-prev-commit": {
		  "description": "prev-commit icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f105"
		  }
		},
		"gitlens-compare-ref-working": {
		  "description": "compare-ref-working icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f106"
		  }
		},
		"gitlens-branches-view": {
		  "description": "branches-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f107"
		  }
		},
		"gitlens-commit-view": {
		  "description": "commit-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f108"
		  }
		},
		"gitlens-commits-view": {
		  "description": "commits-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f109"
		  }
		},
		"gitlens-compare-view": {
		  "description": "compare-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10a"
		  }
		},
		"gitlens-contributors-view": {
		  "description": "contributors-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10b"
		  }
		},
		"gitlens-history-view": {
		  "description": "history-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10c"
		  }
		},
		"gitlens-history": {
		  "description": "history icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10c"
		  }
		},
		"gitlens-remotes-view": {
		  "description": "remotes-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10d"
		  }
		},
		"gitlens-repositories-view": {
		  "description": "repositories-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10e"
		  }
		},
		"gitlens-search-view": {
		  "description": "search-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f10f"
		  }
		},
		"gitlens-stashes-view": {
		  "description": "stashes-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f110"
		  }
		},
		"gitlens-stashes": {
		  "description": "stashes icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f110"
		  }
		},
		"gitlens-tags-view": {
		  "description": "tags-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f111"
		  }
		},
		"gitlens-worktrees-view": {
		  "description": "worktrees-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f112"
		  }
		},
		"gitlens-gitlens": {
		  "description": "gitlens icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f113"
		  }
		},
		"gitlens-stash-pop": {
		  "description": "stash-pop icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f114"
		  }
		},
		"gitlens-stash-save": {
		  "description": "stash-save icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f115"
		  }
		},
		"gitlens-unplug": {
		  "description": "unplug icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f116"
		  }
		},
		"gitlens-open-revision": {
		  "description": "open-revision icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f117"
		  }
		},
		"gitlens-switch": {
		  "description": "switch icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f118"
		  }
		},
		"gitlens-expand": {
		  "description": "expand icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f119"
		  }
		},
		"gitlens-list-auto": {
		  "description": "list-auto icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11a"
		  }
		},
		"gitlens-repo-force-push": {
		  "description": "repo-force-push icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11b"
		  }
		},
		"gitlens-pinned-filled": {
		  "description": "pinned-filled icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11c"
		  }
		},
		"gitlens-clock": {
		  "description": "clock icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11d"
		  }
		},
		"gitlens-provider-azdo": {
		  "description": "provider-azdo icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11e"
		  }
		},
		"gitlens-provider-bitbucket": {
		  "description": "provider-bitbucket icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f11f"
		  }
		},
		"gitlens-provider-gerrit": {
		  "description": "provider-gerrit icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f120"
		  }
		},
		"gitlens-provider-gitea": {
		  "description": "provider-gitea icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f121"
		  }
		},
		"gitlens-provider-github": {
		  "description": "provider-github icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f122"
		  }
		},
		"gitlens-provider-gitlab": {
		  "description": "provider-gitlab icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f123"
		  }
		},
		"gitlens-gitlens-inspect": {
		  "description": "gitlens-inspect icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f124"
		  }
		},
		"gitlens-workspaces-view": {
		  "description": "workspaces-view icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f125"
		  }
		},
		"gitlens-confirm-checked": {
		  "description": "confirm-checked icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f126"
		  }
		},
		"gitlens-confirm-unchecked": {
		  "description": "confirm-unchecked icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f127"
		  }
		},
		"gitlens-cloud-patch": {
		  "description": "cloud-patch icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f128"
		  }
		},
		"gitlens-cloud-patch-share": {
		  "description": "cloud-patch-share icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f129"
		  }
		},
		"gitlens-inspect": {
		  "description": "inspect icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12a"
		  }
		},
		"gitlens-repository-filled": {
		  "description": "repository-filled icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12b"
		  }
		},
		"gitlens-gitlens-filled": {
		  "description": "gitlens-filled icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12c"
		  }
		},
		"gitlens-code-suggestion": {
		  "description": "code-suggestion icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12d"
		  }
		},
		"gitlens-diff-multiple": {
		  "description": "diff-multiple icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12e"
		  }
		},
		"gitlens-diff-single": {
		  "description": "diff-single icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f12f"
		  }
		},
		"gitlens-repo-fetch": {
		  "description": "repo-fetch icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f130"
		  }
		},
		"gitlens-repo-pull": {
		  "description": "repo-pull icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f131"
		  }
		},
		"gitlens-repo-push": {
		  "description": "repo-push icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f132"
		  }
		},
		"gitlens-provider-jira": {
		  "description": "provider-jira icon",
		  "default": {
			"fontPath": "dist/glicons.woff2",
			"fontCharacter": "\\f133"
		  }
		}
	  },
	  "menus": {
		"commandPalette": [
		  {
			"command": "gitlens.plus.login",
			"when": "!gitlens:plus"
		  },
		  {
			"command": "gitlens.plus.logout",
			"when": "true"
		  },
		  {
			"command": "gitlens.plus.signUp",
			"when": "!gitlens:plus"
		  },
		  {
			"command": "gitlens.plus.startPreviewTrial",
			"when": "!gitlens:plus"
		  },
		  {
			"command": "gitlens.plus.reactivateProTrial",
			"when": "gitlens:plus:state == 5"
		  },
		  {
			"command": "gitlens.plus.manage",
			"when": "gitlens:plus"
		  },
		  {
			"command": "gitlens.plus.cloudIntegrations.manage",
			"when": "gitlens:plus"
		  },
		  {
			"command": "gitlens.plus.hide",
			"when": "config.gitlens.plusFeatures.enabled"
		  },
		  {
			"command": "gitlens.plus.restore",
			"when": "!config.gitlens.plusFeatures.enabled"
		  },
		  {
			"command": "gitlens.plus.refreshRepositoryAccess",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.gk.switchOrganization",
			"when": "gitlens:gk:hasOrganizations"
		  },
		  {
			"command": "gitlens.showPatchDetailsPage",
			"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
		  },
		  {
			"command": "gitlens.applyPatchFromClipboard",
			"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.copyWorkingChangesToWorktree",
			"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.graph.copyWorkingChangesToWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.createPatch",
			"when": "false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.createCloudPatch",
			"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
		  },
		  {
			"command": "gitlens.shareAsCloudPatch",
			"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
		  },
		  {
			"command": "gitlens.openCloudPatch",
			"when": "false"
		  },
		  {
			"command": "gitlens.openPatch",
			"when": "false && gitlens:enabled"
		  },
		  {
			"command": "gitlens.timeline.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.showBranchesView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showCommitDetailsView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showCommitsView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showContributorsView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showDraftsView",
			"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled"
		  },
		  {
			"command": "gitlens.showFileHistoryView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showLaunchpad",
			"when": "gitlens:prerelease"
		  },
		  {
			"command": "gitlens.showFocusPage",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.launchpad.split",
			"when": "gitlens:enabled && config.gitlens.launchpad.allowMultiple"
		  },
		  {
			"command": "gitlens.launchpad.indicator.toggle",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showGraphPage",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.graph.split",
			"when": "gitlens:enabled && config.gitlens.graph.allowMultiple"
		  },
		  {
			"command": "gitlens.showGraphView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.toggleGraph",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.toggleMaximizedGraph",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showHomeView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showAccountView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showInCommitGraph",
			"when": "false"
		  },
		  {
			"command": "gitlens.showInCommitGraphView",
			"when": "false"
		  },
		  {
			"command": "gitlens.showLineHistoryView",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.showRemotesView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showRepositoriesView",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.showSearchAndCompareView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showSettingsPage!views",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!file-annotations",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!branches-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!commits-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!contributors-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!file-history-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!line-history-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!remotes-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!repositories-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!search-compare-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!stashes-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!tags-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!worktrees-view",
			"when": "false"
		  },
		  {
			"command": "gitlens.showSettingsPage!commit-graph",
			"when": "false"
		  },
		  {
			"command": "gitlens.showStashesView",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.showTagsView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showTimelinePage",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showInTimeline",
			"when": "gitlens:enabled && gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.timeline.split",
			"when": "gitlens:enabled && config.gitlens.visualHistory.allowMultiple"
		  },
		  {
			"command": "gitlens.showTimelineView",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showWorktreesView",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.showWorkspacesView",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.compareWith",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.compareHeadWith",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.compareWorkingWith",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.diffDirectory",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.diffDirectoryWithHead",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.diffWithNext",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"
		  },
		  {
			"command": "gitlens.diffWithNextInDiffLeft",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"
		  },
		  {
			"command": "gitlens.diffWithNextInDiffRight",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"
		  },
		  {
			"command": "gitlens.diffWithPrevious",
			"when": "gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
		  },
		  {
			"command": "gitlens.diffWithPreviousInDiffLeft",
			"when": "gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"
		  },
		  {
			"command": "gitlens.diffWithPreviousInDiffRight",
			"when": "gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
		  },
		  {
			"command": "gitlens.diffLineWithPrevious",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.diffFolderWithRevision",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.diffFolderWithRevisionFrom",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.diffWithRevision",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.diffWithWorking",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.diffWithWorkingInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.diffWithWorkingInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.diffLineWithWorking",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.disableRebaseEditor",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.enableRebaseEditor",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.externalDiff",
			"when": "!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.externalDiffAll",
			"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.toggleFileBlame",
			"when": "gitlens:activeFileStatus =~ /blameable/ || config.gitlens.blame.toggleMode == window"
		  },
		  {
			"command": "gitlens.toggleFileBlameInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.toggleFileBlameInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.annotations.nextChange",
			"when": "false"
		  },
		  {
			"command": "gitlens.annotations.previousChange",
			"when": "false"
		  },
		  {
			"command": "gitlens.clearFileAnnotations",
			"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computed\\b/"
		  },
		  {
			"command": "gitlens.computingFileAnnotations",
			"when": "false"
		  },
		  {
			"command": "gitlens.toggleFileHeatmap",
			"when": "gitlens:activeFileStatus =~ /blameable/ || config.gitlens.heatmap.toggleMode == window"
		  },
		  {
			"command": "gitlens.toggleFileHeatmapInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.toggleFileHeatmapInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.toggleFileChanges",
			"when": "(gitlens:activeFileStatus =~ /blameable/  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.toggleFileChangesOnly",
			"when": "false"
		  },
		  {
			"command": "gitlens.toggleLineBlame",
			"when": "!gitlens:disabled"
		  },
		  {
			"command": "gitlens.toggleCodeLens",
			"when": "!gitlens:disabled && !gitlens:disabledToggleCodeLens"
		  },
		  {
			"command": "gitlens.gitCommands",
			"when": "!gitlens:disabled"
		  },
		  {
			"command": "gitlens.gitCommands.branch",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.branch.create",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.branch.delete",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.branch.prune",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.branch.rename",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.checkout",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.cherryPick",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.history",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.merge",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.rebase",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.remote",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.remote.add",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.remote.prune",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.remote.remove",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.reset",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.revert",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.show",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash.drop",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash.list",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash.pop",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash.push",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.stash.rename",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.status",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.switch",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.tag",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.tag.create",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.tag.delete",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.worktree",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.worktree.create",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.worktree.delete",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.gitCommands.worktree.open",
			"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.switchAIModel",
			"when": "gitlens:enabled && gitlens:gk:organization:ai:enabled"
		  },
		  {
			"command": "gitlens.switchMode",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.toggleReviewMode",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.toggleZenMode",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showCommitSearch",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showLastQuickPick",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.revealCommitInView",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.showCommitInView",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.showInDetailsView",
			"when": "false"
		  },
		  {
			"command": "gitlens.showCommitsInView",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.showFileHistoryInView",
			"when": "false"
		  },
		  {
			"command": "gitlens.openFileHistory",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.openFolderHistory",
			"when": "false"
		  },
		  {
			"command": "gitlens.showQuickCommitDetails",
			"when": "false"
		  },
		  {
			"command": "gitlens.showLineCommitInView",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.showQuickCommitFileDetails",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetails",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.showQuickFileHistory",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.quickOpenFileHistory",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.showQuickBranchHistory",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showQuickRepoHistory",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showQuickRepoStatus",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.showQuickStashList",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.addAuthors",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.connectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected"
		  },
		  {
			"command": "gitlens.disconnectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrationsConnected"
		  },
		  {
			"command": "gitlens.copyCurrentBranch",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.copyMessageToClipboard",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "gitlens:activeFileStatus =~ /blameable/"
		  },
		  {
			"command": "gitlens.copyRelativePathToClipboard",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.closeUnchangedFiles",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.openChangedFiles",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.openOnlyChangedFiles",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.openBranchesOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyRemoteBranchesUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.openBranchOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.openCurrentBranchOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyDeepLinkToBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToComparison",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFile",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFileAtRevision",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToLines",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToRepo",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.copyDeepLinkToTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyDeepLinkToWorkspace",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyRemoteBranchUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.openCommitOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyRemoteCommitUrl",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.views.copyRemoteCommitUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.copyRemoteCommitUrl.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.openComparisonOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyRemoteComparisonUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.openPullRequestOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.copyRemotePullRequestUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.openAssociatedPullRequestOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.openFileFromRemote",
			"when": "gitlens:enabled"
		  },
		  {
			"command": "gitlens.openFileOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlToClipboard",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlWithoutRange",
			"when": "false"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.openBlamePriorToChange",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.openFileRevision",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.openFileRevisionFrom",
			"when": "gitlens:activeFileStatus =~ /tracked/"
		  },
		  {
			"command": "gitlens.openRepoOnRemote",
			"when": "gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.copyRemoteRepositoryUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.openRevisionFile",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor"
		  },
		  {
			"command": "gitlens.openRevisionFileInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.openRevisionFileInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.openWorkingFile",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.openWorkingFileInDiffLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.openWorkingFileInDiffRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.views.stash.apply",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stash.delete",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stash.delete.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stash.rename",
			"when": "false"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.stashSaveFiles",
			"when": "false"
		  },
		  {
			"command": "gitlens.inviteToLiveShare",
			"when": "false"
		  },
		  {
			"command": "gitlens.browseRepoAtRevision",
			"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.browseRepoAtRevisionInNewWindow",
			"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.browseRepoBeforeRevision",
			"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.browseRepoBeforeRevisionInNewWindow",
			"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		  },
		  {
			"command": "gitlens.views.browseRepoAtRevision",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.browseRepoAtRevisionInNewWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.browseRepoBeforeRevision",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.fetchRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.pullRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.pushRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
		  },
		  {
			"command": "gitlens.views.addRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.highlightChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.highlightRevisionChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.restore",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.switchToBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.switchToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.switchToTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.copyAsMarkdown",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.copyUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.copyUrl.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openUrl.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pruneRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.publishBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.publishRepository",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pushWithForce",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openInTerminal",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openInIntegratedTerminal",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setAsDefault",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.unsetAsDefault",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stageDirectory",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stageFile",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.unstageDirectory",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.unstageFile",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.star.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.unstar.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openDirectoryDiff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openDirectoryDiffWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangesWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openPreviousChangesWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openFile",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openFileRevision",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFiles",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffs",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsIndividually",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileRevisions",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openOnlyChangedFiles",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.applyChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.closeRepository",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareAncestryWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareWithMergeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithMergeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareWithHead",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareWithUpstream",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareWithSelected",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.selectForCompare",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareFileWithSelected",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.selectFileForCompare",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.compareWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.addAuthors",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.addAuthor",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.addAuthor.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.createWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.ghpr.views.openOrCreateWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.title.createWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteWorktree.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openWorktreeInNewWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openWorktreeInNewWindow.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.revealRepositoryInExplorer",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.revealWorktreeInExplorer",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.title.createBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteBranch.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.renameBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.cherryPick",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.cherryPick.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.mergeBranchInto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pushToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.rebaseOntoBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.rebaseOntoCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.rebaseOntoUpstream",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.resetCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.resetToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.resetToTip",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.revert",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.undoCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.removeRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.title.createTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.deleteTag.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.createPullRequest",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openPullRequest",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openPullRequestChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.openPullRequestComparison",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.clearComparison",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.clearReviewed",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.collapseNode",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.dismissNode",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.editNode",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.expandNode",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.refreshNode",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.loadMoreChildren",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.loadAllChildren",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setShowRelativeDateMarkersOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setShowRelativeDateMarkersOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchComparisonOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchComparisonOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchPullRequestOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchPullRequestOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commitDetails.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.patchDetails.close",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.patchDetails.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterAuthors",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowMergeCommitsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowMergeCommitsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchComparisonOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchComparisonOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchPullRequestOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchPullRequestOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAllBranchesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAllBranchesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowMergeCommitsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowMergeCommitsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowStatisticsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.contributors.setShowStatisticsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.info",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.create",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.drafts.delete",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.draft.open",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.draft.openOnWeb",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.changeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setCursorFollowingOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setCursorFollowingOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setEditorFollowingOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setEditorFollowingOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setRenameFollowingOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setRenameFollowingOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAllBranchesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAllBranchesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.graph.openInTab",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.graph.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.graphDetails.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.home.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.account.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.changeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.setEditorFollowingOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.setEditorFollowingOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.lineHistory.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.close",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.pullRequest.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setAutoRefreshToOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setAutoRefreshToOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchComparisonOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchComparisonOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowCommitsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowCommitsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowContributorsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowContributorsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowRemotesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowRemotesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowStashesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowStashesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowTagsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowTagsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowWorktreesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowWorktreesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowUpstreamStatusOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowUpstreamStatusOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.repositories.setShowSectionOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.clear",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.searchCommits",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.selectForCompare",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setResultsCommitsFilterAuthors",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.setResultsCommitsFilterOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.swapComparison",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stashes.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stashes.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.tags.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.timeline.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.info",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.convert",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.create",
			"when": "gitlens:plus"
		  },
		  {
			"command": "gitlens.views.workspaces.delete",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.addRepos",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.addReposFromLinked",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.locate",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.locateAllRepos",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.createLocal",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.openLocal",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.openLocalNewWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.changeAutoAddSetting",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.openInNewWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.open",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.addToWindow",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.remove",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.workspaces.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToList",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToTree",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowAvatarsOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowAvatarsOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.switchToEditorLayout",
			"when": "gitlens:enabled && config.gitlens.graph.layout != editor"
		  },
		  {
			"command": "gitlens.graph.switchToPanelLayout",
			"when": "gitlens:enabled && config.gitlens.graph.layout != panel"
		  },
		  {
			"command": "gitlens.graph.push",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.pull",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.fetch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.switchToAnotherBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToRepo",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.launchpad.refresh",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyRemoteBranchUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.createBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.deleteBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openBranchOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.mergeBranchInto",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.publishBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoUpstream",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.renameBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.switchToBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.hideLocalBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.hideRemoteBranch",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.hideRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.hideTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.hideRefGroup",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.cherryPick",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyMessage",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copySha",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyRemoteCommitUrl",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copyRemoteCommitUrl.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.showInDetailsView",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openCommitOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openCommitOnRemote.multi",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.resetCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.resetToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.resetToTip",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.revert",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.switchToCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.undoCommit",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.stash.save",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.stash.apply",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.stash.delete",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.stash.rename",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.createTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.deleteTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.switchToTag",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.createWorktree",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.createPullRequest",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openPullRequest",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openPullRequestChanges",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openPullRequestComparison",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openPullRequestOnRemote",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.compareAncestryWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.compareWithMergeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.compareWithHead",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.compareWithUpstream",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.compareWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFiles",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffs",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithWorking",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsIndividually",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openChangedFileRevisions",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.openOnlyChangedFiles",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.addAuthor",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.copy",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnAuthorOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnAuthorOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnDateTimeOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnDateTimeOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnShaOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnShaOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnGraphCompact",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnGraphDefault",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnChangesOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnChangesOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnGraphOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnGraphOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnMessageOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnMessageOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnRefOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.columnRefOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.resetColumnsDefault",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.resetColumnsCompact",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerLocalBranchOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerLocalBranchOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerRemoteBranchOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerRemoteBranchOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerStashOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerStashOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerTagOn",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerTagOff",
			"when": "false"
		  },
		  {
			"command": "gitlens.graph.shareAsCloudPatch",
			"when": "false"
		  },
		  {
			"command": "gitlens.enableDebugLogging",
			"when": "config.gitlens.outputLevel != debug"
		  },
		  {
			"command": "gitlens.disableDebugLogging",
			"when": "config.gitlens.outputLevel == debug"
		  },
		  {
			"command": "gitlens.generateCommitMessage",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled"
		  },
		  {
			"command": "gitlens.resetAIKey",
			"when": "gitlens:enabled && gitlens:gk:organization:ai:enabled"
		  }
		],
		"editor/context": [
		  {
			"command": "gitlens.openWorkingFile",
			"when": "editorTextFocus && config.gitlens.menus.editor.compare && resourceScheme == gitlens",
			"group": "1_z_gitlens@0"
		  },
		  {
			"submenu": "gitlens/editor/context/changes",
			"when": "editorTextFocus && config.gitlens.menus.editor.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_z_gitlens_open@1"
		  },
		  {
			"submenu": "gitlens/editor/context/openOn",
			"when": "editorTextFocus && gitlens:repos:withRemotes && config.gitlens.menus.editor.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_z_gitlens_open@2"
		  },
		  {
			"submenu": "gitlens/editor/annotations",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_z_gitlens_open_file@1"
		  },
		  {
			"submenu": "gitlens/editor/history",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_z_gitlens_open_file@2"
		  }
		],
		"editor/context/copy": [
		  {
			"command": "gitlens.copyRelativePathToClipboard",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlToClipboard",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens_remote@1"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens_remote@2"
		  },
		  {
			"command": "gitlens.copyRemoteCommitUrl",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens_remote@3"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.copyMessageToClipboard",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.copyDeepLinkToLines",
			"when": "editorTextFocus && editorHasSelection && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFile",
			"when": "editorTextFocus && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFileAtRevision",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_gitlens@4"
		  }
		],
		"editor/lineNumber/context": [
		  {
			"submenu": "gitlens/editor/lineNumber/context/share",
			"when": "gitlens:repos:withRemotes && config.gitlens.menus.editorGutter.share && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "2_gitlens@2"
		  },
		  {
			"submenu": "gitlens/editor/lineNumber/context/changes",
			"when": "config.gitlens.menus.editorGutter.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "3_gitlens@1"
		  },
		  {
			"submenu": "gitlens/editor/lineNumber/context/openOn",
			"when": "gitlens:repos:withRemotes && config.gitlens.menus.editorGutter.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "3_gitlens@2"
		  }
		],
		"editor/title": [
		  {
			"command": "gitlens.openPatch",
			"when": "false && editorLangId == diff"
		  },
		  {
			"command": "gitlens.diffWithWorking",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && !isInDiffEditor",
			"group": "navigation@-99"
		  },
		  {
			"command": "gitlens.diffWithWorkingInDiffLeft",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@-99"
		  },
		  {
			"command": "gitlens.diffWithWorkingInDiffRight",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffRightEditor",
			"group": "navigation@-99"
		  },
		  {
			"command": "gitlens.openWorkingFile",
			"when": "gitlens:enabled && resourceScheme == git && !isInDiffEditor",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.openWorkingFile",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && !isInDiffEditor",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.openWorkingFileInDiffLeft",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.openWorkingFileInDiffRight",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffRightEditor",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.openRevisionFileInDiffLeft",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@-97"
		  },
		  {
			"command": "gitlens.openRevisionFileInDiffRight",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ && isInDiffRightEditor",
			"group": "navigation@-97"
		  },
		  {
			"command": "gitlens.diffWithPrevious",
			"alt": "gitlens.diffWithRevision",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
			"group": "navigation@97"
		  },
		  {
			"command": "gitlens.diffWithPreviousInDiffLeft",
			"alt": "gitlens.diffWithRevision",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@97"
		  },
		  {
			"command": "gitlens.diffWithPreviousInDiffRight",
			"alt": "gitlens.diffWithRevision",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
			"group": "navigation@97"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetails",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffRight",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.diffWithNext",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.diffWithNextInDiffLeft",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.diffWithNextInDiffRight",
			"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.toggleFileBlame",
			"when": "config.gitlens.fileAnnotations.command == blame && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100",
			"alt": "gitlens.toggleFileHeatmap"
		  },
		  {
			"command": "gitlens.toggleFileHeatmap",
			"when": "config.gitlens.fileAnnotations.command == heatmap && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100",
			"alt": "gitlens.toggleFileBlame"
		  },
		  {
			"command": "gitlens.toggleFileChanges",
			"when": "config.gitlens.fileAnnotations.command == changes && gitlens:activeFileStatus =~ /blameable/ && !gitlens:hasVirtualFolders && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100",
			"alt": "gitlens.toggleFileBlame"
		  },
		  {
			"submenu": "gitlens/editor/annotations",
			"when": "!config.gitlens.fileAnnotations.command && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100"
		  },
		  {
			"command": "gitlens.computingFileAnnotations",
			"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computing\\b/ && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100"
		  },
		  {
			"command": "gitlens.clearFileAnnotations",
			"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computed\\b/ && config.gitlens.menus.editorGroup.blame",
			"group": "navigation@100"
		  },
		  {
			"command": "gitlens.timeline.refresh",
			"when": "activeWebviewPanelId === gitlens.timeline",
			"group": "navigation@-99"
		  },
		  {
			"command": "gitlens.graph.refresh",
			"when": "activeWebviewPanelId === gitlens.graph",
			"group": "navigation@-99"
		  },
		  {
			"submenu": "gitlens/graph/configuration",
			"when": "activeWebviewPanelId === gitlens.graph",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.launchpad.refresh",
			"when": "activeWebviewPanelId === gitlens.focus",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.launchpad.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.focus && config.gitlens.launchpad.allowMultiple",
			"group": "navigation@-97"
		  },
		  {
			"command": "gitlens.graph.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.graph && config.gitlens.graph.allowMultiple",
			"group": "navigation@-97"
		  },
		  {
			"command": "gitlens.timeline.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.timeline && config.gitlens.visualHistory.allowMultiple",
			"group": "navigation@-97"
		  }
		],
		"editor/title/context": [
		  {
			"command": "gitlens.copyRemoteFileUrlWithoutRange",
			"when": "gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.editorTab.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_cutcopypaste@100"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.editorTab.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "1_cutcopypaste@101"
		  },
		  {
			"command": "gitlens.openWorkingFile",
			"when": "resourceScheme == gitlens && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "2_a_gitlens@0"
		  },
		  {
			"submenu": "gitlens/editor/changes",
			"when": "gitlens:enabled && config.gitlens.menus.editorTab.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "2_a_gitlens_open@1"
		  },
		  {
			"submenu": "gitlens/editor/openOn",
			"when": "gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.editorTab.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "2_a_gitlens_open@2"
		  },
		  {
			"submenu": "gitlens/editor/history",
			"when": "gitlens:enabled && config.gitlens.menus.editorTab.history && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/",
			"group": "2_a_gitlens_open_file@1"
		  },
		  {
			"command": "gitlens.launchpad.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.focus && config.gitlens.launchpad.allowMultiple",
			"group": "6_split_in_group_gitlens@2"
		  },
		  {
			"command": "gitlens.graph.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.graph && config.gitlens.graph.allowMultiple",
			"group": "6_split_in_group_gitlens@2"
		  },
		  {
			"command": "gitlens.timeline.split",
			"when": "resourceScheme == webview-panel && activeWebviewPanelId === gitlens.timeline && config.gitlens.visualHistory.allowMultiple",
			"group": "6_split_in_group_gitlens@2"
		  }
		],
		"explorer/context": [
		  {
			"submenu": "gitlens/explorer/changes",
			"when": "!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare",
			"group": "4_t_gitlens@0"
		  },
		  {
			"submenu": "gitlens/explorer/openOn",
			"when": "!explorerResourceIsRoot && gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.explorer.remote",
			"group": "4_t_gitlens@1"
		  },
		  {
			"submenu": "gitlens/explorer/history",
			"when": "gitlens:enabled && config.gitlens.menus.explorer.history",
			"group": "4_timeline@0"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlWithoutRange",
			"when": "!explorerResourceIsRoot && gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.explorer.clipboard",
			"group": "6_copypath@100"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "!explorerResourceIsRoot && gitlens:enabled && gitlens:repos:withRemotes && config.gitlens.menus.explorer.clipboard",
			"group": "6_copypath@101"
		  }
		],
		"extension/context": [
		  {
			"command": "gitlens.getStarted",
			"when": "extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showWelcomePage",
			"when": "extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed",
			"group": "9_gitlens@2"
		  },
		  {
			"command": "gitlens.showSettingsPage",
			"when": "extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed",
			"group": "9_gitlens@3"
		  }
		],
		"git.commit": [
		  {
			"command": "gitlens.addAuthors",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors",
			"group": "4_gitlens@1"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
			"group": "4_gitlens@2"
		  },
		  {
			"command": "gitlens.shareAsCloudPatch",
			"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
			"group": "4_gitlens@3"
		  },
		  {
			"command": "gitlens.generateCommitMessage",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage",
			"group": "4_gitlens@4"
		  }
		],
		"menuBar/edit/copy": [
		  {
			"command": "gitlens.copyRemoteFileUrlToClipboard",
			"when": "gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
			"group": "1_gitlens@2"
		  }
		],
		"scm/sourceControl": [
		  {
			"command": "gitlens.showGraph",
			"when": "gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos",
			"group": "6_gitlens@1"
		  }
		],
		"scm/title": [
		  {
			"command": "gitlens.stashSave",
			"when": "gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git",
			"group": "navigation@-1001"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos",
			"group": "navigation@-1000"
		  },
		  {
			"command": "gitlens.addAuthors",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && config.gitlens.menus.scmRepository.authors",
			"group": "2_z_gitlens@1"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
			"group": "2_z_gitlens@2"
		  },
		  {
			"command": "gitlens.shareAsCloudPatch",
			"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
			"group": "2_z_gitlens@3"
		  },
		  {
			"command": "gitlens.generateCommitMessage",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled && scmProvider == git && config.gitlens.menus.scmRepository.generateCommitMessage",
			"group": "2_z_gitlens@4"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos",
			"group": "2_z_gitlens@5"
		  }
		],
		"scm/resourceGroup/context": [
		  {
			"command": "gitlens.stashSave",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroupInline.stash",
			"group": "inline@-1"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.stash",
			"group": "1_modification@100"
		  },
		  {
			"submenu": "gitlens/scm/resourceGroup/changes",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmGroup.compare",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.openChangedFiles",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.closeUnchangedFiles",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.openOnlyChangedFiles",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose",
			"group": "3_gitlens@3"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch",
			"group": "7_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.shareAsCloudPatch",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch",
			"group": "7_cutcopypaste@98"
		  }
		],
		"scm/resourceFolder/context": [
		  {
			"submenu": "gitlens/scm/resourceFolder/changes",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.compare",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch",
			"group": "7_cutcopypaste@97"
		  }
		],
		"scm/resourceState/context": [
		  {
			"command": "gitlens.stashSaveFiles",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItemInline.stash",
			"group": "inline@1"
		  },
		  {
			"submenu": "gitlens/scm/resourceState/changes",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.compare",
			"group": "navigation"
		  },
		  {
			"submenu": "gitlens/scm/resourceState/openOn",
			"when": "gitlens:enabled && gitlens:repos:withRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.remote",
			"group": "navigation"
		  },
		  {
			"submenu": "gitlens/scm/resourceState/history",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.history",
			"group": "1_a_gitlens@2"
		  },
		  {
			"command": "gitlens.stashSaveFiles",
			"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItem.stash",
			"group": "1_modification@2"
		  },
		  {
			"submenu": "gitlens/share",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.share",
			"group": "7_a_gitlens_share@1"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItem.patch",
			"group": "7_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.copyRelativePathToClipboard",
			"when": "gitlens:enabled && gitlens:repos:withRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.clipboard",
			"group": "7_cutcopypaste@98"
		  }
		],
		"timeline/item/context": [
		  {
			"command": "gitlens.openCommitOnRemote",
			"when": "false && gitlens:enabled && gitlens:repos:withRemotes && timelineItem =~ /git:file:commit\\b/",
			"group": "inline@99",
			"alt": "gitlens.copyRemoteCommitUrl"
		  }
		],
		"view/title": [
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.branches/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.title.createBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.branches\\b/",
			"group": "navigation@11"
		  },
		  {
			"command": "gitlens.views.branches.setLayoutToList",
			"when": "view =~ /gitlens\\.views\\.branches/ && config.gitlens.views.branches.branches.layout == tree",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.branches.setLayoutToTree",
			"when": "view =~ /gitlens\\.views\\.branches/ && config.gitlens.views.branches.branches.layout == list",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.branches.refresh",
			"when": "view =~ /^gitlens\\.views\\.branches/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.branches.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.branches.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.branches.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchComparisonOn",
			"when": "view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchComparisonOff",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchPullRequestOn",
			"when": "view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchPullRequestOff",
			"when": "view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.pushRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.pullRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/",
			"group": "navigation@2"
		  },
		  {
			"command": "gitlens.fetchRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/",
			"group": "navigation@3"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "view =~ /^gitlens\\.views\\.commits/ && gitlens:plus:enabled",
			"group": "navigation@11"
		  },
		  {
			"command": "gitlens.views.commitDetails.refresh",
			"when": "view =~ /^gitlens\\.views\\.commitDetails/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.patchDetails.refresh",
			"when": "view =~ /^gitlens\\.views\\.patchDetails/",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.views.patchDetails.close",
			"when": "view =~ /^gitlens\\.views\\.patchDetails/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:filtered",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.commits.refresh",
			"when": "view =~ /^gitlens\\.views\\.commits/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:filtered",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterAuthors",
			"when": "view =~ /^gitlens\\.views\\.commits/",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.commits.setShowMergeCommitsOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && !gitlens:views:commits:hideMergeCommits",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setShowMergeCommitsOn",
			"when": "view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:hideMergeCommits",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == tree",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == auto",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == list",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.commits.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchComparisonOn",
			"when": "view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchComparisonOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchPullRequestOn",
			"when": "view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchPullRequestOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "view =~ /^gitlens\\.views\\.commits/ && gitlens:plus:enabled",
			"group": "8_gitlens_toggles@0"
		  },
		  {
			"command": "gitlens.showRepositoriesView",
			"when": "!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.addAuthors",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.contributors/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.contributors.refresh",
			"when": "view =~ /^gitlens\\.views\\.contributors/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.contributors.setShowMergeCommitsOff",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && !gitlens:views:contributors:hideMergeCommits",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.contributors.setShowMergeCommitsOn",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && gitlens:views:contributors:hideMergeCommits",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAllBranchesOn",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.showAllBranches",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAllBranchesOff",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.showAllBranches",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == tree",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == auto",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.contributors.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == list",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.contributors.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.contributors.setShowStatisticsOn",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.showStatistics",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.contributors.setShowStatisticsOff",
			"when": "view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.showStatistics",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.drafts.refresh",
			"when": "view =~ /^gitlens\\.views\\.drafts/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.drafts.create",
			"when": "view =~ /^gitlens\\.views\\.drafts/ && gitlens:plus",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.drafts.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.drafts/ && !config.gitlens.views.drafts.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.drafts.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.drafts/ && config.gitlens.views.drafts.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.drafts.info",
			"when": "view =~ /^gitlens\\.views\\.drafts/",
			"group": "8_info@1"
		  },
		  {
			"command": "gitlens.views.fileHistory.setEditorFollowingOn",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:canPin && !gitlens:views:fileHistory:editorFollowing",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.fileHistory.setEditorFollowingOff",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.fileHistory.setCursorFollowingOn",
			"when": "!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing",
			"group": "navigation@11"
		  },
		  {
			"command": "gitlens.views.fileHistory.setCursorFollowingOff",
			"when": "!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:cursorFollowing",
			"group": "navigation@11"
		  },
		  {
			"command": "gitlens.views.fileHistory.refresh",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.fileHistory.changeBase",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/",
			"group": "1_gitlens@0"
		  },
		  {
			"command": "gitlens.views.fileHistory.setRenameFollowingOn",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryFollowsRenames",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.fileHistory.setRenameFollowingOff",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryFollowsRenames",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryShowMergeCommits",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryShowMergeCommits",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAllBranchesOn",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryShowAllBranches",
			"group": "3_gitlens@3"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAllBranchesOff",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryShowAllBranches",
			"group": "3_gitlens@3"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && !config.gitlens.views.fileHistory.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.fileHistory.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/ && config.gitlens.views.fileHistory.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.graph.openInTab",
			"when": "view =~ /^gitlens\\.views\\.graph\\b/",
			"group": "navigation@-100"
		  },
		  {
			"command": "gitlens.views.graph.refresh",
			"when": "view =~ /^gitlens\\.views\\.graph\\b/",
			"group": "navigation@-99"
		  },
		  {
			"command": "gitlens.views.graphDetails.refresh",
			"when": "view =~ /^gitlens\\.views\\.graphDetails/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.home.refresh",
			"when": "view =~ /^gitlens\\.views\\.home/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.account.refresh",
			"when": "view =~ /^gitlens\\.views\\.account/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.showLineHistoryView",
			"when": "!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/",
			"group": "8_gitlens_toggles@0"
		  },
		  {
			"command": "gitlens.views.lineHistory.setEditorFollowingOn",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/ && !gitlens:views:lineHistory:editorFollowing",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.lineHistory.setEditorFollowingOff",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/ && gitlens:views:lineHistory:editorFollowing",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.lineHistory.refresh",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.lineHistory.changeBase",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/",
			"group": "1_gitlens@0"
		  },
		  {
			"command": "gitlens.views.lineHistory.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/ && !config.gitlens.views.lineHistory.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.lineHistory.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/ && config.gitlens.views.lineHistory.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.addRemote",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.remotes/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.pullRequest.refresh",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.views.pullRequest.close",
			"when": "view =~ /gitlens\\.views\\.pullRequest/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == tree",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == auto",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.pullRequest.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == list",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.pullRequest.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/ && !config.gitlens.views.pullRequest.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.pullRequest.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setLayoutToList",
			"when": "view =~ /gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.branches.layout == tree",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.remotes.setLayoutToTree",
			"when": "view =~ /gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.branches.layout == list",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.remotes.refresh",
			"when": "view =~ /^gitlens\\.views\\.remotes/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && !config.gitlens.views.remotes.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
			"when": "view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.pushRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.pullRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/",
			"group": "navigation@2"
		  },
		  {
			"command": "gitlens.fetchRepositories",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/",
			"group": "navigation@3"
		  },
		  {
			"command": "gitlens.views.repositories.refresh",
			"when": "view =~ /^gitlens\\.views\\.repositories/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.repositories.setAutoRefreshToOn",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
			"group": "2_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setAutoRefreshToOff",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
			"group": "2_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"submenu": "gitlens/view/repositories/sections",
			"when": "view =~ /^gitlens\\.views\\.repositories/",
			"group": "4_gitlens@1"
		  },
		  {
			"command": "gitlens.views.repositories.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && !config.gitlens.views.repositories.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"submenu": "gitlens/view/searchAndCompare/new",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.clear",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "navigation@98"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.refresh",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && !config.gitlens.views.searchAndCompare.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.stashes/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.stashes/",
			"group": "navigation@11"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.stashes.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.stashes.refresh",
			"when": "view =~ /^gitlens\\.views\\.stashes/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.title.createTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.tags\\b/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.tags.setLayoutToList",
			"when": "view =~ /gitlens\\.views\\.tags/ && config.gitlens.views.tags.branches.layout == tree",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.tags.setLayoutToTree",
			"when": "view =~ /gitlens\\.views\\.tags/ && config.gitlens.views.tags.branches.layout == list",
			"group": "navigation@50"
		  },
		  {
			"command": "gitlens.views.tags.refresh",
			"when": "view =~ /^gitlens\\.views\\.tags/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == tree",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == auto",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.tags.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == list",
			"group": "3_gitlens@0"
		  },
		  {
			"command": "gitlens.views.tags.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.tags/ && !config.gitlens.views.tags.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.tags.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.timeline.refresh",
			"when": "view =~ /^gitlens\\.views\\.timeline/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.workspaces.info",
			"when": "view =~ /^gitlens\\.views\\.workspaces/",
			"group": "8_info@1"
		  },
		  {
			"command": "gitlens.views.workspaces.create",
			"when": "view =~ /^gitlens\\.views\\.workspaces/ && gitlens:plus",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.workspaces.refresh",
			"when": "view =~ /^gitlens\\.views\\.workspaces/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.title.createWorktree",
			"when": "view =~ /^gitlens\\.views\\.worktrees/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.worktrees/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.worktrees.refresh",
			"when": "view =~ /^gitlens\\.views\\.worktrees/",
			"group": "navigation@99"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == tree",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToList",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == auto",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.worktrees.setFilesLayoutToTree",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == list",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowAvatarsOn",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowAvatarsOff",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.avatars",
			"group": "5_gitlens@0"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.showBranchComparison",
			"group": "5_gitlens@1"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
			"when": "view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches",
			"group": "5_gitlens@2"
		  },
		  {
			"command": "gitlens.views.setShowRelativeDateMarkersOn",
			"when": "view =~ /^gitlens\\.views\\.(branches|commits|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && !config.gitlens.views.showRelativeDateMarkers",
			"group": "5_gitlens@3"
		  },
		  {
			"command": "gitlens.views.setShowRelativeDateMarkersOff",
			"when": "view =~ /^gitlens\\.views\\.(branches|commits|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && config.gitlens.views.showRelativeDateMarkers",
			"group": "5_gitlens@3"
		  },
		  {
			"submenu": "gitlens/graph/configuration",
			"when": "view =~ /^gitlens\\.views\\.graph\\b/",
			"group": "navigation@-98"
		  },
		  {
			"command": "gitlens.showSettingsPage!branches-view",
			"when": "view =~ /^gitlens\\.views\\.branches/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!commits-view",
			"when": "view =~ /^gitlens\\.views\\.commits/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!contributors-view",
			"when": "view =~ /^gitlens\\.views\\.contributors/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!file-history-view",
			"when": "view =~ /^gitlens\\.views\\.fileHistory/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!line-history-view",
			"when": "view =~ /^gitlens\\.views\\.lineHistory/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!remotes-view",
			"when": "view =~ /^gitlens\\.views\\.remotes/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!repositories-view",
			"when": "view =~ /^gitlens\\.views\\.repositories/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!search-compare-view",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!stashes-view",
			"when": "view =~ /^gitlens\\.views\\.stashes/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!tags-view",
			"when": "view =~ /^gitlens\\.views\\.tags/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!worktrees-view",
			"when": "view =~ /^gitlens\\.views\\.worktrees/",
			"group": "9_gitlens@1"
		  }
		],
		"view/item/context": [
		  {
			"command": "gitlens.plus.login",
			"when": "viewItem == gitlens:message:signin",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.draft.openOnWeb",
			"when": "viewItem =~  /gitlens:draft\\b/ && gitlens:plus",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.draft.open",
			"when": "viewItem =~  /gitlens:draft\\b/ && gitlens:plus",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.draft.openOnWeb",
			"when": "viewItem =~  /gitlens:draft\\b/ && gitlens:plus",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.drafts.delete",
			"when": "viewItem =~  /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.convert",
			"when": "viewItem =~  /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.workspaces.convert",
			"when": "viewItem =~  /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.addRepos",
			"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.workspaces.locateAllRepos",
			"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.workspaces.createLocal",
			"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/",
			"group": "inline@3"
		  },
		  {
			"command": "gitlens.views.workspaces.openLocalNewWindow",
			"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/",
			"group": "inline@3",
			"alt": "gitlens.views.workspaces.openLocal"
		  },
		  {
			"command": "gitlens.views.workspaces.addRepos",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.locateAllRepos",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.workspaces.addReposFromLinked",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.workspaces.createLocal",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/",
			"group": "2_gitlens_quickopen@3"
		  },
		  {
			"command": "gitlens.views.workspaces.openLocal",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/",
			"group": "2_gitlens_quickopen@4"
		  },
		  {
			"command": "gitlens.views.workspaces.openLocalNewWindow",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/",
			"group": "2_gitlens_quickopen@5"
		  },
		  {
			"command": "gitlens.views.workspaces.changeAutoAddSetting",
			"when": "!listMultiSelection && viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/",
			"group": "2_gitlens_quickopen@6"
		  },
		  {
			"command": "gitlens.views.workspaces.delete",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/",
			"group": "inline@10"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/",
			"group": "inline@11"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToList",
			"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree",
			"group": "inline@50"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToTree",
			"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list",
			"group": "inline@50"
		  },
		  {
			"command": "gitlens.openBranchesOnRemote",
			"when": "viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/",
			"group": "inline@98",
			"alt": "gitlens.copyRemoteBranchesUrl"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.openBranchesOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
			"when": "!listMultiSelection && view =~ /^gitlens\\.views\\.repositories/ && viewItem =~ /gitlens:branches\\b/ && !config.gitlens.views.repositories.branches.showBranchComparison",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
			"when": "!listMultiSelection && view =~ /^gitlens\\.views\\.repositories/ && viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.showBranchComparison",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.switchToBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@7"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@7"
		  },
		  {
			"command": "gitlens.views.publishBranch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@8"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@8"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@8"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@8"
		  },
		  {
			"command": "gitlens.views.createPullRequest",
			"when": "gitlens:repos:withRemotes && gitlens:action:createPullRequest && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "inline@9"
		  },
		  {
			"command": "gitlens.views.undoCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/",
			"group": "inline@78"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/",
			"group": "inline@79",
			"alt": "gitlens.views.pushWithForce"
		  },
		  {
			"command": "gitlens.views.pushToCommit",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/",
			"group": "inline@80"
		  },
		  {
			"command": "gitlens.views.compareWithHead",
			"when": "viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/",
			"group": "inline@97",
			"alt": "gitlens.views.compareWithWorking"
		  },
		  {
			"command": "gitlens.views.compareWithWorking",
			"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote",
			"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "inline@99",
			"alt": "gitlens.copyRemoteBranchUrl"
		  },
		  {
			"command": "gitlens.views.switchToAnotherBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.switchToBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.publishBranch",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.mergeBranchInto",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.views.rebaseOntoBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.views.rebaseOntoUpstream",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.views.renameBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@6"
		  },
		  {
			"command": "gitlens.views.deleteBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.views.deleteBranch.multi",
			"when": "listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions_@7"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions_@8"
		  },
		  {
			"command": "gitlens.views.createWorktree",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions_@9"
		  },
		  {
			"command": "gitlens.views.createPullRequest",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && gitlens:action:createPullRequest && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions_@10"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithMergeBase",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "3_gitlens_explore@11"
		  },
		  {
			"command": "gitlens.views.openDirectoryDiffWithWorking",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|tag)\\b/",
			"group": "3_gitlens_explore@12"
		  },
		  {
			"command": "gitlens.views.compareWithUpstream",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/",
			"group": "4_gitlens_compare@1"
		  },
		  {
			"command": "gitlens.views.compareWithHead",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/",
			"group": "4_gitlens_compare@2"
		  },
		  {
			"command": "gitlens.views.compareWithWorking",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "4_gitlens_compare@3"
		  },
		  {
			"command": "gitlens.views.compareWithMergeBase",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "4_gitlens_compare@4"
		  },
		  {
			"command": "gitlens.views.compareAncestryWithWorking",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "4_gitlens_compare@5"
		  },
		  {
			"command": "gitlens.views.compareWithSelected",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare",
			"group": "4_gitlens_compare@98"
		  },
		  {
			"command": "gitlens.views.selectForCompare",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "4_gitlens_compare@99"
		  },
		  {
			"command": "gitlens.views.compareFileWithSelected",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b/ && gitlens:views:canCompare:file",
			"group": "4_gitlens_compare@98"
		  },
		  {
			"command": "gitlens.views.selectFileForCompare",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/",
			"group": "4_gitlens_compare@99"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "!listMultiSelection && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.star.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "!listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.unstar.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.addAuthors",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributors\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.addAuthors",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributors\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.inviteToLiveShare",
			"when": "gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.addAuthor",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.copy",
			"when": "viewItem =~ /gitlens:contributor\\b/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.inviteToLiveShare",
			"when": "!listMultiSelection && gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.addAuthor",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.addAuthor.multi",
			"when": "listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.copyAsMarkdown",
			"when": "viewItem =~ /gitlens:contributor\\b/",
			"group": "7_gitlens_cutcopypaste@2"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "viewItem =~ /gitlens:commit\\b/",
			"group": "inline@98",
			"alt": "gitlens.copyMessageToClipboard"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote",
			"when": "viewItem =~ /gitlens:commit\\b/ && gitlens:repos:withRemotes",
			"group": "inline@99",
			"alt": "gitlens.views.copyRemoteCommitUrl"
		  },
		  {
			"command": "gitlens.views.cherryPick",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.cherryPick.multi",
			"when": "listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.undoCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.pushToCommit",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.revert",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.resetToCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.views.resetToTip",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.views.resetCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.views.rebaseOntoCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/",
			"group": "1_gitlens_actions@6"
		  },
		  {
			"command": "gitlens.views.switchToCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions_1@1"
		  },
		  {
			"command": "gitlens.createPatch",
			"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "1_gitlens_actions_1@2"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "7_gitlens_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.createCloudPatch",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "1_gitlens_actions_1@3"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions_1@4"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffs",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled",
			"group": "inline@90",
			"alt": "gitlens.views.openChangedFileDiffsWithWorking"
		  },
		  {
			"submenu": "gitlens/commit/changes",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.showInDetailsView",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "3_gitlens_explore@0"
		  },
		  {
			"command": "gitlens.showInCommitGraph",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b(?!.*?\\b\\+closed\\b)/",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"command": "gitlens.revealCommitInView",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && viewItem =~ /gitlens:commit\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:commit\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote.multi",
			"when": "listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:commit\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"submenu": "gitlens/share",
			"when": "viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/",
			"group": "7_gitlens_a_share@1"
		  },
		  {
			"command": "gitlens.copyRelativePathToClipboard",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b/",
			"group": "7_gitlens_cutcopypaste@2"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "7_gitlens_cutcopypaste@3"
		  },
		  {
			"command": "gitlens.copyMessageToClipboard",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "7_gitlens_cutcopypaste@4"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "7_gitlens_cutcopypaste@3"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/",
			"group": "7_gitlens_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.copyMessageToClipboard",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/",
			"group": "7_gitlens_cutcopypaste@98"
		  },
		  {
			"submenu": "gitlens/commit/copy",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/",
			"group": "7_gitlens_cutcopypaste@10"
		  },
		  {
			"command": "gitlens.views.openFile",
			"when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/",
			"group": "inline@-1"
		  },
		  {
			"command": "gitlens.views.pushToCommit",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/",
			"group": "inline@-1"
		  },
		  {
			"command": "gitlens.views.openFileRevision",
			"when": "viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/",
			"group": "inline@1",
			"alt": "gitlens.views.openFile"
		  },
		  {
			"command": "gitlens.views.openChanges",
			"when": "view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/",
			"group": "inline@96"
		  },
		  {
			"command": "gitlens.views.openFile",
			"when": "view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/",
			"group": "inline@96"
		  },
		  {
			"command": "gitlens.views.openChangesWithWorking",
			"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/",
			"group": "inline@96"
		  },
		  {
			"command": "gitlens.views.stageFile",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.unstageFile",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "inline@98",
			"alt": "gitlens.copyMessageToClipboard"
		  },
		  {
			"command": "gitlens.openFileOnRemote",
			"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes",
			"group": "inline@99",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"command": "gitlens.views.stageFile",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.unstageFile",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.stashSaveFiles",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.openChanges",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"submenu": "gitlens/commit/file/changes",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.showInDetailsView",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "2_gitlens_quickopen@3"
		  },
		  {
			"command": "gitlens.views.openFile",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/",
			"group": "2_gitlens_quickopen_file@3"
		  },
		  {
			"command": "gitlens.views.openFileRevision",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/",
			"group": "2_gitlens_quickopen_file@4"
		  },
		  {
			"command": "gitlens.openFileOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes",
			"group": "2_gitlens_quickopen_file@5",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"submenu": "gitlens/commit/file/commit",
			"when": "!listMultiSelection && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"submenu": "gitlens/commit/file/history",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"command": "gitlens.views.compareWithHead",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "4_gitlens_compare@2"
		  },
		  {
			"command": "gitlens.views.compareWithWorking",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "4_gitlens_compare@3"
		  },
		  {
			"command": "gitlens.views.applyChanges",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.restore",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.applyChanges",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.restore",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/",
			"group": "8_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.openFileOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:repos:withRemotes",
			"group": "5_gitlens_open@2",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"command": "gitlens.connectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && viewItem =~ /gitlens:autolinked:items\\b/ && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.showSettingsPage!autolinks",
			"when": "viewItem =~ /gitlens:autolinked:items\\b/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.connectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && viewItem =~ /gitlens:autolinked:items\\b/ && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!autolinks",
			"when": "!listMultiSelection && viewItem =~ /gitlens:autolinked:items\\b/",
			"group": "8_gitlens_actions@99"
		  },
		  {
			"command": "gitlens.views.openUrl",
			"when": "viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "inline@99",
			"alt": "gitlens.views.copyUrl"
		  },
		  {
			"command": "gitlens.views.openUrl",
			"when": "!listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "1_gitlens_actions@99"
		  },
		  {
			"command": "gitlens.views.openUrl.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "1_gitlens_actions@99"
		  },
		  {
			"command": "gitlens.views.copyUrl",
			"when": "!listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"command": "gitlens.views.copyUrl.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"command": "gitlens.views.copyAsMarkdown",
			"when": "viewItem =~ /gitlens:autolinked:item\\b/",
			"group": "7_gitlens_cutcopypaste@2"
		  },
		  {
			"command": "gitlens.views.openPullRequest",
			"when": "gitlens:action:openPullRequest > 1 && viewItem =~ /gitlens:pullrequest\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.openPullRequestChanges",
			"when": "viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.openPullRequestComparison",
			"when": "viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
			"group": "inline@3"
		  },
		  {
			"command": "gitlens.openPullRequestOnRemote",
			"when": "viewItem =~ /gitlens:pullrequest\\b/",
			"group": "inline@99",
			"alt": "gitlens.copyRemotePullRequestUrl"
		  },
		  {
			"command": "gitlens.views.openPullRequestChanges",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.openPullRequest",
			"when": "!listMultiSelection && gitlens:action:openPullRequest > 1 && viewItem =~ /gitlens:pullrequest\\b/",
			"group": "1_gitlens_actions@98"
		  },
		  {
			"command": "gitlens.openPullRequestOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b/",
			"group": "1_gitlens_actions@99"
		  },
		  {
			"command": "gitlens.showInCommitGraph",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"command": "gitlens.views.openPullRequestComparison",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
			"group": "4_gitlens_compare@1"
		  },
		  {
			"command": "gitlens.copyRemotePullRequestUrl",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"command": "gitlens.views.addRemote",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remotes\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToList",
			"when": "viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree",
			"group": "inline@50"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesLayoutToTree",
			"when": "viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list",
			"group": "inline@50"
		  },
		  {
			"command": "gitlens.views.addRemote",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remotes\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.connectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.disconnectRemoteProvider",
			"when": "config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.openRepoOnRemote",
			"when": "viewItem =~ /gitlens:remote\\b/",
			"group": "inline@99",
			"alt": "gitlens.copyRemoteRepositoryUrl"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pruneRemote",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.openRepoOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:remote\\b/",
			"group": "5_gitlens_open@1"
		  },
		  {
			"command": "gitlens.openBranchesOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:remote\\b/",
			"group": "5_gitlens_open@2"
		  },
		  {
			"command": "gitlens.views.removeRemote",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/",
			"group": "6_gitlens_terminal@1"
		  },
		  {
			"command": "gitlens.views.setAsDefault",
			"when": "!listMultiSelection && viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.unsetAsDefault",
			"when": "!listMultiSelection && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/",
			"group": "8_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.connectRemoteProvider",
			"when": "!listMultiSelection && config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/",
			"group": "8_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.disconnectRemoteProvider",
			"when": "!listMultiSelection && config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/",
			"group": "8_gitlens_actions@2"
		  },
		  {
			"submenu": "gitlens/commit/browse",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/",
			"group": "3_gitlens_explore@10"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.locate",
			"when": "viewItem =~ /gitlens:workspaceMissingRepository\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.locate",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspaceMissingRepository\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.remove",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspaceMissingRepository\\b/",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.openInNewWindow",
			"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
			"group": "inline@100",
			"alt": "gitlens.views.workspaces.repo.open"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.open",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
			"group": "0_1gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.openInNewWindow",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
			"group": "0_1gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.addToWindow",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
			"group": "0_1gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.revealRepositoryInExplorer",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
			"group": "0_2gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.locate",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/",
			"group": "0_2gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.workspaces.repo.remove",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/",
			"group": "0_3gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "inline@96",
			"alt": "gitlens.views.pushWithForce"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pushWithForce",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.openInTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openInIntegratedTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.views.revealRepositoryInExplorer",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/",
			"group": "2_gitlens_quickopen@3"
		  },
		  {
			"command": "gitlens.openRepoOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b/ && gitlens:repos:withRemotes",
			"group": "2_gitlens_quickopen@4"
		  },
		  {
			"command": "gitlens.showCommitSearch",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b/",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/",
			"group": "1_gitlens_actions_1@1"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/",
			"group": "1_gitlens_actions_1@2"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.star.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.unstar.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.closeRepository",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/",
			"group": "8_gitlens_actions_@2"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/",
			"group": "inline@96",
			"alt": "gitlens.views.pushWithForce"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled",
			"group": "inline@100"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterOff",
			"when": "view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered",
			"group": "inline@101"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pushWithForce",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.openInTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openInIntegratedTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.openRepoOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/ && gitlens:repos:withRemotes",
			"group": "2_gitlens_quickopen@3"
		  },
		  {
			"command": "gitlens.showGraph",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"command": "gitlens.showCommitSearch",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions_1@1"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "1_gitlens_actions_1@2"
		  },
		  {
			"command": "gitlens.views.star",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.star.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.unstar",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.unstar.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/",
			"group": "8_gitlens_actions_@1"
		  },
		  {
			"command": "gitlens.views.closeRepository",
			"when": "!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "8_gitlens_actions_@2"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterOff",
			"when": "!listMultiSelection && view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered",
			"group": "8_gitlens_filter_@1"
		  },
		  {
			"command": "gitlens.views.commits.setCommitsFilterAuthors",
			"when": "!listMultiSelection && view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b/",
			"group": "8_gitlens_filter_@2"
		  },
		  {
			"command": "gitlens.views.publishRepository",
			"when": "!gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.addRemote",
			"when": "!gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:none/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.publishBranch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/",
			"group": "inline@99",
			"alt": "gitlens.views.pushWithForce"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.createPullRequest",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:action:createPullRequest && viewItem =~ /gitlens:status:upstream:same/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream:same/",
			"group": "inline@97",
			"alt": "gitlens.copyRemoteBranchUrl"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:ahead",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pushWithForce",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:ahead",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.pull",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:behind",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.fetch",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream/",
			"group": "1_gitlens_secondary_actions@1"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream/",
			"group": "1_gitlens_secondary_actions@2"
		  },
		  {
			"command": "gitlens.views.createPullRequest",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:action:createPullRequest && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/",
			"group": "1_gitlens_secondary_actions@3"
		  },
		  {
			"command": "gitlens.views.openBranchOnRemote",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/",
			"group": "2_gitlens_quickopen_remote@1"
		  },
		  {
			"command": "gitlens.views.openInTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream\\b/",
			"group": "2_gitlens_quickopen_terminal@1"
		  },
		  {
			"command": "gitlens.views.openInIntegratedTerminal",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream\\b/",
			"group": "2_gitlens_quickopen_terminal@2"
		  },
		  {
			"command": "gitlens.copyRemoteBranchUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"command": "gitlens.views.dismissNode",
			"when": "viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.clearComparison",
			"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.editNode",
			"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
			"group": "inline@96"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToWorking",
			"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToBranch",
			"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToWorking",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.setBranchComparisonToBranch",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.editNode",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.views.clearReviewed",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.views.clearComparison",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
			"group": "1_gitlens@4"
		  },
		  {
			"command": "gitlens.views.branches.setShowBranchComparisonOff",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.branches\\b/ && viewItem =~ /gitlens:compare:branch\\b/",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.commits.setShowBranchComparisonOff",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.commits\\b/ && viewItem =~ /gitlens:compare:branch\\b/",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.repositories\\b/ && viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/",
			"group": "8_gitlens_toggles@1"
		  },
		  {
			"command": "gitlens.views.repositories.setShowSectionOff",
			"when": "!listMultiSelection && view =~ /gitlens\\.views\\.repositories\\b/ && viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/",
			"group": "8_gitlens_toggles@99"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.swapComparison",
			"when": "viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "inline@96"
		  },
		  {
			"submenu": "gitlens/comparison/results/files/filter/inline",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/",
			"group": "inline@99"
		  },
		  {
			"submenu": "gitlens/comparison/results/files/filtered/inline",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.clearReviewed",
			"when": "!listMultiSelection && viewItem =~ /gitlens:results:files\\b/",
			"group": "1_gitlens@1"
		  },
		  {
			"submenu": "gitlens/comparison/results/files/filter",
			"when": "!listMultiSelection && viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/",
			"group": "1_gitlens@2"
		  },
		  {
			"submenu": "gitlens/comparison/results/files/filtered",
			"when": "!listMultiSelection && viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.views.refreshNode",
			"when": "viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.refreshNode",
			"when": "viewItem =~ /gitlens:search:results(?!:)\\b/",
			"group": "inline@97"
		  },
		  {
			"command": "gitlens.views.setResultsCommitsFilterOff",
			"when": "viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "inline@96"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.swapComparison",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.clearReviewed",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.createPatch",
			"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "1_gitlens_secondary_actions@1"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "7_gitlens_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.createCloudPatch",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "1_gitlens_secondary_actions@2"
		  },
		  {
			"command": "gitlens.openComparisonOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "2_gitlens_quickopen@1 && gitlens:repos:withRemotes"
		  },
		  {
			"command": "gitlens.views.openDirectoryDiff",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.views.setResultsCommitsFilterOff",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "7_gitlens_filter@1"
		  },
		  {
			"command": "gitlens.views.setResultsCommitsFilterAuthors",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/",
			"group": "7_gitlens_filter@2"
		  },
		  {
			"command": "gitlens.views.editNode",
			"when": "viewItem =~ /gitlens:search:results(?!:)\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.editNode",
			"when": "!listMultiSelection && viewItem =~ /gitlens:search:results(?!:)\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.openComparisonOnRemote",
			"when": "viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes",
			"group": "inline@99",
			"alt": "gitlens.copyRemoteComparisonUrl"
		  },
		  {
			"command": "gitlens.openComparisonOnRemote",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes",
			"group": "3_gitlens_explore@0"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /^gitlens:(stashes|status:files)$/",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stashes",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.stashSave",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /^gitlens:(stashes|status:files)$/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.stashApply",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stashes",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.stash.apply",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.stash.rename",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "inline@98"
		  },
		  {
			"command": "gitlens.views.stash.delete",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "inline@99"
		  },
		  {
			"command": "gitlens.views.stash.apply",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.stash.rename",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.stash.delete",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.stash.delete.multi",
			"when": "listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tags\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tags\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.switchToTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/",
			"group": "inline@10"
		  },
		  {
			"command": "gitlens.views.switchToTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.deleteTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:tag",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.deleteTag.multi",
			"when": "listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:tag",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.createWorktree",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:worktrees\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.createWorktree",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:worktrees\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.openWorktree",
			"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/",
			"group": "inline@1",
			"alt": "gitlens.views.openWorktreeInNewWindow"
		  },
		  {
			"command": "gitlens.views.openWorktree",
			"when": "viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1",
			"group": "inline@1",
			"alt": "gitlens.views.openWorktreeInNewWindow"
		  },
		  {
			"command": "gitlens.views.openWorktree",
			"when": "!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openWorktree",
			"when": "!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.views.openWorktreeInNewWindow",
			"when": "!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.views.openWorktreeInNewWindow",
			"when": "!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.views.openWorktreeInNewWindow.multi",
			"when": "listMultiSelection && viewItem =~ /gitlens:worktree\\b/",
			"group": "2_gitlens_quickopen@2"
		  },
		  {
			"command": "gitlens.views.revealWorktreeInExplorer",
			"when": "!listMultiSelection && viewItem =~ /gitlens:worktree\\b/",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.views.deleteWorktree",
			"when": "!listMultiSelection && !gitlens:readonly && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|main)\\b)/",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.deleteWorktree.multi",
			"when": "listMultiSelection && !gitlens:readonly && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|main)\\b)/",
			"group": "6_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.stageDirectory",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.unstageDirectory",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
			"group": "inline@2"
		  },
		  {
			"command": "gitlens.views.stageDirectory",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.unstageDirectory",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.copy",
			"when": "viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"command": "gitlens.views.dismissNode",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/",
			"group": "1_gitlens_actions@98"
		  },
		  {
			"command": "gitlens.views.collapseNode",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch|compare|folder|results|search|status|tag)\\b/",
			"group": "9_gitlens@1"
		  },
		  {
			"command": "gitlens.views.expandNode",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch|compare|folder|results|search|status|tag)\\b/",
			"group": "9_gitlens@2"
		  },
		  {
			"command": "gitlens.views.refreshNode",
			"when": "viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/",
			"group": "9_gitlens_z@99"
		  },
		  {
			"command": "gitlens.views.loadAllChildren",
			"when": "viewItem =~ /gitlens:pager\\b/",
			"group": "inline@1"
		  },
		  {
			"command": "gitlens.views.loadAllChildren",
			"when": "!listMultiSelection && viewItem =~ /gitlens:pager\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.setShowRelativeDateMarkersOff",
			"when": "!listMultiSelection && viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers",
			"group": "1_gitlens@0"
		  },
		  {
			"command": "gitlens.ghpr.views.openOrCreateWorktree",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view == pr:github && viewItem =~ /pullrequest(:local)?:nonactive|description/ && config.gitlens.menus.ghpr.worktree",
			"group": "2_gitlens@1"
		  }
		],
		"webview/context": [
		  {
			"command": "gitlens.graph.switchToAnotherBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.switchToBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.publishBranch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.pull",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.fetch",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.mergeBranchInto",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoUpstream",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.graph.renameBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/",
			"group": "1_gitlens_actions@6"
		  },
		  {
			"command": "gitlens.graph.deleteBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.graph.createBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/",
			"group": "1_gitlens_actions_@7"
		  },
		  {
			"command": "gitlens.graph.createTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/",
			"group": "1_gitlens_actions_@8"
		  },
		  {
			"command": "gitlens.graph.createWorktree",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/",
			"group": "1_gitlens_actions_@9"
		  },
		  {
			"command": "gitlens.graph.createPullRequest",
			"when": "gitlens:repos:withRemotes && gitlens:action:createPullRequest && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "1_gitlens_actions_@10"
		  },
		  {
			"command": "gitlens.graph.hideLocalBranch",
			"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/",
			"group": "8_gitlens_actions@11"
		  },
		  {
			"command": "gitlens.graph.hideRemote",
			"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/",
			"group": "8_gitlens_actions@10"
		  },
		  {
			"command": "gitlens.graph.hideRemoteBranch",
			"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/",
			"group": "8_gitlens_actions@11"
		  },
		  {
			"command": "gitlens.graph.hideRefGroup",
			"when": "webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/",
			"group": "8_gitlens_actions@12"
		  },
		  {
			"command": "gitlens.graph.openBranchOnRemote",
			"when": "gitlens:repos:withRemotes && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.graph.cherryPick",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.undoCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.revert",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.resetToCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.graph.resetToTip",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.graph.resetCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.graph.rebaseOntoCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions@6"
		  },
		  {
			"command": "gitlens.graph.switchToCommit",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.graph.createBranch",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions_1@1"
		  },
		  {
			"command": "gitlens.createPatch",
			"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "1_gitlens_actions_1@2"
		  },
		  {
			"command": "gitlens.copyPatchToClipboard",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "7_cutcopypaste@97"
		  },
		  {
			"command": "gitlens.createCloudPatch",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && webviewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "1_gitlens_actions_1@3"
		  },
		  {
			"command": "gitlens.graph.createTag",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens_actions_1@4"
		  },
		  {
			"submenu": "gitlens/graph/commit/changes",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:(commit|stash|wip)\\b/",
			"group": "2_gitlens_quickopen@1"
		  },
		  {
			"command": "gitlens.graph.showInDetailsView",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:(commit|stash|wip)\\b/",
			"group": "3_gitlens_explore@0"
		  },
		  {
			"command": "gitlens.graph.openSCM",
			"when": "!listMultiSelection && webviewItem == gitlens:wip",
			"group": "3_gitlens_explore@1"
		  },
		  {
			"command": "gitlens.graph.openCommitOnRemote",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && webviewItem =~ /gitlens:commit\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"command": "gitlens.graph.openCommitOnRemote.multi",
			"when": "listMultiSelection && gitlens:repos:withRemotes && webviewItems =~ /gitlens:commit\\b/",
			"group": "3_gitlens_explore@2"
		  },
		  {
			"submenu": "gitlens/share",
			"when": "webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "7_gitlens_a_share@1"
		  },
		  {
			"command": "gitlens.graph.copySha",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "7_gitlens_cutcopypaste@2"
		  },
		  {
			"command": "gitlens.graph.copyMessage",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "7_gitlens_cutcopypaste@3"
		  },
		  {
			"command": "gitlens.graph.stash.apply",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.stash.rename",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.stash.delete",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.stash.save",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:wip",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.copyWorkingChangesToWorktree",
			"when": "!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:wip",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.graph.switchToTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.deleteTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:tag",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.createBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.hideTag",
			"when": "webviewItem =~ /gitlens:tag\\b/",
			"group": "8_gitlens_actions@10"
		  },
		  {
			"command": "gitlens.graph.openPullRequestChanges",
			"when": "webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.openPullRequest",
			"when": "gitlens:action:openPullRequest > 1 && webviewItem =~ /gitlens:pullrequest\\b/",
			"group": "1_gitlens_actions@98"
		  },
		  {
			"command": "gitlens.graph.openPullRequestOnRemote",
			"when": "webviewItem =~ /gitlens:pullrequest\\b/",
			"group": "1_gitlens_actions@99"
		  },
		  {
			"command": "gitlens.graph.openPullRequestComparison",
			"when": "webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
			"group": "4_gitlens_compare@1"
		  },
		  {
			"command": "gitlens.graph.push",
			"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.graph.pull",
			"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.fetch",
			"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
			"when": "!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "3_gitlens_explore@11"
		  },
		  {
			"command": "gitlens.graph.compareWithUpstream",
			"when": "!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/",
			"group": "4_gitlens_compare@1"
		  },
		  {
			"command": "gitlens.graph.compareWithHead",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/",
			"group": "4_gitlens_compare@2"
		  },
		  {
			"command": "gitlens.graph.compareWithWorking",
			"when": "!listMultiSelection && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
			"group": "4_gitlens_compare@3"
		  },
		  {
			"command": "gitlens.graph.compareWithMergeBase",
			"when": "!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "4_gitlens_compare@4"
		  },
		  {
			"command": "gitlens.graph.compareAncestryWithWorking",
			"when": "!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
			"group": "4_gitlens_compare@5"
		  },
		  {
			"command": "gitlens.graph.addAuthor",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.graph.copy",
			"when": "webviewItem =~ /gitlens:(branch|commit|contributor|pullrequest|stash|tag)\\b/",
			"group": "7_gitlens_cutcopypaste@1"
		  },
		  {
			"submenu": "gitlens/graph/markers",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
			"group": "0_markers@0"
		  },
		  {
			"command": "gitlens.graph.columnAuthorOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/",
			"group": "1_columns@1"
		  },
		  {
			"command": "gitlens.graph.columnAuthorOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/",
			"group": "1_columns@1"
		  },
		  {
			"command": "gitlens.graph.columnRefOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/",
			"group": "1_columns@2"
		  },
		  {
			"command": "gitlens.graph.columnRefOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/",
			"group": "1_columns@2"
		  },
		  {
			"command": "gitlens.graph.columnChangesOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/",
			"group": "1_columns@3"
		  },
		  {
			"command": "gitlens.graph.columnChangesOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/",
			"group": "1_columns@3"
		  },
		  {
			"command": "gitlens.graph.columnMessageOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/",
			"group": "1_columns@4"
		  },
		  {
			"command": "gitlens.graph.columnMessageOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/",
			"group": "1_columns@4"
		  },
		  {
			"command": "gitlens.graph.columnDateTimeOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/",
			"group": "1_columns@5"
		  },
		  {
			"command": "gitlens.graph.columnDateTimeOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/",
			"group": "1_columns@5"
		  },
		  {
			"command": "gitlens.graph.columnGraphOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/",
			"group": "1_columns@6"
		  },
		  {
			"command": "gitlens.graph.columnGraphOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/",
			"group": "1_columns@6"
		  },
		  {
			"command": "gitlens.graph.columnShaOn",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/",
			"group": "1_columns@7"
		  },
		  {
			"command": "gitlens.graph.columnShaOff",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/",
			"group": "1_columns@7"
		  },
		  {
			"command": "gitlens.graph.columnGraphDefault",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/",
			"group": "2_columns@1"
		  },
		  {
			"command": "gitlens.graph.columnGraphCompact",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/",
			"group": "2_columns@1"
		  },
		  {
			"command": "gitlens.graph.resetColumnsDefault",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
			"group": "3_columns@1"
		  },
		  {
			"command": "gitlens.graph.resetColumnsCompact",
			"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
			"group": "3_columns@2"
		  }
		],
		"gitlens/commit/browse": [
		  {
			"command": "gitlens.views.browseRepoAtRevision",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.browseRepoAtRevisionInNewWindow",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.views.browseRepoBeforeRevision",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
			"group": "1_gitlens@4"
		  }
		],
		"gitlens/commit/copy": [
		  {
			"command": "gitlens.copyShaToClipboard",
			"when": "viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.copyMessageToClipboard",
			"when": "viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.copyRemoteBranchUrl",
			"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
			"group": "1_gitlens@4"
		  }
		],
		"gitlens/share": [
		  {
			"command": "gitlens.shareAsCloudPatch",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:((commit|stash|compare:results(?!:)|)\\b|file\\b(?=.*?\\b\\+committed\\b))/",
			"group": "1_a_gitlens@1"
		  },
		  {
			"command": "gitlens.graph.shareAsCloudPatch",
			"when": "!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && webviewItem =~ /gitlens:(commit|stash)\\b/",
			"group": "1_a_gitlens@1"
		  },
		  {
			"command": "gitlens.copyDeepLinkToBranch",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/",
			"group": "1_gitlens@50"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToBranch",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/",
			"group": "1_gitlens@50"
		  },
		  {
			"command": "gitlens.copyRemoteBranchUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/",
			"group": "2_gitlens@50"
		  },
		  {
			"command": "gitlens.graph.copyRemoteBranchUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/",
			"group": "2_gitlens@50"
		  },
		  {
			"command": "gitlens.copyDeepLinkToCommit",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/",
			"group": "1_gitlens@25"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToCommit",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:commit\\b/",
			"group": "1_gitlens@25"
		  },
		  {
			"command": "gitlens.copyDeepLinkToComparison",
			"when": "!listMultiSelection && viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/",
			"group": "1_gitlens@25"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFile",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes",
			"group": "1_gitlens@26"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFileAtRevision",
			"when": "!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes",
			"group": "1_gitlens@27"
		  },
		  {
			"command": "gitlens.copyDeepLinkToWorkspace",
			"when": "!listMultiSelection && viewItem =~ /gitlens:workspace\\b/",
			"group": "1_gitlens@25"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlWithoutRange",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlWithoutRange",
			"when": "!listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"when": "!listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.views.copyRemoteCommitUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/",
			"group": "2_gitlens@25"
		  },
		  {
			"command": "gitlens.views.copyRemoteCommitUrl.multi",
			"when": "listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/",
			"group": "2_gitlens@25"
		  },
		  {
			"command": "gitlens.graph.copyRemoteCommitUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && webviewItem =~ /gitlens:commit\\b/",
			"group": "2_gitlens@25"
		  },
		  {
			"command": "gitlens.graph.copyRemoteCommitUrl.multi",
			"when": "listMultiSelection && gitlens:repos:withRemotes && webviewItems =~ /gitlens:commit\\b/",
			"group": "2_gitlens@25"
		  },
		  {
			"command": "gitlens.copyDeepLinkToRepo",
			"when": "!listMultiSelection && viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/",
			"group": "1_gitlens@99"
		  },
		  {
			"command": "gitlens.copyDeepLinkToTag",
			"when": "!listMultiSelection && viewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens@50"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToTag",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:tag\\b/",
			"group": "1_gitlens@50"
		  },
		  {
			"command": "gitlens.graph.copyDeepLinkToRepo",
			"when": "!listMultiSelection && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/",
			"group": "1_gitlens@99"
		  },
		  {
			"command": "gitlens.copyRemoteRepositoryUrl",
			"when": "!listMultiSelection && gitlens:repos:withRemotes && viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/",
			"group": "2_gitlens@99"
		  }
		],
		"gitlens/commit/changes": [
		  {
			"command": "gitlens.views.openChangedFileDiffs",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsIndividually",
			"when": "config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithWorking",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
			"when": "config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens@4"
		  },
		  {
			"command": "gitlens.views.openChangedFiles",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.views.openChangedFileRevisions",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.views.openOnlyChangedFiles",
			"group": "2_gitlens@3"
		  }
		],
		"gitlens/graph/commit/changes": [
		  {
			"command": "gitlens.graph.openChangedFileDiffs",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsIndividually",
			"when": "config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithWorking",
			"when": "webviewItem != gitlens:wip",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
			"when": "config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled",
			"group": "1_gitlens@4"
		  },
		  {
			"command": "gitlens.graph.openChangedFiles",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.graph.openChangedFileRevisions",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.graph.openOnlyChangedFiles",
			"group": "2_gitlens@3"
		  }
		],
		"gitlens/commit/file/commit": [
		  {
			"command": "gitlens.showInDetailsView",
			"when": "view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.showInCommitGraph",
			"when": "view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/",
			"group": "navigation@2"
		  },
		  {
			"command": "gitlens.views.openCommitOnRemote",
			"when": "view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && gitlens:repos:withRemotes",
			"group": "navigation@3",
			"alt": "gitlens.copyRemoteCommitUrl"
		  },
		  {
			"command": "gitlens.revealCommitInView",
			"when": "view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "navigation@4"
		  },
		  {
			"command": "gitlens.views.undoCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@0"
		  },
		  {
			"command": "gitlens.views.push",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@1"
		  },
		  {
			"command": "gitlens.views.pushToCommit",
			"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/",
			"group": "1_gitlens_actions@2"
		  },
		  {
			"command": "gitlens.views.revert",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@3"
		  },
		  {
			"command": "gitlens.views.resetToCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_actions@4"
		  },
		  {
			"command": "gitlens.views.resetCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_actions@5"
		  },
		  {
			"command": "gitlens.views.rebaseOntoCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/",
			"group": "1_gitlens_actions@6"
		  },
		  {
			"command": "gitlens.views.switchToCommit",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_actions@7"
		  },
		  {
			"command": "gitlens.views.createBranch",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_secondary_actions@1"
		  },
		  {
			"command": "gitlens.createPatch",
			"when": "false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_secondary_actions@2"
		  },
		  {
			"command": "gitlens.createCloudPatch",
			"when": "!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_secondary_actions@3"
		  },
		  {
			"command": "gitlens.views.createTag",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
			"group": "1_gitlens_secondary_actions@4"
		  }
		],
		"gitlens/commit/file/changes": [
		  {
			"command": "gitlens.views.openPreviousChangesWithWorking",
			"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.openChangesWithWorking",
			"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithRevision",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"group": "1_gitlens@4"
		  },
		  {
			"command": "gitlens.externalDiff",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/",
			"group": "1_gitlens_@1"
		  },
		  {
			"command": "gitlens.views.highlightChanges",
			"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.views.highlightRevisionChanges",
			"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/",
			"group": "2_gitlens@2"
		  }
		],
		"gitlens/commit/file/history": [
		  {
			"command": "gitlens.openFileHistory",
			"when": "view != gitlens.views.fileHistory/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.showInTimeline",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.quickOpenFileHistory",
			"group": "1_gitlens_quick@1"
		  }
		],
		"gitlens/editor/annotations": [
		  {
			"command": "gitlens.clearFileAnnotations",
			"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.toggleFileBlame",
			"when": "gitlens:activeFileStatus =~ /blameable/ && !isInDiffEditor",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.toggleFileBlameInDiffLeft",
			"when": "gitlens:activeFileStatus =~ /blameable/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.toggleFileBlameInDiffRight",
			"when": "gitlens:activeFileStatus =~ /blameable/ && isInDiffRightEditor",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.toggleFileHeatmap",
			"when": "gitlens:activeFileStatus =~ /blameable/ && !isInDiffEditor",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.toggleFileHeatmapInDiffLeft",
			"when": "gitlens:activeFileStatus =~ /blameable/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.toggleFileHeatmapInDiffRight",
			"when": "gitlens:activeFileStatus =~ /blameable/ && isInDiffRightEditor",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.toggleFileChanges",
			"when": "gitlens:activeFileStatus =~ /blameable/ && !gitlens:hasVirtualFolders",
			"group": "2_gitlens@3"
		  },
		  {
			"command": "gitlens.showSettingsPage!file-annotations",
			"when": "gitlens:activeFileStatus =~ /blameable/",
			"group": "8_gitlens@1"
		  }
		],
		"gitlens/editor/context/changes": [
		  {
			"command": "gitlens.diffLineWithPrevious",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffLineWithWorking",
			"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithPrevious",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.diffWithWorking",
			"when": "resourceScheme == gitlens",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithRevision",
			"group": "2_gitlens@3"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"group": "2_gitlens@4"
		  },
		  {
			"command": "gitlens.showQuickCommitFileDetails",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.showLineCommitInView",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.showCommitsInView",
			"when": "editorTextFocus && editorHasSelection",
			"group": "3_gitlens@2"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetails",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor",
			"group": "3_gitlens_1@1"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor",
			"group": "3_gitlens_1@1"
		  },
		  {
			"command": "gitlens.showQuickRevisionDetailsInDiffRight",
			"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor",
			"group": "3_gitlens_1@1"
		  }
		],
		"gitlens/editor/context/openOn": [
		  {
			"command": "gitlens.openFileOnRemote",
			"group": "1_gitlens@2",
			"alt": "gitlens.copyRemoteFileUrlToClipboard"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"group": "1_gitlens@3",
			"alt": "gitlens.copyRemoteFileUrlFrom"
		  },
		  {
			"command": "gitlens.openCommitOnRemote",
			"group": "1_gitlens_commit@1",
			"alt": "gitlens.copyRemoteCommitUrl"
		  }
		],
		"gitlens/editor/changes": [
		  {
			"command": "gitlens.diffWithPrevious",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffWithWorking",
			"when": "resourceScheme == gitlens",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithRevision",
			"group": "1_gitlens@3"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"group": "1_gitlens@4"
		  }
		],
		"gitlens/editor/history": [
		  {
			"command": "gitlens.openFileHistory",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.showInTimeline",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.quickOpenFileHistory",
			"group": "1_gitlens_quick@1"
		  }
		],
		"gitlens/editor/openOn": [
		  {
			"command": "gitlens.openFileOnRemote",
			"group": "1_gitlens@1",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"group": "1_gitlens@2",
			"alt": "gitlens.copyRemoteFileUrlFrom"
		  }
		],
		"gitlens/editor/lineNumber/context/changes": [
		  {
			"command": "gitlens.diffLineWithPrevious",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffLineWithWorking",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.showQuickCommitFileDetails",
			"group": "3_gitlens@1"
		  },
		  {
			"command": "gitlens.showLineCommitInView",
			"group": "3_gitlens@2"
		  }
		],
		"gitlens/editor/lineNumber/context/openOn": [
		  {
			"command": "gitlens.openFileOnRemote",
			"group": "1_gitlens@2",
			"alt": "gitlens.copyRemoteFileUrlToClipboard"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"group": "1_gitlens@3",
			"alt": "gitlens.copyRemoteFileUrlFrom"
		  },
		  {
			"command": "gitlens.openCommitOnRemote",
			"group": "1_gitlens_commit@1",
			"alt": "gitlens.copyRemoteCommitUrl"
		  }
		],
		"gitlens/editor/lineNumber/context/share": [
		  {
			"command": "gitlens.copyRemoteFileUrlToClipboard",
			"group": "1_gitlens_remote@2"
		  },
		  {
			"command": "gitlens.copyRemoteFileUrlFrom",
			"group": "1_gitlens_remote@3"
		  },
		  {
			"command": "gitlens.copyRemoteCommitUrl",
			"group": "1_gitlens_remote_commit@1"
		  },
		  {
			"command": "gitlens.copyDeepLinkToLines",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFile",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.copyDeepLinkToFileAtRevision",
			"when": "gitlens:activeFileStatus =~ /blameable/",
			"group": "1_gitlens@3"
		  }
		],
		"gitlens/explorer/changes": [
		  {
			"command": "gitlens.diffWithPrevious",
			"when": "!explorerResourceIsFolder",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffFolderWithRevision",
			"when": "!gitlens:hasVirtualFolders && explorerResourceIsFolder",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffFolderWithRevisionFrom",
			"when": "!gitlens:hasVirtualFolders && explorerResourceIsFolder",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithRevision",
			"when": "!explorerResourceIsFolder",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"when": "!explorerResourceIsFolder",
			"group": "1_gitlens@3"
		  }
		],
		"gitlens/explorer/history": [
		  {
			"command": "gitlens.openFileHistory",
			"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.openFolderHistory",
			"when": "explorerResourceIsFolder && gitlens:enabled",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.showInTimeline",
			"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.quickOpenFileHistory",
			"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled",
			"group": "1_gitlens_quick@1"
		  }
		],
		"gitlens/explorer/openOn": [
		  {
			"command": "gitlens.openFileOnRemote",
			"group": "1_gitlens@1",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"group": "1_gitlens@2",
			"alt": "gitlens.copyRemoteFileUrlFrom"
		  }
		],
		"gitlens/graph/configuration": [
		  {
			"command": "gitlens.graph.switchToEditorLayout",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.graph.switchToPanelLayout",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.showSettingsPage!commit-graph",
			"group": "9_gitlens@1"
		  }
		],
		"gitlens/graph/markers": [
		  {
			"command": "gitlens.graph.scrollMarkerLocalBranchOn",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/",
			"group": "4_settings@1"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerLocalBranchOff",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/",
			"group": "4_settings@1"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerRemoteBranchOn",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/",
			"group": "4_settings@2"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerRemoteBranchOff",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/",
			"group": "4_settings@2"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerStashOn",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/",
			"group": "4_settings@3"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerStashOff",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/",
			"group": "4_settings@3"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerTagOn",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/",
			"group": "4_settings@4"
		  },
		  {
			"command": "gitlens.graph.scrollMarkerTagOff",
			"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/",
			"group": "4_settings@4"
		  }
		],
		"gitlens/scm/resourceGroup/changes": [
		  {
			"command": "gitlens.externalDiffAll",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders",
			"group": "2_gitlens@1"
		  },
		  {
			"command": "gitlens.diffDirectoryWithHead",
			"when": "!gitlens:hasVirtualFolders",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.diffDirectory",
			"when": "!gitlens:hasVirtualFolders",
			"group": "2_gitlens@3"
		  }
		],
		"gitlens/scm/resourceFolder/changes": [
		  {
			"command": "gitlens.diffFolderWithRevision",
			"when": "!gitlens:hasVirtualFolders",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffFolderWithRevisionFrom",
			"when": "!gitlens:hasVirtualFolders",
			"group": "1_gitlens@2"
		  }
		],
		"gitlens/scm/resourceState/changes": [
		  {
			"command": "gitlens.diffWithRevision",
			"when": "!gitlens:hasVirtualFolders",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.diffWithRevisionFrom",
			"when": "!gitlens:hasVirtualFolders",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.externalDiff",
			"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders",
			"group": "2_gitlens@1"
		  }
		],
		"gitlens/scm/resourceState/history": [
		  {
			"command": "gitlens.openFileHistory",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.showInTimeline",
			"group": "1_gitlens@2"
		  },
		  {
			"command": "gitlens.quickOpenFileHistory",
			"group": "1_gitlens_quick@1"
		  }
		],
		"gitlens/scm/resourceState/openOn": [
		  {
			"command": "gitlens.openFileOnRemote",
			"group": "1_gitlens@1",
			"alt": "gitlens.copyRemoteFileUrlWithoutRange"
		  },
		  {
			"command": "gitlens.openFileOnRemoteFrom",
			"group": "1_gitlens@2",
			"alt": "gitlens.copyRemoteFileUrlFrom"
		  }
		],
		"gitlens/view/repositories/sections": [
		  {
			"command": "gitlens.views.repositories.setShowBranchComparisonOn",
			"when": "!config.gitlens.views.repositories.showBranchComparison",
			"group": "1_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchComparisonOff",
			"when": "config.gitlens.views.repositories.showBranchComparison",
			"group": "1_gitlens@0"
		  },
		  {
			"command": "gitlens.views.repositories.setShowUpstreamStatusOn",
			"when": "!config.gitlens.views.repositories.showUpstreamStatus",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.repositories.setShowUpstreamStatusOff",
			"when": "config.gitlens.views.repositories.showUpstreamStatus",
			"group": "1_gitlens@1"
		  },
		  {
			"command": "gitlens.views.repositories.setShowCommitsOn",
			"when": "!config.gitlens.views.repositories.showCommits",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.views.repositories.setShowCommitsOff",
			"when": "config.gitlens.views.repositories.showCommits",
			"group": "2_gitlens@2"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchesOn",
			"when": "!config.gitlens.views.repositories.showBranches",
			"group": "2_gitlens@3"
		  },
		  {
			"command": "gitlens.views.repositories.setShowBranchesOff",
			"when": "config.gitlens.views.repositories.showBranches",
			"group": "2_gitlens@3"
		  },
		  {
			"command": "gitlens.views.repositories.setShowRemotesOn",
			"when": "!config.gitlens.views.repositories.showRemotes",
			"group": "2_gitlens@4"
		  },
		  {
			"command": "gitlens.views.repositories.setShowRemotesOff",
			"when": "config.gitlens.views.repositories.showRemotes",
			"group": "2_gitlens@4"
		  },
		  {
			"command": "gitlens.views.repositories.setShowStashesOn",
			"when": "!config.gitlens.views.repositories.showStashes",
			"group": "2_gitlens@5"
		  },
		  {
			"command": "gitlens.views.repositories.setShowStashesOff",
			"when": "config.gitlens.views.repositories.showStashes",
			"group": "2_gitlens@5"
		  },
		  {
			"command": "gitlens.views.repositories.setShowTagsOn",
			"when": "!config.gitlens.views.repositories.showTags",
			"group": "2_gitlens@6"
		  },
		  {
			"command": "gitlens.views.repositories.setShowTagsOff",
			"when": "config.gitlens.views.repositories.showTags",
			"group": "2_gitlens@6"
		  },
		  {
			"command": "gitlens.views.repositories.setShowWorktreesOn",
			"when": "!config.gitlens.views.repositories.showWorktrees",
			"group": "2_gitlens@7"
		  },
		  {
			"command": "gitlens.views.repositories.setShowWorktreesOff",
			"when": "config.gitlens.views.repositories.showWorktrees",
			"group": "2_gitlens@7"
		  },
		  {
			"command": "gitlens.views.repositories.setShowContributorsOn",
			"when": "!config.gitlens.views.repositories.showContributors",
			"group": "2_gitlens@8"
		  },
		  {
			"command": "gitlens.views.repositories.setShowContributorsOff",
			"when": "config.gitlens.views.repositories.showContributors",
			"group": "2_gitlens@8"
		  }
		],
		"gitlens/view/searchAndCompare/new": [
		  {
			"command": "gitlens.views.searchAndCompare.searchCommits",
			"when": "view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "navigation@10"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.selectForCompare",
			"when": "!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.searchAndCompare\\b/",
			"group": "navigation@11"
		  }
		],
		"gitlens/comparison/results/files/filter": [
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOff",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/",
			"group": "navigation_1@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/",
			"group": "navigation_1@2"
		  }
		],
		"gitlens/comparison/results/files/filter/inline": [
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOff",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/",
			"group": "navigation_1@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/",
			"group": "navigation_1@2"
		  }
		],
		"gitlens/comparison/results/files/filtered": [
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOff",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/",
			"group": "navigation_1@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/",
			"group": "navigation_1@2"
		  }
		],
		"gitlens/comparison/results/files/filtered/inline": [
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOff",
			"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
			"group": "navigation@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnLeft",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/",
			"group": "navigation_1@1"
		  },
		  {
			"command": "gitlens.views.searchAndCompare.setFilesFilterOnRight",
			"when1": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/",
			"group": "navigation_1@2"
		  }
		]
	  },
		"submenus": [
		{
			"id": "gitlens/commit/browse",
			"label": "浏览"
		},
		{
			"id": "gitlens/commit/copy",
			"label": "复制为"
		},
		{
			"id": "gitlens/commit/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/graph/commit/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/commit/file/commit",
			"label": "提交"
		},
		{
			"id": "gitlens/commit/file/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/commit/file/history",
			"label": "文件历史"
		},
		{
			"id": "gitlens/editor/annotations",
			"label": "文件注释",
			"icon": "$(gitlens-gitlens)"
		},
		{
			"id": "gitlens/editor/context/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/editor/context/openOn",
			"label": "在远程打开（Web）"
		},
		{
			"id": "gitlens/editor/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/editor/history",
			"label": "文件历史"
		},
		{
			"id": "gitlens/editor/openOn",
			"label": "在远程打开（Web）"
		},
		{
			"id": "gitlens/editor/lineNumber/context/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/editor/lineNumber/context/openOn",
			"label": "在远程打开（Web）"
		},
		{
			"id": "gitlens/editor/lineNumber/context/share",
			"label": "分享"
		},
		{
			"id": "gitlens/explorer/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/explorer/history",
			"label": "文件历史"
		},
		{
			"id": "gitlens/explorer/openOn",
			"label": "在远程打开（Web）"
		},
		{
			"id": "gitlens/graph/configuration",
			"label": "提交图设置",
			"icon": "$(gear)"
		},
		{
			"id": "gitlens/graph/markers",
			"label": "滚动标记"
		},
		{
			"id": "gitlens/scm/resourceGroup/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/scm/resourceFolder/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/scm/resourceState/changes",
			"label": "打开更改"
		},
		{
			"id": "gitlens/scm/resourceState/history",
			"label": "文件历史"
		},
		{
			"id": "gitlens/scm/resourceState/openOn",
			"label": "在远程打开（Web）"
		},
		{
			"id": "gitlens/share",
			"label": "分享"
		},
		{
			"id": "gitlens/view/repositories/sections",
			"label": "部分"
		},
		{
			"id": "gitlens/view/searchAndCompare/new",
			"label": "新建搜索或比较",
			"icon": "$(add)"
		},
		{
			"id": "gitlens/comparison/results/files/filter",
			"label": "筛选文件",
			"icon": "$(filter)"
		},
		{
			"id": "gitlens/comparison/results/files/filter/inline",
			"label": "筛选文件",
			"icon": "$(filter)"
		},
		{
			"id": "gitlens/comparison/results/files/filtered",
			"label": "筛选文件",
			"icon": "$(filter-filled)"
		},
		{
			"id": "gitlens/comparison/results/files/filtered/inline",
			"label": "筛选文件",
			"icon": "$(filter-filled)"
		}
		],
	  "keybindings": [
		{
		  "command": "gitlens.key.left",
		  "key": "left",
		  "when": "gitlens:key:left"
		},
		{
		  "command": "gitlens.key.alt+left",
		  "key": "alt+left",
		  "when": "gitlens:key:alt+left"
		},
		{
		  "command": "gitlens.key.ctrl+left",
		  "key": "ctrl+left",
		  "mac": "cmd+left",
		  "when": "gitlens:key:ctrl+left"
		},
		{
		  "command": "gitlens.key.right",
		  "key": "right",
		  "when": "gitlens:key:right"
		},
		{
		  "command": "gitlens.key.alt+right",
		  "key": "alt+right",
		  "when": "gitlens:key:alt+right"
		},
		{
		  "command": "gitlens.key.ctrl+right",
		  "key": "ctrl+right",
		  "mac": "cmd+right",
		  "when": "gitlens:key:ctrl+right"
		},
		{
		  "command": "gitlens.key.alt+,",
		  "key": "alt+,",
		  "when": "gitlens:key:,"
		},
		{
		  "command": "gitlens.key.alt+.",
		  "key": "alt+.",
		  "when": "gitlens:key:."
		},
		{
		  "command": "gitlens.key.alt+enter",
		  "key": "alt+enter",
		  "when": "gitlens:key:alt+enter"
		},
		{
		  "command": "gitlens.key.ctrl+enter",
		  "key": "ctrl+enter",
		  "when": "gitlens:key:ctrl+enter"
		},
		{
		  "command": "gitlens.key.escape",
		  "key": "escape",
		  "when": "gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"
		},
		{
		  "command": "gitlens.gitCommands",
		  "key": "alt+/",
		  "when": "config.gitlens.keymap == alternate && !gitlens:disabled"
		},
		{
		  "command": "gitlens.gitCommands",
		  "key": "ctrl+shift+g /",
		  "mac": "cmd+alt+g /",
		  "when": "config.gitlens.keymap == chorded && !gitlens:disabled"
		},
		{
		  "command": "gitlens.toggleFileBlame",
		  "key": "alt+b",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
		},
		{
		  "command": "gitlens.toggleFileBlame",
		  "key": "ctrl+shift+g b",
		  "mac": "cmd+alt+g b",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
		},
		{
		  "command": "gitlens.toggleCodeLens",
		  "key": "shift+alt+b",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"
		},
		{
		  "command": "gitlens.toggleCodeLens",
		  "key": "ctrl+shift+g shift+b",
		  "mac": "cmd+alt+g shift+b",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"
		},
		{
		  "command": "gitlens.showQuickFileHistory",
		  "key": "alt+h",
		  "when": "config.gitlens.keymap == alternate && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickFileHistory",
		  "key": "ctrl+shift+g h",
		  "mac": "cmd+alt+g h",
		  "when": "config.gitlens.keymap == chorded && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickRepoHistory",
		  "key": "shift+alt+h",
		  "when": "config.gitlens.keymap == alternate && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickRepoHistory",
		  "key": "ctrl+shift+g shift+h",
		  "mac": "cmd+alt+g shift+h",
		  "when": "config.gitlens.keymap == chorded && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickRepoStatus",
		  "key": "alt+s",
		  "when": "config.gitlens.keymap == alternate && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickRepoStatus",
		  "key": "ctrl+shift+g s",
		  "mac": "cmd+alt+g s",
		  "when": "config.gitlens.keymap == chorded && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickCommitFileDetails",
		  "key": "alt+c",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"
		},
		{
		  "command": "gitlens.showQuickCommitFileDetails",
		  "key": "ctrl+shift+g c",
		  "mac": "cmd+alt+g c",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled"
		},
		{
		  "command": "gitlens.diffWithPrevious",
		  "key": "alt+,",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
		},
		{
		  "command": "gitlens.diffWithPrevious",
		  "key": "ctrl+shift+g ,",
		  "mac": "cmd+alt+g ,",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffLeft",
		  "key": "alt+,",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffLeft",
		  "key": "ctrl+shift+g ,",
		  "mac": "cmd+alt+g ,",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffRight",
		  "key": "alt+,",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithPreviousInDiffRight",
		  "key": "ctrl+shift+g ,",
		  "mac": "cmd+alt+g ,",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithNext",
		  "key": "alt+.",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"
		},
		{
		  "command": "gitlens.diffWithNext",
		  "key": "ctrl+shift+g .",
		  "mac": "cmd+alt+g .",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"
		},
		{
		  "command": "gitlens.diffWithNextInDiffLeft",
		  "key": "alt+.",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithNextInDiffLeft",
		  "key": "ctrl+shift+g .",
		  "mac": "cmd+alt+g .",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithNextInDiffRight",
		  "key": "alt+.",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithNextInDiffRight",
		  "key": "ctrl+shift+g .",
		  "mac": "cmd+alt+g .",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"
		},
		{
		  "command": "gitlens.diffWithWorking",
		  "key": "shift+alt+.",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		},
		{
		  "command": "gitlens.diffWithWorking",
		  "key": "ctrl+shift+g shift+.",
		  "mac": "cmd+alt+g shift+.",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
		},
		{
		  "command": "gitlens.diffLineWithPrevious",
		  "key": "shift+alt+,",
		  "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
		},
		{
		  "command": "gitlens.diffLineWithPrevious",
		  "key": "ctrl+shift+g shift+,",
		  "mac": "cmd+alt+g shift+,",
		  "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
		},
		{
		  "command": "workbench.view.scm",
		  "key": "ctrl+shift+g g",
		  "mac": "ctrl+shift+g",
		  "when": "config.gitlens.keymap == chorded && !gitlens:disabled"
		},
		{
		  "command": "gitlens.views.branches.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"
		},
		{
		  "command": "gitlens.views.commits.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"
		},
		{
		  "command": "gitlens.views.contributors.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"
		},
		{
		  "command": "gitlens.views.drafts.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.drafts/"
		},
		{
		  "command": "gitlens.views.fileHistory.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
		},
		{
		  "command": "gitlens.views.lineHistory.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
		},
		{
		  "command": "gitlens.views.pullRequest.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.pullRequest/"
		},
		{
		  "command": "gitlens.views.remotes.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"
		},
		{
		  "command": "gitlens.views.repositories.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
		},
		{
		  "command": "gitlens.views.stashes.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"
		},
		{
		  "command": "gitlens.views.searchAndCompare.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"
		},
		{
		  "command": "gitlens.views.tags.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"
		},
		{
		  "command": "gitlens.views.worktrees.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.worktrees/"
		},
		{
		  "command": "gitlens.views.workspaces.copy",
		  "key": "ctrl+c",
		  "mac": "cmd+c",
		  "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.workspaces/"
		}
	  ],
	  "customEditors": [
		{
		  "viewType": "gitlens.rebase",
		  "displayName": "交互式变基编辑器",
		  "selector": [
			{
			  "filenamePattern": "git-rebase-todo"
			}
		  ]
		}
	  ],
	  "resourceLabelFormatters": [
		{
		  "scheme": "gitlens",
		  "authority": "*",
		  "formatting": {
			"label": "${path} (${query.ref})",
			"normalizeDriveLetter": true,
			"tildify": true,
			"workspaceSuffix": "GitLens"
		  }
		}
	  ],
	  "viewsContainers": {
		"activitybar": [
		  {
			"id": "gitlens",
			"title": "XUXU Git",
			"icon": "$(gitlens-gitlens)"
		  },
		  {
			"id": "gitlensInspect",
			"title": "XUXU Git 审查",
			"icon": "$(gitlens-gitlens-inspect)"
		  },
		  {
			"id": "gitlensPatch",
			"title": "XUXU Git 补丁",
			"icon": "$(gitlens-cloud-patch)"
		  }
		],
		"panel": [
		  {
			"id": "gitlensPanel",
			"title": "XUXU Git",
			"icon": "$(gitlens-graph)"
		  }
		]
	  },
		"viewsWelcome": [
		{
			"view": "gitlens.views.searchAndCompare",
			"contents": "通过[信息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[文件](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)或[更改](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
			"when": "!gitlens:hasVirtualFolders"
		},
		{
			"view": "gitlens.views.searchAndCompare",
			"contents": "通过[信息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)或[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
			"when": "gitlens:hasVirtualFolders"
		},
		{
			"view": "gitlens.views.searchAndCompare",
			"contents": "比较一个与另一个\n\n[比较引用...](command:gitlens.views.searchAndCompare.selectForCompare)",
			"when": "!gitlens:hasVirtualFolders"
		},
		{
			"view": "gitlens.views.drafts",
			"contents": "云补丁 预览 — 轻松且安全地与您的团队成员或其他开发人员分享代码，可随时访问，简化您的工作流程，实现更好的协作。"
		},
		{
			"view": "gitlens.views.drafts",
			"contents": "[创建云补丁](command:gitlens.views.drafts.create)",
			"when": "gitlens:plus"
		},
		{
			"view": "gitlens.views.drafts",
			"contents": "[开始专业试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\n开始免费 7 天的专业试用，体验云补丁和其他专业功能，或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D)。",
			"when": "!gitlens:plus"
		},
		{
			"view": "gitlens.views.drafts",
			"contents": "预览功能 ☁️ — 需要一个帐户，并且将来可能需要付费计划。"
		},
		{
			"view": "gitlens.views.workspaces",
			"contents": "工作区 预览 — 组和管理多个仓库，可随时访问，简化您的工作流程。\n\n创建仅供自己使用或分享（即将在 GitLens 中推出）与您的团队快速入门和更好的协作的工作区。"
		},
		{
			"view": "gitlens.views.workspaces",
			"contents": "[创建云工作区](command:gitlens.views.workspaces.create)",
			"when": "gitlens:plus"
		},
		{
			"view": "gitlens.views.workspaces",
			"contents": "[开始专业试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\n开始免费 7 天的专业试用，体验 GitKraken (GK) 工作区和其他专业功能，或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D)。",
			"when": "!gitlens:plus"
		},
		{
			"view": "gitlens.views.workspaces",
			"contents": "预览功能 ☁️ — 需要一个帐户，并且将来可能需要付费计划。"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[工作树](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view%e2%9c%a8) ᴾᴿᴼ — 通过允许您同时在多个分支上工作，减少上下文切换。"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[创建工作树...](command:gitlens.views.createWorktree)",
			"when": "!gitlens:plus:required"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[重新发送验证邮件](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\n您必须验证您的电子邮件才能继续或[重新检查状态](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D)。",
			"when": "gitlens:plus:state == -1"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[继续](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n继续可以让您预览工作树和其他本地专业功能 3 天。[开始 7 天的专业试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D)以完全访问专业功能。",
			"when": "gitlens:plus:required && gitlens:plus:state == 0"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[开始专业试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\n开始免费 7 天的专业试用，体验工作树和其他专业功能，或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D)。",
			"when": "gitlens:plus:required && gitlens:plus:state == 2"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[升级到专业版](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)\n\n您的专业试用期已结束。请升级以完全访问工作树和其他专业功能。\n特别优惠：第一席专业版优惠 50% — 每月仅 $4！",
			"when": "gitlens:plus:required && gitlens:plus:state == 4"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "[继续](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n重新激活您的专业试用，体验工作树和所有新的专业功能 — 再免费 7 天！",
			"when": "gitlens:plus:required && gitlens:plus:state == 5"
		},
		{
			"view": "gitlens.views.worktrees",
			"contents": "专业功能 — 需要付费计划才能在私有托管仓库使用。"
		}
		],
	  "views": {
		"gitlens": [
		  {
			"type": "webview",
			"id": "gitlens.views.home",
			"name": "主页",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-gitlens)",
			"initialSize": 6,
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.drafts",
			"name": "云补丁",
			"when": "!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-cloud-patch)",
			"initialSize": 2,
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.workspaces",
			"name": "XUXU Git 工作空间",
			"when": "!gitlens:untrusted && !gitlens:hasVirtualFolders",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-workspaces-view)",
			"initialSize": 2,
			"visibility": "visible"
		  },
		  {
			"type": "webview",
			"id": "gitlens.views.account",
			"name": "XUXU Git 账户",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-gitlens)",
			"initialSize": 1,
			"visibility": "collapsed"
		  }
		],
		"gitlensInspect": [
		  {
			"type": "webview",
			"id": "gitlens.views.commitDetails",
			"name": "审查",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-commit-view)",
			"initialSize": 6,
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.pullRequest",
			"name": "拉取请求",
			"when": "!gitlens:disabled && gitlens:views:pullRequest:visible",
			"contextualTitle": "GitLens",
			"icon": "$(git-pull-request)",
			"initialSize": 1,
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.lineHistory",
			"name": "行历史",
			"when": "!gitlens:disabled && !gitlens:hasVirtualFolders",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-history-view)",
			"initialSize": 1,
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.fileHistory",
			"name": "文件历史",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-history-view)",
			"initialSize": 2,
			"visibility": "visible"
		  },
		  {
			"type": "webview",
			"id": "gitlens.views.timeline",
			"name": "可视化文件历史",
			"when": "!gitlens:disabled && gitlens:plus:enabled",
			"contextualTitle": "GitLens",
			"icon": "$(graph-scatter)",
			"initialSize": 1,
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.searchAndCompare",
			"name": "搜索与对比",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-search-view)",
			"initialSize": 2,
			"visibility": "visible"
		  }
		],
		"gitlensPanel": [
		  {
			"type": "webview",
			"id": "gitlens.views.graph",
			"name": "图表",
			"when": "!gitlens:disabled && gitlens:plus:enabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-graph)",
			"initialSize": 4,
			"visibility": "visible"
		  },
		  {
			"type": "webview",
			"id": "gitlens.views.graphDetails",
			"name": "图表详情",
			"when": "!gitlens:disabled && gitlens:plus:enabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-commit-view)",
			"initialSize": 1,
			"visibility": "visible"
		  }
		],
		"gitlensPatch": [
		  {
			"type": "webview",
			"id": "gitlens.views.patchDetails",
			"name": "补丁",
			"when": "!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-cloud-patch)",
			"initialSize": 24
		  }
		],
		"scm": [
		  {
			"id": "gitlens.views.repositories",
			"name": "仓库",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-repositories-view)",
			"visibility": "hidden"
		  },
		  {
			"id": "gitlens.views.commits",
			"name": "提交",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-commits-view)",
			"visibility": "visible"
		  },
		  {
			"id": "gitlens.views.branches",
			"name": "分支",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-branches-view)",
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.remotes",
			"name": "远程",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-remotes-view)",
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.stashes",
			"name": "暂存",
			"when": "!gitlens:disabled && !gitlens:hasVirtualFolders",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-stashes-view)",
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.tags",
			"name": "标签",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-tags-view)",
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.worktrees",
			"name": "工作树",
			"when": "!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-worktrees-view)",
			"visibility": "collapsed"
		  },
		  {
			"id": "gitlens.views.contributors",
			"name": "贡献者",
			"when": "!gitlens:disabled",
			"contextualTitle": "GitLens",
			"icon": "$(gitlens-contributors-view)",
			"visibility": "collapsed"
		  }
		]
	  },
		"walkthroughs": [
		{
			"id": "welcome",
			"title": "开始使用 GitLens",
			"description": "发现和个性化增强 Git 体验的功能",
			"steps": [
			{
				"id": "get-started",
				"title": "欢迎 & 概述",
				"description": "快速[开始](command:gitlens.showWelcomePage \"打开 GitLens 欢迎页面\")并发现许多强大的 GitLens 功能，或观看我们的[教程视频](https://www.youtube.com/watch?v=UQPb73Zz9qk \"观看入门教程视频\")。\n\n**侧边栏 & 面板概述**\n\n$(gitlens-gitlens-inspect)  **GitLens 检查** — 查看代码历史的 X 光。提供专注于您当前工作的上下文洞察和详细信息。\n\n[打开 GitLens 检查](command:workbench.view.extension.gitlensInspect)\n\n$(gitlens-gitlens)  **GitLens** — 快速访问许多 GitLens 功能。也是我们团队和协作服务的主站。\n\n[打开 GitLens](command:workbench.view.extension.gitlens)\n\n$(source-control) **源代码控制** — 具有额外功能，用于处理、探索和管理您的代码库。\n\n[打开源代码控制](command:workbench.view.scm)\n\n$(layout-panel)  **（底部）面板** — 访问强大的提交图和其专用的详细视图。\n\n[打开提交图](command:gitlens.showGraphView)\n💡 虽然我们的视图是为了集中和提高生产力而安排的，但您可以轻松拖动它们以满足您的需求。使用[重置视图布局](command:workbench.action.quickOpen?%22>GitLens%3A%20Reset%20Views%20Layout%22)命令快速恢复到默认布局。\n💡 **想要更多控制？** 使用交互式[GitLens 设置](command:gitlens.showSettingsPage \"打开 GitLens 设置\")编辑器来定制 GitLens 以满足您的需求。",
				"media": {
				"markdown": "walkthroughs/welcome/get-started.md"
				}
			},
			{
				"id": "core-features",
				"title": "发现核心功能",
				"description": "**内联责任**和状态栏责任提供关于行更改的历史上下文。\n💡 悬停在注释上以显示丰富的详细信息和操作。\n**Git CodeLens** 在每个文件顶部和每个代码块的开头添加上下文和可操作的作者信息。\n💡 使用[切换行责任](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20Line%20Blame%22)和[切换 Git CodeLens](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20Git%20CodeLens%22)命令。\n**文件注释**，增强编辑器的视觉指示器，提供作者、最近更改或热图的洞察。注释可以按需切换单个文件或整体切换。\n💡 使用[切换文件责任](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Blame%22)、[切换文件更改](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Changes%22)和[切换文件热图](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Heatmap%22)命令在活动文件上切换。\n\n**导航修订历史**只需点击文件顶部的一个按钮，并随时间比较更改。",
				"media": {
				"altText": "内联责任、代码透镜、文件注释和修订导航的插图",
				"svg": "walkthroughs/welcome/core-features.svg"
				}
			},
			{
				"id": "pro-features",
				"title": "使用 Pro 功能提升",
				"description": "解锁 GitLens 的全部功能，享受[Pro 功能](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links)并访问完整的[GitKraken DevEx 平台](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links)。\n\n[开始 Pro 试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22walkthrough%22%7D)\n\n已有账户？[登录](command:gitlens.plus.login?%7B%22source%22%3A%22walkthrough%22%7D)\n\n**Pro 功能**\n$(gitlens-graph)  [提交图](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化您的代码库并跟踪所有进行中的工作\n$(rocket)  [启动台](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — 保持专注并确保您的团队不受阻碍\n$(gitlens-code-suggestion)  [代码建议](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 让您的代码审查摆脱不必要的限制\n$(gitlens-cloud-patch)  [云补丁](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 轻松安全地与您的团队成员分享代码\n$(gitlens-worktrees-view)  **工作树** — 同时处理多个分支\n$(gitlens-workspaces-view)  **工作区** — 将多个代码库分组和管理在一起\n$(graph-scatter)  [可视化文件历史](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化文件的演变并快速识别最重要的更改是何时由谁进行的",
				"media": {
				"markdown": "walkthroughs/welcome/pro-features.md"
				},
				"when": "gitlens:plus:state >= 0 && gitlens:plus:state <= 2"
			},
			{
				"id": "pro-trial",
				"title": "开始使用Pro",
				"description": "在您的试用期间，您可以访问所有[Pro功能](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links)和完整的[GitKraken DevEx平台](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links)。请充分利用这些强大的功能。\n\n[升级到Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22walkthrough%22%7D)\n\n💡特别优惠：第一个Pro席位享受50%折扣—每月仅$4！\n**Pro功能**\n$(gitlens-graph)  [提交图](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化您的存储库并跟踪所有进行中的工作\n$(rocket)  [启动台](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — 保持专注并确保您的团队不受阻碍\n$(gitlens-code-suggestion)  [代码建议](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 让您的代码评审摆脱不必要的限制\n$(gitlens-cloud-patch)  [云补丁](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 轻松且安全地与您的团队共享代码\n$(gitlens-worktrees-view)  **工作树** — 同时处理多个分支\n$(gitlens-workspaces-view)  **工作区** — 将多个存储库分组并管理\n$(graph-scatter)  [可视化文件历史](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化文件的演变并快速识别最具影响力的更改是何时由谁做出的",
				"media": {
				"markdown": "walkthroughs/welcome/pro-trial.md"
				},
				"when": "gitlens:plus:state == 3"
			},
			{
				"id": "pro-upgrade",
				"title": "升级到Pro",
				"description": "您的Pro试用期已结束。请升级以完全访问所有[Pro功能](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links)和完整的[GitKraken DevEx平台](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links)。\n\n[升级到Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22walkthrough%22%7D)\n\n💡特别优惠：第一个Pro席位享受50%折扣—每月仅$4！\n**Pro功能**\n$(gitlens-graph)  [提交图](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化您的存储库并跟踪所有进行中的工作\n$(rocket)  [启动台](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — 保持专注并确保您的团队不受阻碍\n$(gitlens-code-suggestion)  [代码建议](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 让您的代码评审摆脱不必要的限制\n$(gitlens-cloud-patch)  [云补丁](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 轻松且安全地与您的团队共享代码\n$(gitlens-worktrees-view)  **工作树** — 同时处理多个分支\n$(gitlens-workspaces-view)  **工作区** — 将多个存储库分组并管理\n$(graph-scatter)  [可视化文件历史](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化文件的演变并快速识别最具影响力的更改是何时由谁做出的",
				"media": {
				"markdown": "walkthroughs/welcome/pro-upgrade.md"
				},
				"when": "gitlens:plus:state == 4"
			},
			{
				"id": "pro-reactivate",
				"title": "重新激活Pro增强",
				"description": "重新激活您的Pro试用，体验所有新的[Pro功能](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links)和完整的[GitKraken DevEx平台](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links) — 再免费试用7天！\n\n[重新激活Pro试用](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22walkthrough%22%7D)\n\n**Pro功能**\n$(gitlens-graph)  [提交图](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化您的存储库并跟踪所有进行中的工作\n$(rocket)  [启动台](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — 保持专注并确保您的团队不受阻碍\n$(gitlens-code-suggestion)  [代码建议](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 让您的代码评审摆脱不必要的限制\n$(gitlens-cloud-patch)  [云补丁](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 轻松且安全地与您的团队共享代码\n$(gitlens-worktrees-view)  **工作树** — 同时处理多个分支\n$(gitlens-workspaces-view)  **工作区** — 将多个存储库分组并管理\n$(graph-scatter)  [可视化文件历史](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化文件的演变并快速识别最具影响力的更改是何时由谁做出的",
				"media": {
				"markdown": "walkthroughs/welcome/pro-reactivate.md"
				},
				"when": "gitlens:plus:state == 5"
			},
			{
				"id": "pro-paid",
				"title": "Pro增强功能",
				"description": "您拥有GitLens的全部功能，包括[Pro功能](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links)和[GitKraken DevEx平台](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links)。\n\n**Pro功能**\n$(gitlens-graph)  [提交图](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化您的存储库并跟踪所有进行中的工作\n$(rocket)  [启动台](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — 保持专注并确保您的团队不受阻碍\n$(gitlens-code-suggestion)  [代码建议](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 让您的代码评审摆脱不必要的限制\n$(gitlens-cloud-patch)  [云补丁](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — 轻松且安全地与您的团队共享代码\n$(gitlens-worktrees-view)  **工作树** — 同时处理多个分支\n$(gitlens-workspaces-view)  **工作区** — 将多个存储库分组并管理\n$(graph-scatter)  [可视化文件历史](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — 可视化文件的演变并快速识别最具影响力的更改是何时由谁做出的",
				"media": {
				"markdown": "walkthroughs/welcome/pro-paid.md"
				},
				"when": "gitlens:plus:state == 6"
			},
			{
				"id": "visualize",
				"title": "使用提交图和可视化文件历史进行可视化",
				"description": "**提交图**\n轻松可视化您的存储库并跟踪所有进行中的工作。\n使用丰富的提交搜索功能，找到您确切需要的内容。强大的过滤器允许您按特定提交、消息、作者、已更改的文件或文件，甚至特定的代码更改进行搜索。[了解更多](https://gitkraken.com/solutions/commit-graph?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[打开提交图](command:gitlens.showGraph)\n\n💡通过[切换提交图](command:gitlens.toggleGraph)命令快速切换图表或使用[切换最大化提交图](command:gitlens.toggleMaximizedGraph)命令将其最大化。\n**可视化文件历史**\n可视化文件的演变并快速识别最具影响力的更改是何时由谁做出的\n\n[打开可视化文件历史](command:gitlens.showTimelineView)",
				"media": {
				"altText": "提交图和可视化文件历史的插图",
				"svg": "walkthroughs/welcome/visualize.svg"
				}
			},
			{
				"id": "launchpad",
				"title": "使用启动台解除团队阻塞",
				"description": "**启动台**预览版将所有GitHub拉取请求汇总到一个统一的，可操作的列表中，以更好地跟踪进行中的工作、待处理的工作、评审等。保持专注并对最重要的项目采取行动，以确保您的团队不受阻碍。[了解更多](https://gitkraken.com/solutions/launchpad?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[打开启动台](command:gitlens.showLaunchpad?%7B%22source%22%3A%22walkthrough%22%7D)",
				"media": {
				"altText": "启动台的插图",
				"svg": "walkthroughs/welcome/launchpad-quick.svg"
				}
			},
			{
				"id": "code-collab",
				"title": "使用代码建议和云补丁进行协作",
				"description": "**代码建议** 预览\n\n让您的代码评审摆脱GitHub的限制性评论反馈风格。就像在Google文档上建议更改一样，从您正在编码的IDE中，建议项目中任何地方的代码更改，而不仅仅是PR中更改的代码行。[了解更多](https://gitkraken.com/solutions/code-suggest?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n**云补丁** 预览\n\n通过从您的WIP、提交或暂存中创建云补丁并共享生成的链接，轻松且安全地与您的团队成员或其他开发人员共享代码更改。使用云补丁可以及早协作，获取关于方向、方法等的反馈，最小化返工并简化您的工作流程。[了解更多](https://gitkraken.com/solutions/cloud-patches?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[打开云补丁](command:gitlens.showDraftsView)",
				"media": {
				"altText": "代码建议和云补丁的插图",
				"image": "walkthroughs/welcome/code-collab.png"
				}
			},
			{
				"id": "integrations",
				"title": "集成Git托管和问题服务",
				"description": "GitLens自动检测提交消息中的模式，为包括GitHub、GitLab、Gitea、Gerrit、Google Source、Bitbucket、Azure DevOps和自定义服务器在内的Git托管服务生成自动链接到拉取请求和问题。\n\n[配置自动链接](command:gitlens.showSettingsPage!autolinks)以与其他服务进行自定义模式匹配。\n\n**与GitHub、GitLab和Jira的丰富集成**\n连接[GitHub](command:gitlens.connectRemoteProvider)、[GitLab](command:gitlens.connectRemoteProvider)和[Jira](command:gitlens.plus.cloudIntegrations.manage?%7B%22integrationId%22%3A%22jira%22%2C%22source%22%3A%22walkthrough%22%2C%22detail%22%3A%7B%22action%22%3A%22connect%22%2C%22integration%22%3A%22jira%22%7D%7D)集成，以通过API增强自动链接的更多数据，将分支和提交与PR关联，并在VS Code中查看拉取请求。",
				"media": {
				"markdown": "walkthroughs/welcome/integrations.md"
				}
			},
			{
				"id": "more",
				"title": "更多功能！",
				"description": "**重置让你烦恼？**\n通过直观且用户友好的交互式重置编辑器，轻松可视化和配置交互式重置操作\n\n**记不住Git命令？**\n有了Git命令调色板，您不再需要记住这些命令 — 这是一个引导的、逐步体验的许多常见Git命令。\n\n[打开Git命令调色板](command:gitlens.gitCommands)\n\n**喜欢终端？**\n通过集成终端中的自动链接，快速跳转到关于提交、分支、标签等的更多详细信息。\n\n**不确定要找什么？**\n打开命令调色板，探索许多可用命令。\n\n[打开GitLens命令](command:workbench.action.quickOpen?%22>GitLens%3A%22)",
				"media": {
				"markdown": "walkthroughs/welcome/more-features.md"
				}
			}
			]
		}
		]
	},
	"scripts": {
	  "analyze:bundle": "webpack --mode production --env analyzeBundle",
	  "analyze:deps": "webpack --env analyzeDeps",
	  "build": "webpack --mode development",
	  "build:quick": "webpack --mode development --env skipLint",
	  "build:extension": "webpack --mode development --config-name extension:node",
	  "build:extension:browser": "webpack --mode development --config-name extension:webworker",
	  "build:webviews": "webpack --mode development --config-name webviews",
	  "build:icons": "yarn icons:svgo && yarn fantasticon && yarn icons:apply",
	  "build:tests": "tsc -p tsconfig.test.json && tsc-alias -p tsconfig.test.json",
	  "-build:tests": "webpack -c webpack.config.test.js --mode development",
	  "bundle": "webpack --mode production",
	  "bundle:extension": "webpack --mode production --config-name extension:node",
	  "clean": "npx rimraf dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo",
	  "copy:images": "webpack --config webpack.config.images.js",
	  "graph:link": "yarn link @gitkraken/gitkraken-components",
	  "graph:link:main": "pushd \"../GitKrakenComponents\" && yarn link && popd && yarn graph:link",
	  "graph:unlink": "yarn unlink @gitkraken/gitkraken-components && yarn install --force",
	  "graph:unlink:main": "yarn graph:unlink && pushd \"../GitKrakenComponents\" && yarn unlink && popd",
	  "icons:apply": "node ./scripts/applyIconsContribution.mjs",
	  "icons:svgo": "svgo -q -f ./images/icons/ --config svgo.config.js",
	  "lint": "yarn run lint:clear-cache && eslint \"src/**/*.ts?(x)\"",
	  "lint:webviews": "yarn run lint:clear-cache && eslint \"src/webviews/apps/**/*.ts?(x)\"",
	  "lint:clear-cache": "npx rimraf .eslintcache",
	  "package": "vsce package --yarn",
	  "package-pre": "yarn run patch-pre && yarn run package --pre-release",
	  "patch-pre": "node ./scripts/applyPreReleasePatch.js",
	  "prep-release": "node ./scripts/prep-release.js",
	  "pretty": "prettier --config .prettierrc --write .",
	  "pretty:check": "prettier --config .prettierrc --check .",
	  "pub": "vsce publish --yarn",
	  "pub-pre": "vsce publish --yarn --pre-release",
	  "rebuild": "yarn run reset && yarn run build",
	  "reset": "yarn run clean && yarn --frozen-lockfile",
	  "test": "node ./out/test/runTest.js",
	  "watch": "webpack --watch --mode development",
	  "watch:extension": "webpack --watch --mode development --config-name extension",
	  "watch:webviews": "webpack --watch --mode development --config-name webviews",
	  "watch:tests": "concurrently \"tsc-alias -p tsconfig.test.json -w\" \"tsc -p tsconfig.test.json -w\"",
	  "-watch:tests": "webpack --watch -c webpack.config.test.js --mode development",
	  "web": "vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens",
	  "web:serve": "node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('npx serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"",
	  "update-dts": "pushd \"src/@types\" && npx @vscode/dts dev && popd",
	  "update-dts:main": "pushd \"src/@types\" && npx @vscode/dts main && popd",
	  "update-emoji": "node ./scripts/generateEmojiShortcodeMap.mjs",
	  "update-licenses": "node ./scripts/generateLicenses.mjs",
	  "-pretest": "yarn run build:tests",
	  "vscode:prepublish": "yarn run bundle"
	},
	"dependencies": {
	  "@gitkraken/gitkraken-components": "10.3.0",
	  "@gitkraken/provider-apis": "0.22.9",
	  "@gitkraken/shared-web-components": "0.1.1-rc.15",
	  "@lit/react": "1.0.5",
	  "@microsoft/fast-element": "1.13.0",
	  "@octokit/graphql": "8.1.1",
	  "@octokit/request": "9.1.1",
	  "@octokit/types": "13.5.0",
	  "@opentelemetry/api": "1.9.0",
	  "@opentelemetry/exporter-trace-otlp-http": "0.52.0",
	  "@opentelemetry/sdk-trace-base": "1.25.0",
	  "@shoelace-style/shoelace": "2.15.1",
	  "@vscode/codicons": "0.0.36",
	  "@vscode/webview-ui-toolkit": "1.4.0",
	  "ansi-regex": "6.0.1",
	  "billboard.js": "3.12.4",
	  "fast-string-truncated-width": "1.1.0",
	  "https-proxy-agent": "5.0.1",
	  "iconv-lite": "0.6.3",
	  "lit": "3.1.4",
	  "node-fetch": "2.7.0",
	  "os-browserify": "0.3.0",
	  "path-browserify": "1.0.1",
	  "react": "16.8.4",
	  "react-dom": "16.8.4",
	  "sortablejs": "1.15.0"
	},
	"devDependencies": {
	  "@eamodio/eslint-lite-webpack-plugin": "0.0.8",
	  "@swc/core": "1.5.29",
	  "@twbs/fantasticon": "3.0.0",
	  "@types/mocha": "10.0.6",
	  "@types/node": "18.15.0",
	  "@types/react": "17.0.80",
	  "@types/react-dom": "17.0.21",
	  "@types/sortablejs": "1.15.8",
	  "@types/vscode": "1.82.0",
	  "@typescript-eslint/eslint-plugin": "7.13.0",
	  "@typescript-eslint/parser": "7.13.0",
	  "@vscode/test-electron": "2.4.0",
	  "@vscode/test-web": "0.0.54",
	  "@vscode/vsce": "2.27.0",
	  "circular-dependency-plugin": "5.2.2",
	  "clean-webpack-plugin": "4.0.0",
	  "concurrently": "8.2.2",
	  "copy-webpack-plugin": "12.0.2",
	  "csp-html-webpack-plugin": "5.1.0",
	  "css-loader": "7.1.2",
	  "css-minimizer-webpack-plugin": "7.0.0",
	  "cssnano-preset-advanced": "7.0.2",
	  "esbuild": "0.21.5",
	  "esbuild-loader": "4.1.0",
	  "esbuild-sass-plugin": "3.3.1",
	  "eslint": "8.57.0",
	  "eslint-cli": "1.1.1",
	  "eslint-import-resolver-typescript": "3.6.1",
	  "eslint-plugin-anti-trojan-source": "1.1.1",
	  "eslint-plugin-import": "2.29.1",
	  "eslint-plugin-lit": "1.14.0",
	  "eslint-plugin-wc": "2.1.0",
	  "fork-ts-checker-webpack-plugin": "6.5.3",
	  "glob": "10.4.1",
	  "html-loader": "5.0.0",
	  "html-webpack-plugin": "5.6.0",
	  "image-minimizer-webpack-plugin": "4.0.2",
	  "license-checker-rseidelsohn": "4.3.0",
	  "lz-string": "1.5.0",
	  "mini-css-extract-plugin": "2.9.0",
	  "mocha": "10.4.0",
	  "prettier": "3.1.0",
	  "sass": "1.77.5",
	  "sass-loader": "14.2.1",
	  "schema-utils": "4.2.0",
	  "sharp": "0.32.6",
	  "svgo": "3.3.2",
	  "terser-webpack-plugin": "5.3.10",
	  "ts-loader": "9.5.1",
	  "tsc-alias": "1.8.10",
	  "typescript": "5.5.1-rc",
	  "webpack": "5.92.0",
	  "webpack-bundle-analyzer": "4.10.2",
	  "webpack-cli": "5.1.4",
	  "webpack-node-externals": "3.0.0",
	  "webpack-require-from": "1.8.6"
	},
	"resolutions": {
	  "esbuild": "0.21.5",
	  "iconv-lite": "0.6.3",
	  "node-fetch": "2.7.0",
	  "semver-regex": "4.0.5"
	}
}
